// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitor/system_status.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "monitor/system_status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace monitor {

namespace {

const ::google::protobuf::Descriptor* HardwareStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HardwareStatus_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HardwareStatus_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ModuleStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModuleStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemStatus_ModulesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SystemStatus_HardwareEntry_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Summary_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_monitor_2fsystem_5fstatus_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_monitor_2fsystem_5fstatus_2eproto() {
  protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "monitor/system_status.proto");
  GOOGLE_CHECK(file != NULL);
  HardwareStatus_descriptor_ = file->message_type(0);
  static const int HardwareStatus_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, summary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, detailed_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, gps_unstable_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, topic_status_),
  };
  HardwareStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HardwareStatus_descriptor_,
      HardwareStatus::default_instance_,
      HardwareStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(HardwareStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareStatus, _internal_metadata_),
      -1);
  HardwareStatus_Status_descriptor_ = HardwareStatus_descriptor_->enum_type(0);
  ModuleStatus_descriptor_ = file->message_type(1);
  static const int ModuleStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleStatus, summary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleStatus, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleStatus, process_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleStatus, topic_status_),
  };
  ModuleStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModuleStatus_descriptor_,
      ModuleStatus::default_instance_,
      ModuleStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(ModuleStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleStatus, _internal_metadata_),
      -1);
  SystemStatus_descriptor_ = file->message_type(2);
  static const int SystemStatus_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, modules_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, hardware_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, passenger_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, safety_mode_trigger_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, require_emergency_stop_),
  };
  SystemStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SystemStatus_descriptor_,
      SystemStatus::default_instance_,
      SystemStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(SystemStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemStatus, _internal_metadata_),
      -1);
  SystemStatus_ModulesEntry_descriptor_ = SystemStatus_descriptor_->nested_type(0);
  SystemStatus_HardwareEntry_descriptor_ = SystemStatus_descriptor_->nested_type(1);
  Summary_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_monitor_2fsystem_5fstatus_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HardwareStatus_descriptor_, &HardwareStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModuleStatus_descriptor_, &ModuleStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SystemStatus_descriptor_, &SystemStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SystemStatus_ModulesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::apollo::monitor::ModuleStatus,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SystemStatus_ModulesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SystemStatus_HardwareEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::apollo::monitor::HardwareStatus,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SystemStatus_HardwareEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_monitor_2fsystem_5fstatus_2eproto() {
  delete HardwareStatus::default_instance_;
  delete HardwareStatus_reflection_;
  delete ModuleStatus::default_instance_;
  delete ModuleStatus_reflection_;
  delete SystemStatus::default_instance_;
  delete SystemStatus_reflection_;
}

void protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::common::protobuf_AddDesc_common_2fheader_2eproto();
  ::apollo::monitor::protobuf_AddDesc_monitor_2fmonitor_5fconf_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033monitor/system_status.proto\022\016apollo.mo"
    "nitor\032\023common/header.proto\032\032monitor/moni"
    "tor_conf.proto\"\204\003\n\016HardwareStatus\0221\n\007sum"
    "mary\030\001 \001(\0162\027.apollo.monitor.Summary:\007UNK"
    "NOWN\022\013\n\003msg\030\002 \001(\t\022<\n\006status\030\003 \001(\0162%.apol"
    "lo.monitor.HardwareStatus.Status:\005UNDEF\022"
    "\024\n\014detailed_msg\030\006 \001(\t\022\037\n\027gps_unstable_st"
    "art_time\030\004 \001(\001\0221\n\014topic_status\030\005 \001(\0132\033.a"
    "pollo.monitor.TopicStatus\"\211\001\n\006Status\022\006\n\002"
    "OK\020\000\022\r\n\tNOT_READY\020\001\022\017\n\013NOT_PRESENT\020\002\022\010\n\004"
    "WARN\020\006\022\007\n\003ERR\020\003\022\030\n\024GPS_UNSTABLE_WARNING\020"
    "\004\022\026\n\022GPS_UNSTABLE_ERROR\020\005\022\022\n\005UNDEF\020\377\377\377\377\377"
    "\377\377\377\377\001\"\270\001\n\014ModuleStatus\0221\n\007summary\030\001 \001(\0162"
    "\027.apollo.monitor.Summary:\007UNKNOWN\022\013\n\003msg"
    "\030\002 \001(\t\0225\n\016process_status\030\003 \001(\0132\035.apollo."
    "monitor.ProcessStatus\0221\n\014topic_status\030\004 "
    "\001(\0132\033.apollo.monitor.TopicStatus\"\247\003\n\014Sys"
    "temStatus\022%\n\006header\030\001 \001(\0132\025.apollo.commo"
    "n.Header\022:\n\007modules\030\002 \003(\0132).apollo.monit"
    "or.SystemStatus.ModulesEntry\022<\n\010hardware"
    "\030\003 \003(\0132*.apollo.monitor.SystemStatus.Har"
    "dwareEntry\022\025\n\rpassenger_msg\030\004 \001(\t\022 \n\030saf"
    "ety_mode_trigger_time\030\005 \001(\001\022\036\n\026require_e"
    "mergency_stop\030\006 \001(\010\032L\n\014ModulesEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022+\n\005value\030\002 \001(\0132\034.apollo.monitor"
    ".ModuleStatus:\0028\001\032O\n\rHardwareEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.apollo.monitor."
    "HardwareStatus:\0028\001*>\n\007Summary\022\013\n\007UNKNOWN"
    "\020\000\022\006\n\002OK\020\001\022\010\n\004WARN\020\002\022\t\n\005ERROR\020\003\022\t\n\005FATAL"
    "\020\004", 1162);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "monitor/system_status.proto", &protobuf_RegisterTypes);
  HardwareStatus::default_instance_ = new HardwareStatus();
  ModuleStatus::default_instance_ = new ModuleStatus();
  SystemStatus::default_instance_ = new SystemStatus();
  HardwareStatus::default_instance_->InitAsDefaultInstance();
  ModuleStatus::default_instance_->InitAsDefaultInstance();
  SystemStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_monitor_2fsystem_5fstatus_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_monitor_2fsystem_5fstatus_2eproto {
  StaticDescriptorInitializer_monitor_2fsystem_5fstatus_2eproto() {
    protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto();
  }
} static_descriptor_initializer_monitor_2fsystem_5fstatus_2eproto_;
const ::google::protobuf::EnumDescriptor* Summary_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Summary_descriptor_;
}
bool Summary_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* HardwareStatus_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HardwareStatus_Status_descriptor_;
}
bool HardwareStatus_Status_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HardwareStatus_Status HardwareStatus::OK;
const HardwareStatus_Status HardwareStatus::NOT_READY;
const HardwareStatus_Status HardwareStatus::NOT_PRESENT;
const HardwareStatus_Status HardwareStatus::WARN;
const HardwareStatus_Status HardwareStatus::ERR;
const HardwareStatus_Status HardwareStatus::GPS_UNSTABLE_WARNING;
const HardwareStatus_Status HardwareStatus::GPS_UNSTABLE_ERROR;
const HardwareStatus_Status HardwareStatus::UNDEF;
const HardwareStatus_Status HardwareStatus::Status_MIN;
const HardwareStatus_Status HardwareStatus::Status_MAX;
const int HardwareStatus::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HardwareStatus::kSummaryFieldNumber;
const int HardwareStatus::kMsgFieldNumber;
const int HardwareStatus::kStatusFieldNumber;
const int HardwareStatus::kDetailedMsgFieldNumber;
const int HardwareStatus::kGpsUnstableStartTimeFieldNumber;
const int HardwareStatus::kTopicStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HardwareStatus::HardwareStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.HardwareStatus)
}

void HardwareStatus::InitAsDefaultInstance() {
  topic_status_ = const_cast< ::apollo::monitor::TopicStatus*>(&::apollo::monitor::TopicStatus::default_instance());
}

HardwareStatus::HardwareStatus(const HardwareStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.HardwareStatus)
}

void HardwareStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  summary_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = -1;
  detailed_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_unstable_start_time_ = 0;
  topic_status_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HardwareStatus::~HardwareStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.HardwareStatus)
  SharedDtor();
}

void HardwareStatus::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailed_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete topic_status_;
  }
}

void HardwareStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HardwareStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HardwareStatus_descriptor_;
}

const HardwareStatus& HardwareStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto();
  return *default_instance_;
}

HardwareStatus* HardwareStatus::default_instance_ = NULL;

HardwareStatus* HardwareStatus::New(::google::protobuf::Arena* arena) const {
  HardwareStatus* n = new HardwareStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HardwareStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.HardwareStatus)
  if (_has_bits_[0 / 32] & 63u) {
    summary_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    status_ = -1;
    if (has_detailed_msg()) {
      detailed_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    gps_unstable_start_time_ = 0;
    if (has_topic_status()) {
      if (topic_status_ != NULL) topic_status_->::apollo::monitor::TopicStatus::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HardwareStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.HardwareStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::monitor::Summary_IsValid(value)) {
            set_summary(static_cast< ::apollo::monitor::Summary >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.HardwareStatus.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .apollo.monitor.HardwareStatus.Status status = 3 [default = UNDEF];
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::monitor::HardwareStatus_Status_IsValid(value)) {
            set_status(static_cast< ::apollo::monitor::HardwareStatus_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_gps_unstable_start_time;
        break;
      }

      // optional double gps_unstable_start_time = 4;
      case 4: {
        if (tag == 33) {
         parse_gps_unstable_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gps_unstable_start_time_)));
          set_has_gps_unstable_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_topic_status;
        break;
      }

      // optional .apollo.monitor.TopicStatus topic_status = 5;
      case 5: {
        if (tag == 42) {
         parse_topic_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_detailed_msg;
        break;
      }

      // optional string detailed_msg = 6;
      case 6: {
        if (tag == 50) {
         parse_detailed_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailed_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->detailed_msg().data(), this->detailed_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.HardwareStatus.detailed_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.HardwareStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.HardwareStatus)
  return false;
#undef DO_
}

void HardwareStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.HardwareStatus)
  // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
  if (has_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->summary(), output);
  }

  // optional string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.HardwareStatus.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .apollo.monitor.HardwareStatus.Status status = 3 [default = UNDEF];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional double gps_unstable_start_time = 4;
  if (has_gps_unstable_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->gps_unstable_start_time(), output);
  }

  // optional .apollo.monitor.TopicStatus topic_status = 5;
  if (has_topic_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->topic_status_, output);
  }

  // optional string detailed_msg = 6;
  if (has_detailed_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detailed_msg().data(), this->detailed_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.HardwareStatus.detailed_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->detailed_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.HardwareStatus)
}

::google::protobuf::uint8* HardwareStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.HardwareStatus)
  // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
  if (has_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->summary(), target);
  }

  // optional string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.HardwareStatus.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .apollo.monitor.HardwareStatus.Status status = 3 [default = UNDEF];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional double gps_unstable_start_time = 4;
  if (has_gps_unstable_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->gps_unstable_start_time(), target);
  }

  // optional .apollo.monitor.TopicStatus topic_status = 5;
  if (has_topic_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->topic_status_, false, target);
  }

  // optional string detailed_msg = 6;
  if (has_detailed_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detailed_msg().data(), this->detailed_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.HardwareStatus.detailed_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->detailed_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.HardwareStatus)
  return target;
}

int HardwareStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.HardwareStatus)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
    if (has_summary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->summary());
    }

    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .apollo.monitor.HardwareStatus.Status status = 3 [default = UNDEF];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string detailed_msg = 6;
    if (has_detailed_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->detailed_msg());
    }

    // optional double gps_unstable_start_time = 4;
    if (has_gps_unstable_start_time()) {
      total_size += 1 + 8;
    }

    // optional .apollo.monitor.TopicStatus topic_status = 5;
    if (has_topic_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->topic_status_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HardwareStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.HardwareStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HardwareStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HardwareStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.HardwareStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.HardwareStatus)
    MergeFrom(*source);
  }
}

void HardwareStatus::MergeFrom(const HardwareStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.HardwareStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_summary()) {
      set_summary(from.summary());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_detailed_msg()) {
      set_has_detailed_msg();
      detailed_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailed_msg_);
    }
    if (from.has_gps_unstable_start_time()) {
      set_gps_unstable_start_time(from.gps_unstable_start_time());
    }
    if (from.has_topic_status()) {
      mutable_topic_status()->::apollo::monitor::TopicStatus::MergeFrom(from.topic_status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HardwareStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.HardwareStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HardwareStatus::CopyFrom(const HardwareStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.HardwareStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HardwareStatus::IsInitialized() const {

  return true;
}

void HardwareStatus::Swap(HardwareStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HardwareStatus::InternalSwap(HardwareStatus* other) {
  std::swap(summary_, other->summary_);
  msg_.Swap(&other->msg_);
  std::swap(status_, other->status_);
  detailed_msg_.Swap(&other->detailed_msg_);
  std::swap(gps_unstable_start_time_, other->gps_unstable_start_time_);
  std::swap(topic_status_, other->topic_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HardwareStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HardwareStatus_descriptor_;
  metadata.reflection = HardwareStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HardwareStatus

// optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
bool HardwareStatus::has_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HardwareStatus::set_has_summary() {
  _has_bits_[0] |= 0x00000001u;
}
void HardwareStatus::clear_has_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
void HardwareStatus::clear_summary() {
  summary_ = 0;
  clear_has_summary();
}
 ::apollo::monitor::Summary HardwareStatus::summary() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.HardwareStatus.summary)
  return static_cast< ::apollo::monitor::Summary >(summary_);
}
 void HardwareStatus::set_summary(::apollo::monitor::Summary value) {
  assert(::apollo::monitor::Summary_IsValid(value));
  set_has_summary();
  summary_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.HardwareStatus.summary)
}

// optional string msg = 2;
bool HardwareStatus::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HardwareStatus::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void HardwareStatus::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void HardwareStatus::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& HardwareStatus::msg() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.HardwareStatus.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HardwareStatus::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.HardwareStatus.msg)
}
 void HardwareStatus::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.HardwareStatus.msg)
}
 void HardwareStatus::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.HardwareStatus.msg)
}
 ::std::string* HardwareStatus::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.HardwareStatus.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HardwareStatus::release_msg() {
  // @@protoc_insertion_point(field_release:apollo.monitor.HardwareStatus.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HardwareStatus::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.HardwareStatus.msg)
}

// optional .apollo.monitor.HardwareStatus.Status status = 3 [default = UNDEF];
bool HardwareStatus::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HardwareStatus::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void HardwareStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void HardwareStatus::clear_status() {
  status_ = -1;
  clear_has_status();
}
 ::apollo::monitor::HardwareStatus_Status HardwareStatus::status() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.HardwareStatus.status)
  return static_cast< ::apollo::monitor::HardwareStatus_Status >(status_);
}
 void HardwareStatus::set_status(::apollo::monitor::HardwareStatus_Status value) {
  assert(::apollo::monitor::HardwareStatus_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.HardwareStatus.status)
}

// optional string detailed_msg = 6;
bool HardwareStatus::has_detailed_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HardwareStatus::set_has_detailed_msg() {
  _has_bits_[0] |= 0x00000008u;
}
void HardwareStatus::clear_has_detailed_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
void HardwareStatus::clear_detailed_msg() {
  detailed_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detailed_msg();
}
 const ::std::string& HardwareStatus::detailed_msg() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.HardwareStatus.detailed_msg)
  return detailed_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HardwareStatus::set_detailed_msg(const ::std::string& value) {
  set_has_detailed_msg();
  detailed_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.HardwareStatus.detailed_msg)
}
 void HardwareStatus::set_detailed_msg(const char* value) {
  set_has_detailed_msg();
  detailed_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.HardwareStatus.detailed_msg)
}
 void HardwareStatus::set_detailed_msg(const char* value, size_t size) {
  set_has_detailed_msg();
  detailed_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.HardwareStatus.detailed_msg)
}
 ::std::string* HardwareStatus::mutable_detailed_msg() {
  set_has_detailed_msg();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.HardwareStatus.detailed_msg)
  return detailed_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HardwareStatus::release_detailed_msg() {
  // @@protoc_insertion_point(field_release:apollo.monitor.HardwareStatus.detailed_msg)
  clear_has_detailed_msg();
  return detailed_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HardwareStatus::set_allocated_detailed_msg(::std::string* detailed_msg) {
  if (detailed_msg != NULL) {
    set_has_detailed_msg();
  } else {
    clear_has_detailed_msg();
  }
  detailed_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailed_msg);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.HardwareStatus.detailed_msg)
}

// optional double gps_unstable_start_time = 4;
bool HardwareStatus::has_gps_unstable_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HardwareStatus::set_has_gps_unstable_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
void HardwareStatus::clear_has_gps_unstable_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void HardwareStatus::clear_gps_unstable_start_time() {
  gps_unstable_start_time_ = 0;
  clear_has_gps_unstable_start_time();
}
 double HardwareStatus::gps_unstable_start_time() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.HardwareStatus.gps_unstable_start_time)
  return gps_unstable_start_time_;
}
 void HardwareStatus::set_gps_unstable_start_time(double value) {
  set_has_gps_unstable_start_time();
  gps_unstable_start_time_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.HardwareStatus.gps_unstable_start_time)
}

// optional .apollo.monitor.TopicStatus topic_status = 5;
bool HardwareStatus::has_topic_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HardwareStatus::set_has_topic_status() {
  _has_bits_[0] |= 0x00000020u;
}
void HardwareStatus::clear_has_topic_status() {
  _has_bits_[0] &= ~0x00000020u;
}
void HardwareStatus::clear_topic_status() {
  if (topic_status_ != NULL) topic_status_->::apollo::monitor::TopicStatus::Clear();
  clear_has_topic_status();
}
const ::apollo::monitor::TopicStatus& HardwareStatus::topic_status() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.HardwareStatus.topic_status)
  return topic_status_ != NULL ? *topic_status_ : *default_instance_->topic_status_;
}
::apollo::monitor::TopicStatus* HardwareStatus::mutable_topic_status() {
  set_has_topic_status();
  if (topic_status_ == NULL) {
    topic_status_ = new ::apollo::monitor::TopicStatus;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.HardwareStatus.topic_status)
  return topic_status_;
}
::apollo::monitor::TopicStatus* HardwareStatus::release_topic_status() {
  // @@protoc_insertion_point(field_release:apollo.monitor.HardwareStatus.topic_status)
  clear_has_topic_status();
  ::apollo::monitor::TopicStatus* temp = topic_status_;
  topic_status_ = NULL;
  return temp;
}
void HardwareStatus::set_allocated_topic_status(::apollo::monitor::TopicStatus* topic_status) {
  delete topic_status_;
  topic_status_ = topic_status;
  if (topic_status) {
    set_has_topic_status();
  } else {
    clear_has_topic_status();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.HardwareStatus.topic_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleStatus::kSummaryFieldNumber;
const int ModuleStatus::kMsgFieldNumber;
const int ModuleStatus::kProcessStatusFieldNumber;
const int ModuleStatus::kTopicStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleStatus::ModuleStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.ModuleStatus)
}

void ModuleStatus::InitAsDefaultInstance() {
  process_status_ = const_cast< ::apollo::monitor::ProcessStatus*>(&::apollo::monitor::ProcessStatus::default_instance());
  topic_status_ = const_cast< ::apollo::monitor::TopicStatus*>(&::apollo::monitor::TopicStatus::default_instance());
}

ModuleStatus::ModuleStatus(const ModuleStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.ModuleStatus)
}

void ModuleStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  summary_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  process_status_ = NULL;
  topic_status_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ModuleStatus::~ModuleStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.ModuleStatus)
  SharedDtor();
}

void ModuleStatus::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete process_status_;
    delete topic_status_;
  }
}

void ModuleStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModuleStatus_descriptor_;
}

const ModuleStatus& ModuleStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto();
  return *default_instance_;
}

ModuleStatus* ModuleStatus::default_instance_ = NULL;

ModuleStatus* ModuleStatus::New(::google::protobuf::Arena* arena) const {
  ModuleStatus* n = new ModuleStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModuleStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.ModuleStatus)
  if (_has_bits_[0 / 32] & 15u) {
    summary_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_process_status()) {
      if (process_status_ != NULL) process_status_->::apollo::monitor::ProcessStatus::Clear();
    }
    if (has_topic_status()) {
      if (topic_status_ != NULL) topic_status_->::apollo::monitor::TopicStatus::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ModuleStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.ModuleStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::monitor::Summary_IsValid(value)) {
            set_summary(static_cast< ::apollo::monitor::Summary >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.ModuleStatus.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_process_status;
        break;
      }

      // optional .apollo.monitor.ProcessStatus process_status = 3;
      case 3: {
        if (tag == 26) {
         parse_process_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_process_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_topic_status;
        break;
      }

      // optional .apollo.monitor.TopicStatus topic_status = 4;
      case 4: {
        if (tag == 34) {
         parse_topic_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.ModuleStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.ModuleStatus)
  return false;
#undef DO_
}

void ModuleStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.ModuleStatus)
  // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
  if (has_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->summary(), output);
  }

  // optional string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.ModuleStatus.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .apollo.monitor.ProcessStatus process_status = 3;
  if (has_process_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->process_status_, output);
  }

  // optional .apollo.monitor.TopicStatus topic_status = 4;
  if (has_topic_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->topic_status_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.ModuleStatus)
}

::google::protobuf::uint8* ModuleStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.ModuleStatus)
  // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
  if (has_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->summary(), target);
  }

  // optional string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.ModuleStatus.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .apollo.monitor.ProcessStatus process_status = 3;
  if (has_process_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->process_status_, false, target);
  }

  // optional .apollo.monitor.TopicStatus topic_status = 4;
  if (has_topic_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->topic_status_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.ModuleStatus)
  return target;
}

int ModuleStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.ModuleStatus)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
    if (has_summary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->summary());
    }

    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .apollo.monitor.ProcessStatus process_status = 3;
    if (has_process_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->process_status_);
    }

    // optional .apollo.monitor.TopicStatus topic_status = 4;
    if (has_topic_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->topic_status_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.ModuleStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ModuleStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.ModuleStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.ModuleStatus)
    MergeFrom(*source);
  }
}

void ModuleStatus::MergeFrom(const ModuleStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.ModuleStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_summary()) {
      set_summary(from.summary());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_process_status()) {
      mutable_process_status()->::apollo::monitor::ProcessStatus::MergeFrom(from.process_status());
    }
    if (from.has_topic_status()) {
      mutable_topic_status()->::apollo::monitor::TopicStatus::MergeFrom(from.topic_status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ModuleStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.ModuleStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleStatus::CopyFrom(const ModuleStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.ModuleStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleStatus::IsInitialized() const {

  return true;
}

void ModuleStatus::Swap(ModuleStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleStatus::InternalSwap(ModuleStatus* other) {
  std::swap(summary_, other->summary_);
  msg_.Swap(&other->msg_);
  std::swap(process_status_, other->process_status_);
  std::swap(topic_status_, other->topic_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModuleStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModuleStatus_descriptor_;
  metadata.reflection = ModuleStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModuleStatus

// optional .apollo.monitor.Summary summary = 1 [default = UNKNOWN];
bool ModuleStatus::has_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ModuleStatus::set_has_summary() {
  _has_bits_[0] |= 0x00000001u;
}
void ModuleStatus::clear_has_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
void ModuleStatus::clear_summary() {
  summary_ = 0;
  clear_has_summary();
}
 ::apollo::monitor::Summary ModuleStatus::summary() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.ModuleStatus.summary)
  return static_cast< ::apollo::monitor::Summary >(summary_);
}
 void ModuleStatus::set_summary(::apollo::monitor::Summary value) {
  assert(::apollo::monitor::Summary_IsValid(value));
  set_has_summary();
  summary_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.ModuleStatus.summary)
}

// optional string msg = 2;
bool ModuleStatus::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ModuleStatus::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void ModuleStatus::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void ModuleStatus::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& ModuleStatus::msg() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.ModuleStatus.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModuleStatus::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.ModuleStatus.msg)
}
 void ModuleStatus::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.ModuleStatus.msg)
}
 void ModuleStatus::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.ModuleStatus.msg)
}
 ::std::string* ModuleStatus::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.ModuleStatus.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ModuleStatus::release_msg() {
  // @@protoc_insertion_point(field_release:apollo.monitor.ModuleStatus.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ModuleStatus::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.ModuleStatus.msg)
}

// optional .apollo.monitor.ProcessStatus process_status = 3;
bool ModuleStatus::has_process_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ModuleStatus::set_has_process_status() {
  _has_bits_[0] |= 0x00000004u;
}
void ModuleStatus::clear_has_process_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void ModuleStatus::clear_process_status() {
  if (process_status_ != NULL) process_status_->::apollo::monitor::ProcessStatus::Clear();
  clear_has_process_status();
}
const ::apollo::monitor::ProcessStatus& ModuleStatus::process_status() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.ModuleStatus.process_status)
  return process_status_ != NULL ? *process_status_ : *default_instance_->process_status_;
}
::apollo::monitor::ProcessStatus* ModuleStatus::mutable_process_status() {
  set_has_process_status();
  if (process_status_ == NULL) {
    process_status_ = new ::apollo::monitor::ProcessStatus;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.ModuleStatus.process_status)
  return process_status_;
}
::apollo::monitor::ProcessStatus* ModuleStatus::release_process_status() {
  // @@protoc_insertion_point(field_release:apollo.monitor.ModuleStatus.process_status)
  clear_has_process_status();
  ::apollo::monitor::ProcessStatus* temp = process_status_;
  process_status_ = NULL;
  return temp;
}
void ModuleStatus::set_allocated_process_status(::apollo::monitor::ProcessStatus* process_status) {
  delete process_status_;
  process_status_ = process_status;
  if (process_status) {
    set_has_process_status();
  } else {
    clear_has_process_status();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.ModuleStatus.process_status)
}

// optional .apollo.monitor.TopicStatus topic_status = 4;
bool ModuleStatus::has_topic_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ModuleStatus::set_has_topic_status() {
  _has_bits_[0] |= 0x00000008u;
}
void ModuleStatus::clear_has_topic_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void ModuleStatus::clear_topic_status() {
  if (topic_status_ != NULL) topic_status_->::apollo::monitor::TopicStatus::Clear();
  clear_has_topic_status();
}
const ::apollo::monitor::TopicStatus& ModuleStatus::topic_status() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.ModuleStatus.topic_status)
  return topic_status_ != NULL ? *topic_status_ : *default_instance_->topic_status_;
}
::apollo::monitor::TopicStatus* ModuleStatus::mutable_topic_status() {
  set_has_topic_status();
  if (topic_status_ == NULL) {
    topic_status_ = new ::apollo::monitor::TopicStatus;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.ModuleStatus.topic_status)
  return topic_status_;
}
::apollo::monitor::TopicStatus* ModuleStatus::release_topic_status() {
  // @@protoc_insertion_point(field_release:apollo.monitor.ModuleStatus.topic_status)
  clear_has_topic_status();
  ::apollo::monitor::TopicStatus* temp = topic_status_;
  topic_status_ = NULL;
  return temp;
}
void ModuleStatus::set_allocated_topic_status(::apollo::monitor::TopicStatus* topic_status) {
  delete topic_status_;
  topic_status_ = topic_status;
  if (topic_status) {
    set_has_topic_status();
  } else {
    clear_has_topic_status();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.ModuleStatus.topic_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemStatus::kHeaderFieldNumber;
const int SystemStatus::kModulesFieldNumber;
const int SystemStatus::kHardwareFieldNumber;
const int SystemStatus::kPassengerMsgFieldNumber;
const int SystemStatus::kSafetyModeTriggerTimeFieldNumber;
const int SystemStatus::kRequireEmergencyStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemStatus::SystemStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.SystemStatus)
}

void SystemStatus::InitAsDefaultInstance() {
  header_ = const_cast< ::apollo::common::Header*>(&::apollo::common::Header::default_instance());
}

SystemStatus::SystemStatus(const SystemStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.SystemStatus)
}

void SystemStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  header_ = NULL;
  modules_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  modules_.SetEntryDescriptor(
      &::apollo::monitor::SystemStatus_ModulesEntry_descriptor_);
  hardware_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  hardware_.SetEntryDescriptor(
      &::apollo::monitor::SystemStatus_HardwareEntry_descriptor_);
  passenger_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safety_mode_trigger_time_ = 0;
  require_emergency_stop_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemStatus::~SystemStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.SystemStatus)
  SharedDtor();
}

void SystemStatus::SharedDtor() {
  passenger_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete header_;
  }
}

void SystemStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemStatus_descriptor_;
}

const SystemStatus& SystemStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_monitor_2fsystem_5fstatus_2eproto();
  return *default_instance_;
}

SystemStatus* SystemStatus::default_instance_ = NULL;

SystemStatus* SystemStatus::New(::google::protobuf::Arena* arena) const {
  SystemStatus* n = new SystemStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.SystemStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SystemStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SystemStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 57u) {
    ZR_(safety_mode_trigger_time_, require_emergency_stop_);
    if (has_header()) {
      if (header_ != NULL) header_->::apollo::common::Header::Clear();
    }
    if (has_passenger_msg()) {
      passenger_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  modules_.Clear();
  hardware_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SystemStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.SystemStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_modules;
        break;
      }

      // map<string, .apollo.monitor.ModuleStatus> modules = 2;
      case 2: {
        if (tag == 18) {
         parse_modules:
          DO_(input->IncrementRecursionDepth());
         parse_loop_modules:
          SystemStatus_ModulesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::apollo::monitor::ModuleStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus > > parser(&modules_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.SystemStatus.ModulesEntry.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_modules;
        if (input->ExpectTag(26)) goto parse_loop_hardware;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .apollo.monitor.HardwareStatus> hardware = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_hardware:
          SystemStatus_HardwareEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::apollo::monitor::HardwareStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus > > parser(&hardware_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.SystemStatus.HardwareEntry.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_hardware;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_passenger_msg;
        break;
      }

      // optional string passenger_msg = 4;
      case 4: {
        if (tag == 34) {
         parse_passenger_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passenger_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passenger_msg().data(), this->passenger_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.SystemStatus.passenger_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_safety_mode_trigger_time;
        break;
      }

      // optional double safety_mode_trigger_time = 5;
      case 5: {
        if (tag == 41) {
         parse_safety_mode_trigger_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &safety_mode_trigger_time_)));
          set_has_safety_mode_trigger_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_require_emergency_stop;
        break;
      }

      // optional bool require_emergency_stop = 6;
      case 6: {
        if (tag == 48) {
         parse_require_emergency_stop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &require_emergency_stop_)));
          set_has_require_emergency_stop();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.SystemStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.SystemStatus)
  return false;
#undef DO_
}

void SystemStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.SystemStatus)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // map<string, .apollo.monitor.ModuleStatus> modules = 2;
  if (!this->modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.monitor.SystemStatus.ModulesEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->modules().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SystemStatus_ModulesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(modules_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SystemStatus_ModulesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it) {
        entry.reset(modules_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.monitor.HardwareStatus> hardware = 3;
  if (!this->hardware().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.monitor.SystemStatus.HardwareEntry.key");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->hardware().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hardware().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_iterator
          it = this->hardware().begin();
          it != this->hardware().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SystemStatus_HardwareEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hardware_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SystemStatus_HardwareEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_iterator
          it = this->hardware().begin();
          it != this->hardware().end(); ++it) {
        entry.reset(hardware_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string passenger_msg = 4;
  if (has_passenger_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passenger_msg().data(), this->passenger_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.SystemStatus.passenger_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->passenger_msg(), output);
  }

  // optional double safety_mode_trigger_time = 5;
  if (has_safety_mode_trigger_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->safety_mode_trigger_time(), output);
  }

  // optional bool require_emergency_stop = 6;
  if (has_require_emergency_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->require_emergency_stop(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.SystemStatus)
}

::google::protobuf::uint8* SystemStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.SystemStatus)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // map<string, .apollo.monitor.ModuleStatus> modules = 2;
  if (!this->modules().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.monitor.SystemStatus.ModulesEntry.key");
      }
    };

    if (deterministic &&
        this->modules().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->modules().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SystemStatus_ModulesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(modules_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SystemStatus_ModulesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_iterator
          it = this->modules().begin();
          it != this->modules().end(); ++it) {
        entry.reset(modules_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .apollo.monitor.HardwareStatus> hardware = 3;
  if (!this->hardware().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "apollo.monitor.SystemStatus.HardwareEntry.key");
      }
    };

    if (deterministic &&
        this->hardware().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->hardware().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_iterator
          it = this->hardware().begin();
          it != this->hardware().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SystemStatus_HardwareEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(hardware_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SystemStatus_HardwareEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_iterator
          it = this->hardware().begin();
          it != this->hardware().end(); ++it) {
        entry.reset(hardware_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string passenger_msg = 4;
  if (has_passenger_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passenger_msg().data(), this->passenger_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.SystemStatus.passenger_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->passenger_msg(), target);
  }

  // optional double safety_mode_trigger_time = 5;
  if (has_safety_mode_trigger_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->safety_mode_trigger_time(), target);
  }

  // optional bool require_emergency_stop = 6;
  if (has_require_emergency_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->require_emergency_stop(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.SystemStatus)
  return target;
}

int SystemStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.SystemStatus)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 57u) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional string passenger_msg = 4;
    if (has_passenger_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passenger_msg());
    }

    // optional double safety_mode_trigger_time = 5;
    if (has_safety_mode_trigger_time()) {
      total_size += 1 + 8;
    }

    // optional bool require_emergency_stop = 6;
    if (has_require_emergency_stop()) {
      total_size += 1 + 1;
    }

  }
  // map<string, .apollo.monitor.ModuleStatus> modules = 2;
  total_size += 1 * this->modules_size();
  {
    ::google::protobuf::scoped_ptr<SystemStatus_ModulesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >::const_iterator
        it = this->modules().begin();
        it != this->modules().end(); ++it) {
      entry.reset(modules_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .apollo.monitor.HardwareStatus> hardware = 3;
  total_size += 1 * this->hardware_size();
  {
    ::google::protobuf::scoped_ptr<SystemStatus_HardwareEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >::const_iterator
        it = this->hardware().begin();
        it != this->hardware().end(); ++it) {
      entry.reset(hardware_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.SystemStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SystemStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.SystemStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.SystemStatus)
    MergeFrom(*source);
  }
}

void SystemStatus::MergeFrom(const SystemStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.SystemStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  modules_.MergeFrom(from.modules_);
  hardware_.MergeFrom(from.hardware_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (from.has_passenger_msg()) {
      set_has_passenger_msg();
      passenger_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passenger_msg_);
    }
    if (from.has_safety_mode_trigger_time()) {
      set_safety_mode_trigger_time(from.safety_mode_trigger_time());
    }
    if (from.has_require_emergency_stop()) {
      set_require_emergency_stop(from.require_emergency_stop());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SystemStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.SystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemStatus::CopyFrom(const SystemStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.SystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemStatus::IsInitialized() const {

  return true;
}

void SystemStatus::Swap(SystemStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemStatus::InternalSwap(SystemStatus* other) {
  std::swap(header_, other->header_);
  modules_.Swap(&other->modules_);
  hardware_.Swap(&other->hardware_);
  passenger_msg_.Swap(&other->passenger_msg_);
  std::swap(safety_mode_trigger_time_, other->safety_mode_trigger_time_);
  std::swap(require_emergency_stop_, other->require_emergency_stop_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemStatus_descriptor_;
  metadata.reflection = SystemStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemStatus

// optional .apollo.common.Header header = 1;
bool SystemStatus::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SystemStatus::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void SystemStatus::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void SystemStatus::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
const ::apollo::common::Header& SystemStatus::header() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.SystemStatus.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::apollo::common::Header* SystemStatus::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.SystemStatus.header)
  return header_;
}
::apollo::common::Header* SystemStatus::release_header() {
  // @@protoc_insertion_point(field_release:apollo.monitor.SystemStatus.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void SystemStatus::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.SystemStatus.header)
}

// map<string, .apollo.monitor.ModuleStatus> modules = 2;
int SystemStatus::modules_size() const {
  return modules_.size();
}
void SystemStatus::clear_modules() {
  modules_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >&
SystemStatus::modules() const {
  // @@protoc_insertion_point(field_map:apollo.monitor.SystemStatus.modules)
  return modules_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::apollo::monitor::ModuleStatus >*
SystemStatus::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_map:apollo.monitor.SystemStatus.modules)
  return modules_.MutableMap();
}

// map<string, .apollo.monitor.HardwareStatus> hardware = 3;
int SystemStatus::hardware_size() const {
  return hardware_.size();
}
void SystemStatus::clear_hardware() {
  hardware_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >&
SystemStatus::hardware() const {
  // @@protoc_insertion_point(field_map:apollo.monitor.SystemStatus.hardware)
  return hardware_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::apollo::monitor::HardwareStatus >*
SystemStatus::mutable_hardware() {
  // @@protoc_insertion_point(field_mutable_map:apollo.monitor.SystemStatus.hardware)
  return hardware_.MutableMap();
}

// optional string passenger_msg = 4;
bool SystemStatus::has_passenger_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SystemStatus::set_has_passenger_msg() {
  _has_bits_[0] |= 0x00000008u;
}
void SystemStatus::clear_has_passenger_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
void SystemStatus::clear_passenger_msg() {
  passenger_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passenger_msg();
}
 const ::std::string& SystemStatus::passenger_msg() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.SystemStatus.passenger_msg)
  return passenger_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SystemStatus::set_passenger_msg(const ::std::string& value) {
  set_has_passenger_msg();
  passenger_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.SystemStatus.passenger_msg)
}
 void SystemStatus::set_passenger_msg(const char* value) {
  set_has_passenger_msg();
  passenger_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.SystemStatus.passenger_msg)
}
 void SystemStatus::set_passenger_msg(const char* value, size_t size) {
  set_has_passenger_msg();
  passenger_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.SystemStatus.passenger_msg)
}
 ::std::string* SystemStatus::mutable_passenger_msg() {
  set_has_passenger_msg();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.SystemStatus.passenger_msg)
  return passenger_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SystemStatus::release_passenger_msg() {
  // @@protoc_insertion_point(field_release:apollo.monitor.SystemStatus.passenger_msg)
  clear_has_passenger_msg();
  return passenger_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SystemStatus::set_allocated_passenger_msg(::std::string* passenger_msg) {
  if (passenger_msg != NULL) {
    set_has_passenger_msg();
  } else {
    clear_has_passenger_msg();
  }
  passenger_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passenger_msg);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.SystemStatus.passenger_msg)
}

// optional double safety_mode_trigger_time = 5;
bool SystemStatus::has_safety_mode_trigger_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SystemStatus::set_has_safety_mode_trigger_time() {
  _has_bits_[0] |= 0x00000010u;
}
void SystemStatus::clear_has_safety_mode_trigger_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void SystemStatus::clear_safety_mode_trigger_time() {
  safety_mode_trigger_time_ = 0;
  clear_has_safety_mode_trigger_time();
}
 double SystemStatus::safety_mode_trigger_time() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.SystemStatus.safety_mode_trigger_time)
  return safety_mode_trigger_time_;
}
 void SystemStatus::set_safety_mode_trigger_time(double value) {
  set_has_safety_mode_trigger_time();
  safety_mode_trigger_time_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.SystemStatus.safety_mode_trigger_time)
}

// optional bool require_emergency_stop = 6;
bool SystemStatus::has_require_emergency_stop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SystemStatus::set_has_require_emergency_stop() {
  _has_bits_[0] |= 0x00000020u;
}
void SystemStatus::clear_has_require_emergency_stop() {
  _has_bits_[0] &= ~0x00000020u;
}
void SystemStatus::clear_require_emergency_stop() {
  require_emergency_stop_ = false;
  clear_has_require_emergency_stop();
}
 bool SystemStatus::require_emergency_stop() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.SystemStatus.require_emergency_stop)
  return require_emergency_stop_;
}
 void SystemStatus::set_require_emergency_stop(bool value) {
  set_has_require_emergency_stop();
  require_emergency_stop_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.SystemStatus.require_emergency_stop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace monitor
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
