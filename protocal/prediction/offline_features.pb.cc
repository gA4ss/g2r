// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/offline_features.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "prediction/offline_features.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {

namespace {

const ::google::protobuf::Descriptor* Features_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Features_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_prediction_2foffline_5ffeatures_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_prediction_2foffline_5ffeatures_2eproto() {
  protobuf_AddDesc_prediction_2foffline_5ffeatures_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "prediction/offline_features.proto");
  GOOGLE_CHECK(file != NULL);
  Features_descriptor_ = file->message_type(0);
  static const int Features_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Features, feature_),
  };
  Features_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Features_descriptor_,
      Features::default_instance_,
      Features_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Features, _has_bits_[0]),
      -1,
      -1,
      sizeof(Features),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Features, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_prediction_2foffline_5ffeatures_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Features_descriptor_, &Features::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_prediction_2foffline_5ffeatures_2eproto() {
  delete Features::default_instance_;
  delete Features_reflection_;
}

void protobuf_AddDesc_prediction_2foffline_5ffeatures_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_prediction_2foffline_5ffeatures_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::prediction::protobuf_AddDesc_prediction_2ffeature_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!prediction/offline_features.proto\022\021apo"
    "llo.prediction\032\030prediction/feature.proto"
    "\"7\n\010Features\022+\n\007feature\030\001 \003(\0132\032.apollo.p"
    "rediction.Feature", 137);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prediction/offline_features.proto", &protobuf_RegisterTypes);
  Features::default_instance_ = new Features();
  Features::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_prediction_2foffline_5ffeatures_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_prediction_2foffline_5ffeatures_2eproto {
  StaticDescriptorInitializer_prediction_2foffline_5ffeatures_2eproto() {
    protobuf_AddDesc_prediction_2foffline_5ffeatures_2eproto();
  }
} static_descriptor_initializer_prediction_2foffline_5ffeatures_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Features::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Features::Features()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Features)
}

void Features::InitAsDefaultInstance() {
}

Features::Features(const Features& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Features)
}

void Features::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Features::~Features() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Features)
  SharedDtor();
}

void Features::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Features::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Features::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Features_descriptor_;
}

const Features& Features::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2foffline_5ffeatures_2eproto();
  return *default_instance_;
}

Features* Features::default_instance_ = NULL;

Features* Features::New(::google::protobuf::Arena* arena) const {
  Features* n = new Features;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Features::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Features)
  feature_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Features::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Features)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.prediction.Feature feature = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_feature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_feature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_feature;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Features)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Features)
  return false;
#undef DO_
}

void Features::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Features)
  // repeated .apollo.prediction.Feature feature = 1;
  for (unsigned int i = 0, n = this->feature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->feature(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.Features)
}

::google::protobuf::uint8* Features::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Features)
  // repeated .apollo.prediction.Feature feature = 1;
  for (unsigned int i = 0, n = this->feature_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->feature(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Features)
  return target;
}

int Features::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Features)
  int total_size = 0;

  // repeated .apollo.prediction.Feature feature = 1;
  total_size += 1 * this->feature_size();
  for (int i = 0; i < this->feature_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->feature(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Features::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Features)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Features* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Features>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Features)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Features)
    MergeFrom(*source);
  }
}

void Features::MergeFrom(const Features& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Features)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  feature_.MergeFrom(from.feature_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Features::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Features::CopyFrom(const Features& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Features::IsInitialized() const {

  return true;
}

void Features::Swap(Features* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Features::InternalSwap(Features* other) {
  feature_.UnsafeArenaSwap(&other->feature_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Features::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Features_descriptor_;
  metadata.reflection = Features_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Features

// repeated .apollo.prediction.Feature feature = 1;
int Features::feature_size() const {
  return feature_.size();
}
void Features::clear_feature() {
  feature_.Clear();
}
const ::apollo::prediction::Feature& Features::feature(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Features.feature)
  return feature_.Get(index);
}
::apollo::prediction::Feature* Features::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Features.feature)
  return feature_.Mutable(index);
}
::apollo::prediction::Feature* Features::add_feature() {
  // @@protoc_insertion_point(field_add:apollo.prediction.Features.feature)
  return feature_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature >*
Features::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Features.feature)
  return &feature_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Feature >&
Features::feature() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Features.feature)
  return feature_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
