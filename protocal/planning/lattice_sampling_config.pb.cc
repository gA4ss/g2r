// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: planning/lattice_sampling_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "planning/lattice_sampling_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace planning {

namespace {

const ::google::protobuf::Descriptor* LonCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LonCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* LatCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LatCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* TStrategy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TStrategy_reflection_ = NULL;
const ::google::protobuf::Descriptor* SStrategy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SStrategy_reflection_ = NULL;
const ::google::protobuf::Descriptor* LonSampleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LonSampleConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* LatSampleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LatSampleConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* LatticeSamplingConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LatticeSamplingConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_planning_2flattice_5fsampling_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_planning_2flattice_5fsampling_5fconfig_2eproto() {
  protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "planning/lattice_sampling_config.proto");
  GOOGLE_CHECK(file != NULL);
  LonCondition_descriptor_ = file->message_type(0);
  static const int LonCondition_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, ds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, dds_),
  };
  LonCondition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LonCondition_descriptor_,
      LonCondition::default_instance_,
      LonCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, _has_bits_[0]),
      -1,
      -1,
      sizeof(LonCondition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonCondition, _internal_metadata_),
      -1);
  LatCondition_descriptor_ = file->message_type(1);
  static const int LatCondition_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, l_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, dl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, ddl_),
  };
  LatCondition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LatCondition_descriptor_,
      LatCondition::default_instance_,
      LatCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, _has_bits_[0]),
      -1,
      -1,
      sizeof(LatCondition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatCondition, _internal_metadata_),
      -1);
  TStrategy_descriptor_ = file->message_type(2);
  static const int TStrategy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, t_markers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, t_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, strategy_),
  };
  TStrategy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TStrategy_descriptor_,
      TStrategy::default_instance_,
      TStrategy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, _has_bits_[0]),
      -1,
      -1,
      sizeof(TStrategy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TStrategy, _internal_metadata_),
      -1);
  SStrategy_descriptor_ = file->message_type(3);
  static const int SStrategy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, s_markers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, s_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, strategy_),
  };
  SStrategy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SStrategy_descriptor_,
      SStrategy::default_instance_,
      SStrategy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, _has_bits_[0]),
      -1,
      -1,
      sizeof(SStrategy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SStrategy, _internal_metadata_),
      -1);
  LonSampleConfig_descriptor_ = file->message_type(4);
  static const int LonSampleConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, lon_end_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, t_strategy_),
  };
  LonSampleConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LonSampleConfig_descriptor_,
      LonSampleConfig::default_instance_,
      LonSampleConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(LonSampleConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LonSampleConfig, _internal_metadata_),
      -1);
  LatSampleConfig_descriptor_ = file->message_type(5);
  static const int LatSampleConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, lat_end_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, s_strategy_),
  };
  LatSampleConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LatSampleConfig_descriptor_,
      LatSampleConfig::default_instance_,
      LatSampleConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(LatSampleConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatSampleConfig, _internal_metadata_),
      -1);
  LatticeSamplingConfig_descriptor_ = file->message_type(6);
  static const int LatticeSamplingConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, lon_sample_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, lat_sample_config_),
  };
  LatticeSamplingConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LatticeSamplingConfig_descriptor_,
      LatticeSamplingConfig::default_instance_,
      LatticeSamplingConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(LatticeSamplingConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LatticeSamplingConfig, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_planning_2flattice_5fsampling_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LonCondition_descriptor_, &LonCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LatCondition_descriptor_, &LatCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TStrategy_descriptor_, &TStrategy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SStrategy_descriptor_, &SStrategy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LonSampleConfig_descriptor_, &LonSampleConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LatSampleConfig_descriptor_, &LatSampleConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LatticeSamplingConfig_descriptor_, &LatticeSamplingConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_planning_2flattice_5fsampling_5fconfig_2eproto() {
  delete LonCondition::default_instance_;
  delete LonCondition_reflection_;
  delete LatCondition::default_instance_;
  delete LatCondition_reflection_;
  delete TStrategy::default_instance_;
  delete TStrategy_reflection_;
  delete SStrategy::default_instance_;
  delete SStrategy_reflection_;
  delete LonSampleConfig::default_instance_;
  delete LonSampleConfig_reflection_;
  delete LatSampleConfig::default_instance_;
  delete LatSampleConfig_reflection_;
  delete LatticeSamplingConfig::default_instance_;
  delete LatticeSamplingConfig_reflection_;
}

void protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&planning/lattice_sampling_config.proto"
    "\022\017apollo.planning\";\n\014LonCondition\022\014\n\001s\030\001"
    " \001(\001:\0010\022\r\n\002ds\030\002 \001(\001:\0010\022\016\n\003dds\030\003 \001(\001:\0010\";"
    "\n\014LatCondition\022\014\n\001l\030\001 \001(\001:\0010\022\r\n\002dl\030\002 \001(\001"
    ":\0010\022\016\n\003ddl\030\003 \001(\001:\0010\"E\n\tTStrategy\022\021\n\tt_ma"
    "rkers\030\001 \003(\001\022\023\n\006t_step\030\002 \001(\001:\0030.5\022\020\n\010stra"
    "tegy\030\003 \001(\t\"E\n\tSStrategy\022\021\n\ts_markers\030\001 \003"
    "(\001\022\023\n\006s_step\030\002 \001(\001:\0030.5\022\020\n\010strategy\030\003 \001("
    "\t\"{\n\017LonSampleConfig\0228\n\021lon_end_conditio"
    "n\030\001 \001(\0132\035.apollo.planning.LonCondition\022."
    "\n\nt_strategy\030\002 \001(\0132\032.apollo.planning.TSt"
    "rategy\"{\n\017LatSampleConfig\0228\n\021lat_end_con"
    "dition\030\001 \001(\0132\035.apollo.planning.LatCondit"
    "ion\022.\n\ns_strategy\030\002 \001(\0132\032.apollo.plannin"
    "g.SStrategy\"\221\001\n\025LatticeSamplingConfig\022;\n"
    "\021lon_sample_config\030\001 \001(\0132 .apollo.planni"
    "ng.LonSampleConfig\022;\n\021lat_sample_config\030"
    "\002 \001(\0132 .apollo.planning.LatSampleConfig", 719);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "planning/lattice_sampling_config.proto", &protobuf_RegisterTypes);
  LonCondition::default_instance_ = new LonCondition();
  LatCondition::default_instance_ = new LatCondition();
  TStrategy::default_instance_ = new TStrategy();
  SStrategy::default_instance_ = new SStrategy();
  LonSampleConfig::default_instance_ = new LonSampleConfig();
  LatSampleConfig::default_instance_ = new LatSampleConfig();
  LatticeSamplingConfig::default_instance_ = new LatticeSamplingConfig();
  LonCondition::default_instance_->InitAsDefaultInstance();
  LatCondition::default_instance_->InitAsDefaultInstance();
  TStrategy::default_instance_->InitAsDefaultInstance();
  SStrategy::default_instance_->InitAsDefaultInstance();
  LonSampleConfig::default_instance_->InitAsDefaultInstance();
  LatSampleConfig::default_instance_->InitAsDefaultInstance();
  LatticeSamplingConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_planning_2flattice_5fsampling_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_planning_2flattice_5fsampling_5fconfig_2eproto {
  StaticDescriptorInitializer_planning_2flattice_5fsampling_5fconfig_2eproto() {
    protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  }
} static_descriptor_initializer_planning_2flattice_5fsampling_5fconfig_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LonCondition::kSFieldNumber;
const int LonCondition::kDsFieldNumber;
const int LonCondition::kDdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LonCondition::LonCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.LonCondition)
}

void LonCondition::InitAsDefaultInstance() {
}

LonCondition::LonCondition(const LonCondition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.LonCondition)
}

void LonCondition::SharedCtor() {
  _cached_size_ = 0;
  s_ = 0;
  ds_ = 0;
  dds_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LonCondition::~LonCondition() {
  // @@protoc_insertion_point(destructor:apollo.planning.LonCondition)
  SharedDtor();
}

void LonCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LonCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LonCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LonCondition_descriptor_;
}

const LonCondition& LonCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

LonCondition* LonCondition::default_instance_ = NULL;

LonCondition* LonCondition::New(::google::protobuf::Arena* arena) const {
  LonCondition* n = new LonCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LonCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.LonCondition)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LonCondition, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LonCondition*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(s_, dds_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LonCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.LonCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double s = 1 [default = 0];
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_)));
          set_has_s();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_ds;
        break;
      }

      // optional double ds = 2 [default = 0];
      case 2: {
        if (tag == 17) {
         parse_ds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ds_)));
          set_has_ds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_dds;
        break;
      }

      // optional double dds = 3 [default = 0];
      case 3: {
        if (tag == 25) {
         parse_dds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dds_)));
          set_has_dds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.LonCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.LonCondition)
  return false;
#undef DO_
}

void LonCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.LonCondition)
  // optional double s = 1 [default = 0];
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->s(), output);
  }

  // optional double ds = 2 [default = 0];
  if (has_ds()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->ds(), output);
  }

  // optional double dds = 3 [default = 0];
  if (has_dds()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.LonCondition)
}

::google::protobuf::uint8* LonCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.LonCondition)
  // optional double s = 1 [default = 0];
  if (has_s()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->s(), target);
  }

  // optional double ds = 2 [default = 0];
  if (has_ds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->ds(), target);
  }

  // optional double dds = 3 [default = 0];
  if (has_dds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.LonCondition)
  return target;
}

int LonCondition::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.LonCondition)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional double s = 1 [default = 0];
    if (has_s()) {
      total_size += 1 + 8;
    }

    // optional double ds = 2 [default = 0];
    if (has_ds()) {
      total_size += 1 + 8;
    }

    // optional double dds = 3 [default = 0];
    if (has_dds()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LonCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.LonCondition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LonCondition* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LonCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.LonCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.LonCondition)
    MergeFrom(*source);
  }
}

void LonCondition::MergeFrom(const LonCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.LonCondition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_s()) {
      set_s(from.s());
    }
    if (from.has_ds()) {
      set_ds(from.ds());
    }
    if (from.has_dds()) {
      set_dds(from.dds());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LonCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.LonCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LonCondition::CopyFrom(const LonCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.LonCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LonCondition::IsInitialized() const {

  return true;
}

void LonCondition::Swap(LonCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LonCondition::InternalSwap(LonCondition* other) {
  std::swap(s_, other->s_);
  std::swap(ds_, other->ds_);
  std::swap(dds_, other->dds_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LonCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LonCondition_descriptor_;
  metadata.reflection = LonCondition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LonCondition

// optional double s = 1 [default = 0];
bool LonCondition::has_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LonCondition::set_has_s() {
  _has_bits_[0] |= 0x00000001u;
}
void LonCondition::clear_has_s() {
  _has_bits_[0] &= ~0x00000001u;
}
void LonCondition::clear_s() {
  s_ = 0;
  clear_has_s();
}
 double LonCondition::s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LonCondition.s)
  return s_;
}
 void LonCondition::set_s(double value) {
  set_has_s();
  s_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.LonCondition.s)
}

// optional double ds = 2 [default = 0];
bool LonCondition::has_ds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LonCondition::set_has_ds() {
  _has_bits_[0] |= 0x00000002u;
}
void LonCondition::clear_has_ds() {
  _has_bits_[0] &= ~0x00000002u;
}
void LonCondition::clear_ds() {
  ds_ = 0;
  clear_has_ds();
}
 double LonCondition::ds() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LonCondition.ds)
  return ds_;
}
 void LonCondition::set_ds(double value) {
  set_has_ds();
  ds_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.LonCondition.ds)
}

// optional double dds = 3 [default = 0];
bool LonCondition::has_dds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LonCondition::set_has_dds() {
  _has_bits_[0] |= 0x00000004u;
}
void LonCondition::clear_has_dds() {
  _has_bits_[0] &= ~0x00000004u;
}
void LonCondition::clear_dds() {
  dds_ = 0;
  clear_has_dds();
}
 double LonCondition::dds() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LonCondition.dds)
  return dds_;
}
 void LonCondition::set_dds(double value) {
  set_has_dds();
  dds_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.LonCondition.dds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatCondition::kLFieldNumber;
const int LatCondition::kDlFieldNumber;
const int LatCondition::kDdlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatCondition::LatCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.LatCondition)
}

void LatCondition::InitAsDefaultInstance() {
}

LatCondition::LatCondition(const LatCondition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.LatCondition)
}

void LatCondition::SharedCtor() {
  _cached_size_ = 0;
  l_ = 0;
  dl_ = 0;
  ddl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LatCondition::~LatCondition() {
  // @@protoc_insertion_point(destructor:apollo.planning.LatCondition)
  SharedDtor();
}

void LatCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LatCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LatCondition_descriptor_;
}

const LatCondition& LatCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

LatCondition* LatCondition::default_instance_ = NULL;

LatCondition* LatCondition::New(::google::protobuf::Arena* arena) const {
  LatCondition* n = new LatCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.LatCondition)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LatCondition, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LatCondition*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(l_, ddl_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LatCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.LatCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double l = 1 [default = 0];
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_)));
          set_has_l();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_dl;
        break;
      }

      // optional double dl = 2 [default = 0];
      case 2: {
        if (tag == 17) {
         parse_dl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dl_)));
          set_has_dl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_ddl;
        break;
      }

      // optional double ddl = 3 [default = 0];
      case 3: {
        if (tag == 25) {
         parse_ddl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ddl_)));
          set_has_ddl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.LatCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.LatCondition)
  return false;
#undef DO_
}

void LatCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.LatCondition)
  // optional double l = 1 [default = 0];
  if (has_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->l(), output);
  }

  // optional double dl = 2 [default = 0];
  if (has_dl()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->dl(), output);
  }

  // optional double ddl = 3 [default = 0];
  if (has_ddl()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->ddl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.LatCondition)
}

::google::protobuf::uint8* LatCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.LatCondition)
  // optional double l = 1 [default = 0];
  if (has_l()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->l(), target);
  }

  // optional double dl = 2 [default = 0];
  if (has_dl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->dl(), target);
  }

  // optional double ddl = 3 [default = 0];
  if (has_ddl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->ddl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.LatCondition)
  return target;
}

int LatCondition::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.LatCondition)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional double l = 1 [default = 0];
    if (has_l()) {
      total_size += 1 + 8;
    }

    // optional double dl = 2 [default = 0];
    if (has_dl()) {
      total_size += 1 + 8;
    }

    // optional double ddl = 3 [default = 0];
    if (has_ddl()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.LatCondition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LatCondition* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LatCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.LatCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.LatCondition)
    MergeFrom(*source);
  }
}

void LatCondition::MergeFrom(const LatCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.LatCondition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_l()) {
      set_l(from.l());
    }
    if (from.has_dl()) {
      set_dl(from.dl());
    }
    if (from.has_ddl()) {
      set_ddl(from.ddl());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LatCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.LatCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatCondition::CopyFrom(const LatCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.LatCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatCondition::IsInitialized() const {

  return true;
}

void LatCondition::Swap(LatCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatCondition::InternalSwap(LatCondition* other) {
  std::swap(l_, other->l_);
  std::swap(dl_, other->dl_);
  std::swap(ddl_, other->ddl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LatCondition_descriptor_;
  metadata.reflection = LatCondition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatCondition

// optional double l = 1 [default = 0];
bool LatCondition::has_l() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LatCondition::set_has_l() {
  _has_bits_[0] |= 0x00000001u;
}
void LatCondition::clear_has_l() {
  _has_bits_[0] &= ~0x00000001u;
}
void LatCondition::clear_l() {
  l_ = 0;
  clear_has_l();
}
 double LatCondition::l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatCondition.l)
  return l_;
}
 void LatCondition::set_l(double value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.LatCondition.l)
}

// optional double dl = 2 [default = 0];
bool LatCondition::has_dl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LatCondition::set_has_dl() {
  _has_bits_[0] |= 0x00000002u;
}
void LatCondition::clear_has_dl() {
  _has_bits_[0] &= ~0x00000002u;
}
void LatCondition::clear_dl() {
  dl_ = 0;
  clear_has_dl();
}
 double LatCondition::dl() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatCondition.dl)
  return dl_;
}
 void LatCondition::set_dl(double value) {
  set_has_dl();
  dl_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.LatCondition.dl)
}

// optional double ddl = 3 [default = 0];
bool LatCondition::has_ddl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LatCondition::set_has_ddl() {
  _has_bits_[0] |= 0x00000004u;
}
void LatCondition::clear_has_ddl() {
  _has_bits_[0] &= ~0x00000004u;
}
void LatCondition::clear_ddl() {
  ddl_ = 0;
  clear_has_ddl();
}
 double LatCondition::ddl() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatCondition.ddl)
  return ddl_;
}
 void LatCondition::set_ddl(double value) {
  set_has_ddl();
  ddl_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.LatCondition.ddl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TStrategy::kTMarkersFieldNumber;
const int TStrategy::kTStepFieldNumber;
const int TStrategy::kStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TStrategy::TStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.TStrategy)
}

void TStrategy::InitAsDefaultInstance() {
}

TStrategy::TStrategy(const TStrategy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.TStrategy)
}

void TStrategy::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  t_step_ = 0.5;
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TStrategy::~TStrategy() {
  // @@protoc_insertion_point(destructor:apollo.planning.TStrategy)
  SharedDtor();
}

void TStrategy::SharedDtor() {
  strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TStrategy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TStrategy_descriptor_;
}

const TStrategy& TStrategy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

TStrategy* TStrategy::default_instance_ = NULL;

TStrategy* TStrategy::New(::google::protobuf::Arena* arena) const {
  TStrategy* n = new TStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.TStrategy)
  if (_has_bits_[0 / 32] & 6u) {
    t_step_ = 0.5;
    if (has_strategy()) {
      strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  t_markers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.TStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t_markers = 1;
      case 1: {
        if (tag == 9) {
         parse_t_markers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_t_markers())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t_markers())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_t_markers;
        if (input->ExpectTag(17)) goto parse_t_step;
        break;
      }

      // optional double t_step = 2 [default = 0.5];
      case 2: {
        if (tag == 17) {
         parse_t_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_step_)));
          set_has_t_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_strategy;
        break;
      }

      // optional string strategy = 3;
      case 3: {
        if (tag == 26) {
         parse_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strategy().data(), this->strategy().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.TStrategy.strategy");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.TStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.TStrategy)
  return false;
#undef DO_
}

void TStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.TStrategy)
  // repeated double t_markers = 1;
  for (int i = 0; i < this->t_markers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t_markers(i), output);
  }

  // optional double t_step = 2 [default = 0.5];
  if (has_t_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->t_step(), output);
  }

  // optional string strategy = 3;
  if (has_strategy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.TStrategy.strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strategy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.TStrategy)
}

::google::protobuf::uint8* TStrategy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.TStrategy)
  // repeated double t_markers = 1;
  for (int i = 0; i < this->t_markers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->t_markers(i), target);
  }

  // optional double t_step = 2 [default = 0.5];
  if (has_t_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->t_step(), target);
  }

  // optional string strategy = 3;
  if (has_strategy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.TStrategy.strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strategy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.TStrategy)
  return target;
}

int TStrategy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.TStrategy)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional double t_step = 2 [default = 0.5];
    if (has_t_step()) {
      total_size += 1 + 8;
    }

    // optional string strategy = 3;
    if (has_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strategy());
    }

  }
  // repeated double t_markers = 1;
  {
    int data_size = 0;
    data_size = 8 * this->t_markers_size();
    total_size += 1 * this->t_markers_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.TStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TStrategy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.TStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.TStrategy)
    MergeFrom(*source);
  }
}

void TStrategy::MergeFrom(const TStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.TStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  t_markers_.MergeFrom(from.t_markers_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_t_step()) {
      set_t_step(from.t_step());
    }
    if (from.has_strategy()) {
      set_has_strategy();
      strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.TStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TStrategy::CopyFrom(const TStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.TStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TStrategy::IsInitialized() const {

  return true;
}

void TStrategy::Swap(TStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TStrategy::InternalSwap(TStrategy* other) {
  t_markers_.UnsafeArenaSwap(&other->t_markers_);
  std::swap(t_step_, other->t_step_);
  strategy_.Swap(&other->strategy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TStrategy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TStrategy_descriptor_;
  metadata.reflection = TStrategy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TStrategy

// repeated double t_markers = 1;
int TStrategy::t_markers_size() const {
  return t_markers_.size();
}
void TStrategy::clear_t_markers() {
  t_markers_.Clear();
}
 double TStrategy::t_markers(int index) const {
  // @@protoc_insertion_point(field_get:apollo.planning.TStrategy.t_markers)
  return t_markers_.Get(index);
}
 void TStrategy::set_t_markers(int index, double value) {
  t_markers_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.planning.TStrategy.t_markers)
}
 void TStrategy::add_t_markers(double value) {
  t_markers_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.planning.TStrategy.t_markers)
}
 const ::google::protobuf::RepeatedField< double >&
TStrategy::t_markers() const {
  // @@protoc_insertion_point(field_list:apollo.planning.TStrategy.t_markers)
  return t_markers_;
}
 ::google::protobuf::RepeatedField< double >*
TStrategy::mutable_t_markers() {
  // @@protoc_insertion_point(field_mutable_list:apollo.planning.TStrategy.t_markers)
  return &t_markers_;
}

// optional double t_step = 2 [default = 0.5];
bool TStrategy::has_t_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TStrategy::set_has_t_step() {
  _has_bits_[0] |= 0x00000002u;
}
void TStrategy::clear_has_t_step() {
  _has_bits_[0] &= ~0x00000002u;
}
void TStrategy::clear_t_step() {
  t_step_ = 0.5;
  clear_has_t_step();
}
 double TStrategy::t_step() const {
  // @@protoc_insertion_point(field_get:apollo.planning.TStrategy.t_step)
  return t_step_;
}
 void TStrategy::set_t_step(double value) {
  set_has_t_step();
  t_step_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.TStrategy.t_step)
}

// optional string strategy = 3;
bool TStrategy::has_strategy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TStrategy::set_has_strategy() {
  _has_bits_[0] |= 0x00000004u;
}
void TStrategy::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000004u;
}
void TStrategy::clear_strategy() {
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strategy();
}
 const ::std::string& TStrategy::strategy() const {
  // @@protoc_insertion_point(field_get:apollo.planning.TStrategy.strategy)
  return strategy_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TStrategy::set_strategy(const ::std::string& value) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.planning.TStrategy.strategy)
}
 void TStrategy::set_strategy(const char* value) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.planning.TStrategy.strategy)
}
 void TStrategy::set_strategy(const char* value, size_t size) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.planning.TStrategy.strategy)
}
 ::std::string* TStrategy::mutable_strategy() {
  set_has_strategy();
  // @@protoc_insertion_point(field_mutable:apollo.planning.TStrategy.strategy)
  return strategy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TStrategy::release_strategy() {
  // @@protoc_insertion_point(field_release:apollo.planning.TStrategy.strategy)
  clear_has_strategy();
  return strategy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TStrategy::set_allocated_strategy(::std::string* strategy) {
  if (strategy != NULL) {
    set_has_strategy();
  } else {
    clear_has_strategy();
  }
  strategy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategy);
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.TStrategy.strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SStrategy::kSMarkersFieldNumber;
const int SStrategy::kSStepFieldNumber;
const int SStrategy::kStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SStrategy::SStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.SStrategy)
}

void SStrategy::InitAsDefaultInstance() {
}

SStrategy::SStrategy(const SStrategy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.SStrategy)
}

void SStrategy::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  s_step_ = 0.5;
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SStrategy::~SStrategy() {
  // @@protoc_insertion_point(destructor:apollo.planning.SStrategy)
  SharedDtor();
}

void SStrategy::SharedDtor() {
  strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SStrategy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SStrategy_descriptor_;
}

const SStrategy& SStrategy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

SStrategy* SStrategy::default_instance_ = NULL;

SStrategy* SStrategy::New(::google::protobuf::Arena* arena) const {
  SStrategy* n = new SStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.SStrategy)
  if (_has_bits_[0 / 32] & 6u) {
    s_step_ = 0.5;
    if (has_strategy()) {
      strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  s_markers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.SStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double s_markers = 1;
      case 1: {
        if (tag == 9) {
         parse_s_markers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_s_markers())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_s_markers())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_s_markers;
        if (input->ExpectTag(17)) goto parse_s_step;
        break;
      }

      // optional double s_step = 2 [default = 0.5];
      case 2: {
        if (tag == 17) {
         parse_s_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_step_)));
          set_has_s_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_strategy;
        break;
      }

      // optional string strategy = 3;
      case 3: {
        if (tag == 26) {
         parse_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strategy().data(), this->strategy().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.planning.SStrategy.strategy");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.SStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.SStrategy)
  return false;
#undef DO_
}

void SStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.SStrategy)
  // repeated double s_markers = 1;
  for (int i = 0; i < this->s_markers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->s_markers(i), output);
  }

  // optional double s_step = 2 [default = 0.5];
  if (has_s_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->s_step(), output);
  }

  // optional string strategy = 3;
  if (has_strategy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.SStrategy.strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strategy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.SStrategy)
}

::google::protobuf::uint8* SStrategy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.SStrategy)
  // repeated double s_markers = 1;
  for (int i = 0; i < this->s_markers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->s_markers(i), target);
  }

  // optional double s_step = 2 [default = 0.5];
  if (has_s_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->s_step(), target);
  }

  // optional string strategy = 3;
  if (has_strategy()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strategy().data(), this->strategy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.planning.SStrategy.strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strategy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.SStrategy)
  return target;
}

int SStrategy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.SStrategy)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional double s_step = 2 [default = 0.5];
    if (has_s_step()) {
      total_size += 1 + 8;
    }

    // optional string strategy = 3;
    if (has_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strategy());
    }

  }
  // repeated double s_markers = 1;
  {
    int data_size = 0;
    data_size = 8 * this->s_markers_size();
    total_size += 1 * this->s_markers_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.SStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SStrategy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.SStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.SStrategy)
    MergeFrom(*source);
  }
}

void SStrategy::MergeFrom(const SStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.SStrategy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  s_markers_.MergeFrom(from.s_markers_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_s_step()) {
      set_s_step(from.s_step());
    }
    if (from.has_strategy()) {
      set_has_strategy();
      strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.SStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SStrategy::CopyFrom(const SStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.SStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SStrategy::IsInitialized() const {

  return true;
}

void SStrategy::Swap(SStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SStrategy::InternalSwap(SStrategy* other) {
  s_markers_.UnsafeArenaSwap(&other->s_markers_);
  std::swap(s_step_, other->s_step_);
  strategy_.Swap(&other->strategy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SStrategy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SStrategy_descriptor_;
  metadata.reflection = SStrategy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SStrategy

// repeated double s_markers = 1;
int SStrategy::s_markers_size() const {
  return s_markers_.size();
}
void SStrategy::clear_s_markers() {
  s_markers_.Clear();
}
 double SStrategy::s_markers(int index) const {
  // @@protoc_insertion_point(field_get:apollo.planning.SStrategy.s_markers)
  return s_markers_.Get(index);
}
 void SStrategy::set_s_markers(int index, double value) {
  s_markers_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.planning.SStrategy.s_markers)
}
 void SStrategy::add_s_markers(double value) {
  s_markers_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.planning.SStrategy.s_markers)
}
 const ::google::protobuf::RepeatedField< double >&
SStrategy::s_markers() const {
  // @@protoc_insertion_point(field_list:apollo.planning.SStrategy.s_markers)
  return s_markers_;
}
 ::google::protobuf::RepeatedField< double >*
SStrategy::mutable_s_markers() {
  // @@protoc_insertion_point(field_mutable_list:apollo.planning.SStrategy.s_markers)
  return &s_markers_;
}

// optional double s_step = 2 [default = 0.5];
bool SStrategy::has_s_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SStrategy::set_has_s_step() {
  _has_bits_[0] |= 0x00000002u;
}
void SStrategy::clear_has_s_step() {
  _has_bits_[0] &= ~0x00000002u;
}
void SStrategy::clear_s_step() {
  s_step_ = 0.5;
  clear_has_s_step();
}
 double SStrategy::s_step() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SStrategy.s_step)
  return s_step_;
}
 void SStrategy::set_s_step(double value) {
  set_has_s_step();
  s_step_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SStrategy.s_step)
}

// optional string strategy = 3;
bool SStrategy::has_strategy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SStrategy::set_has_strategy() {
  _has_bits_[0] |= 0x00000004u;
}
void SStrategy::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000004u;
}
void SStrategy::clear_strategy() {
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strategy();
}
 const ::std::string& SStrategy::strategy() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SStrategy.strategy)
  return strategy_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SStrategy::set_strategy(const ::std::string& value) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.planning.SStrategy.strategy)
}
 void SStrategy::set_strategy(const char* value) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.planning.SStrategy.strategy)
}
 void SStrategy::set_strategy(const char* value, size_t size) {
  set_has_strategy();
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.planning.SStrategy.strategy)
}
 ::std::string* SStrategy::mutable_strategy() {
  set_has_strategy();
  // @@protoc_insertion_point(field_mutable:apollo.planning.SStrategy.strategy)
  return strategy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SStrategy::release_strategy() {
  // @@protoc_insertion_point(field_release:apollo.planning.SStrategy.strategy)
  clear_has_strategy();
  return strategy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SStrategy::set_allocated_strategy(::std::string* strategy) {
  if (strategy != NULL) {
    set_has_strategy();
  } else {
    clear_has_strategy();
  }
  strategy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategy);
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.SStrategy.strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LonSampleConfig::kLonEndConditionFieldNumber;
const int LonSampleConfig::kTStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LonSampleConfig::LonSampleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.LonSampleConfig)
}

void LonSampleConfig::InitAsDefaultInstance() {
  lon_end_condition_ = const_cast< ::apollo::planning::LonCondition*>(&::apollo::planning::LonCondition::default_instance());
  t_strategy_ = const_cast< ::apollo::planning::TStrategy*>(&::apollo::planning::TStrategy::default_instance());
}

LonSampleConfig::LonSampleConfig(const LonSampleConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.LonSampleConfig)
}

void LonSampleConfig::SharedCtor() {
  _cached_size_ = 0;
  lon_end_condition_ = NULL;
  t_strategy_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LonSampleConfig::~LonSampleConfig() {
  // @@protoc_insertion_point(destructor:apollo.planning.LonSampleConfig)
  SharedDtor();
}

void LonSampleConfig::SharedDtor() {
  if (this != default_instance_) {
    delete lon_end_condition_;
    delete t_strategy_;
  }
}

void LonSampleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LonSampleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LonSampleConfig_descriptor_;
}

const LonSampleConfig& LonSampleConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

LonSampleConfig* LonSampleConfig::default_instance_ = NULL;

LonSampleConfig* LonSampleConfig::New(::google::protobuf::Arena* arena) const {
  LonSampleConfig* n = new LonSampleConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LonSampleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.LonSampleConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lon_end_condition()) {
      if (lon_end_condition_ != NULL) lon_end_condition_->::apollo::planning::LonCondition::Clear();
    }
    if (has_t_strategy()) {
      if (t_strategy_ != NULL) t_strategy_->::apollo::planning::TStrategy::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LonSampleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.LonSampleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.LonCondition lon_end_condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lon_end_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_t_strategy;
        break;
      }

      // optional .apollo.planning.TStrategy t_strategy = 2;
      case 2: {
        if (tag == 18) {
         parse_t_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t_strategy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.LonSampleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.LonSampleConfig)
  return false;
#undef DO_
}

void LonSampleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.LonSampleConfig)
  // optional .apollo.planning.LonCondition lon_end_condition = 1;
  if (has_lon_end_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lon_end_condition_, output);
  }

  // optional .apollo.planning.TStrategy t_strategy = 2;
  if (has_t_strategy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->t_strategy_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.LonSampleConfig)
}

::google::protobuf::uint8* LonSampleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.LonSampleConfig)
  // optional .apollo.planning.LonCondition lon_end_condition = 1;
  if (has_lon_end_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lon_end_condition_, false, target);
  }

  // optional .apollo.planning.TStrategy t_strategy = 2;
  if (has_t_strategy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->t_strategy_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.LonSampleConfig)
  return target;
}

int LonSampleConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.LonSampleConfig)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.planning.LonCondition lon_end_condition = 1;
    if (has_lon_end_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lon_end_condition_);
    }

    // optional .apollo.planning.TStrategy t_strategy = 2;
    if (has_t_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->t_strategy_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LonSampleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.LonSampleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LonSampleConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LonSampleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.LonSampleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.LonSampleConfig)
    MergeFrom(*source);
  }
}

void LonSampleConfig::MergeFrom(const LonSampleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.LonSampleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lon_end_condition()) {
      mutable_lon_end_condition()->::apollo::planning::LonCondition::MergeFrom(from.lon_end_condition());
    }
    if (from.has_t_strategy()) {
      mutable_t_strategy()->::apollo::planning::TStrategy::MergeFrom(from.t_strategy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LonSampleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.LonSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LonSampleConfig::CopyFrom(const LonSampleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.LonSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LonSampleConfig::IsInitialized() const {

  return true;
}

void LonSampleConfig::Swap(LonSampleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LonSampleConfig::InternalSwap(LonSampleConfig* other) {
  std::swap(lon_end_condition_, other->lon_end_condition_);
  std::swap(t_strategy_, other->t_strategy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LonSampleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LonSampleConfig_descriptor_;
  metadata.reflection = LonSampleConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LonSampleConfig

// optional .apollo.planning.LonCondition lon_end_condition = 1;
bool LonSampleConfig::has_lon_end_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LonSampleConfig::set_has_lon_end_condition() {
  _has_bits_[0] |= 0x00000001u;
}
void LonSampleConfig::clear_has_lon_end_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
void LonSampleConfig::clear_lon_end_condition() {
  if (lon_end_condition_ != NULL) lon_end_condition_->::apollo::planning::LonCondition::Clear();
  clear_has_lon_end_condition();
}
const ::apollo::planning::LonCondition& LonSampleConfig::lon_end_condition() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LonSampleConfig.lon_end_condition)
  return lon_end_condition_ != NULL ? *lon_end_condition_ : *default_instance_->lon_end_condition_;
}
::apollo::planning::LonCondition* LonSampleConfig::mutable_lon_end_condition() {
  set_has_lon_end_condition();
  if (lon_end_condition_ == NULL) {
    lon_end_condition_ = new ::apollo::planning::LonCondition;
  }
  // @@protoc_insertion_point(field_mutable:apollo.planning.LonSampleConfig.lon_end_condition)
  return lon_end_condition_;
}
::apollo::planning::LonCondition* LonSampleConfig::release_lon_end_condition() {
  // @@protoc_insertion_point(field_release:apollo.planning.LonSampleConfig.lon_end_condition)
  clear_has_lon_end_condition();
  ::apollo::planning::LonCondition* temp = lon_end_condition_;
  lon_end_condition_ = NULL;
  return temp;
}
void LonSampleConfig::set_allocated_lon_end_condition(::apollo::planning::LonCondition* lon_end_condition) {
  delete lon_end_condition_;
  lon_end_condition_ = lon_end_condition;
  if (lon_end_condition) {
    set_has_lon_end_condition();
  } else {
    clear_has_lon_end_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.LonSampleConfig.lon_end_condition)
}

// optional .apollo.planning.TStrategy t_strategy = 2;
bool LonSampleConfig::has_t_strategy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LonSampleConfig::set_has_t_strategy() {
  _has_bits_[0] |= 0x00000002u;
}
void LonSampleConfig::clear_has_t_strategy() {
  _has_bits_[0] &= ~0x00000002u;
}
void LonSampleConfig::clear_t_strategy() {
  if (t_strategy_ != NULL) t_strategy_->::apollo::planning::TStrategy::Clear();
  clear_has_t_strategy();
}
const ::apollo::planning::TStrategy& LonSampleConfig::t_strategy() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LonSampleConfig.t_strategy)
  return t_strategy_ != NULL ? *t_strategy_ : *default_instance_->t_strategy_;
}
::apollo::planning::TStrategy* LonSampleConfig::mutable_t_strategy() {
  set_has_t_strategy();
  if (t_strategy_ == NULL) {
    t_strategy_ = new ::apollo::planning::TStrategy;
  }
  // @@protoc_insertion_point(field_mutable:apollo.planning.LonSampleConfig.t_strategy)
  return t_strategy_;
}
::apollo::planning::TStrategy* LonSampleConfig::release_t_strategy() {
  // @@protoc_insertion_point(field_release:apollo.planning.LonSampleConfig.t_strategy)
  clear_has_t_strategy();
  ::apollo::planning::TStrategy* temp = t_strategy_;
  t_strategy_ = NULL;
  return temp;
}
void LonSampleConfig::set_allocated_t_strategy(::apollo::planning::TStrategy* t_strategy) {
  delete t_strategy_;
  t_strategy_ = t_strategy;
  if (t_strategy) {
    set_has_t_strategy();
  } else {
    clear_has_t_strategy();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.LonSampleConfig.t_strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatSampleConfig::kLatEndConditionFieldNumber;
const int LatSampleConfig::kSStrategyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatSampleConfig::LatSampleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.LatSampleConfig)
}

void LatSampleConfig::InitAsDefaultInstance() {
  lat_end_condition_ = const_cast< ::apollo::planning::LatCondition*>(&::apollo::planning::LatCondition::default_instance());
  s_strategy_ = const_cast< ::apollo::planning::SStrategy*>(&::apollo::planning::SStrategy::default_instance());
}

LatSampleConfig::LatSampleConfig(const LatSampleConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.LatSampleConfig)
}

void LatSampleConfig::SharedCtor() {
  _cached_size_ = 0;
  lat_end_condition_ = NULL;
  s_strategy_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LatSampleConfig::~LatSampleConfig() {
  // @@protoc_insertion_point(destructor:apollo.planning.LatSampleConfig)
  SharedDtor();
}

void LatSampleConfig::SharedDtor() {
  if (this != default_instance_) {
    delete lat_end_condition_;
    delete s_strategy_;
  }
}

void LatSampleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatSampleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LatSampleConfig_descriptor_;
}

const LatSampleConfig& LatSampleConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

LatSampleConfig* LatSampleConfig::default_instance_ = NULL;

LatSampleConfig* LatSampleConfig::New(::google::protobuf::Arena* arena) const {
  LatSampleConfig* n = new LatSampleConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatSampleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.LatSampleConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lat_end_condition()) {
      if (lat_end_condition_ != NULL) lat_end_condition_->::apollo::planning::LatCondition::Clear();
    }
    if (has_s_strategy()) {
      if (s_strategy_ != NULL) s_strategy_->::apollo::planning::SStrategy::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LatSampleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.LatSampleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.LatCondition lat_end_condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lat_end_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_s_strategy;
        break;
      }

      // optional .apollo.planning.SStrategy s_strategy = 2;
      case 2: {
        if (tag == 18) {
         parse_s_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_s_strategy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.LatSampleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.LatSampleConfig)
  return false;
#undef DO_
}

void LatSampleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.LatSampleConfig)
  // optional .apollo.planning.LatCondition lat_end_condition = 1;
  if (has_lat_end_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lat_end_condition_, output);
  }

  // optional .apollo.planning.SStrategy s_strategy = 2;
  if (has_s_strategy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->s_strategy_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.LatSampleConfig)
}

::google::protobuf::uint8* LatSampleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.LatSampleConfig)
  // optional .apollo.planning.LatCondition lat_end_condition = 1;
  if (has_lat_end_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lat_end_condition_, false, target);
  }

  // optional .apollo.planning.SStrategy s_strategy = 2;
  if (has_s_strategy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->s_strategy_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.LatSampleConfig)
  return target;
}

int LatSampleConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.LatSampleConfig)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.planning.LatCondition lat_end_condition = 1;
    if (has_lat_end_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lat_end_condition_);
    }

    // optional .apollo.planning.SStrategy s_strategy = 2;
    if (has_s_strategy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->s_strategy_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatSampleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.LatSampleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LatSampleConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LatSampleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.LatSampleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.LatSampleConfig)
    MergeFrom(*source);
  }
}

void LatSampleConfig::MergeFrom(const LatSampleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.LatSampleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lat_end_condition()) {
      mutable_lat_end_condition()->::apollo::planning::LatCondition::MergeFrom(from.lat_end_condition());
    }
    if (from.has_s_strategy()) {
      mutable_s_strategy()->::apollo::planning::SStrategy::MergeFrom(from.s_strategy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LatSampleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.LatSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatSampleConfig::CopyFrom(const LatSampleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.LatSampleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatSampleConfig::IsInitialized() const {

  return true;
}

void LatSampleConfig::Swap(LatSampleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatSampleConfig::InternalSwap(LatSampleConfig* other) {
  std::swap(lat_end_condition_, other->lat_end_condition_);
  std::swap(s_strategy_, other->s_strategy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatSampleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LatSampleConfig_descriptor_;
  metadata.reflection = LatSampleConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatSampleConfig

// optional .apollo.planning.LatCondition lat_end_condition = 1;
bool LatSampleConfig::has_lat_end_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LatSampleConfig::set_has_lat_end_condition() {
  _has_bits_[0] |= 0x00000001u;
}
void LatSampleConfig::clear_has_lat_end_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
void LatSampleConfig::clear_lat_end_condition() {
  if (lat_end_condition_ != NULL) lat_end_condition_->::apollo::planning::LatCondition::Clear();
  clear_has_lat_end_condition();
}
const ::apollo::planning::LatCondition& LatSampleConfig::lat_end_condition() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatSampleConfig.lat_end_condition)
  return lat_end_condition_ != NULL ? *lat_end_condition_ : *default_instance_->lat_end_condition_;
}
::apollo::planning::LatCondition* LatSampleConfig::mutable_lat_end_condition() {
  set_has_lat_end_condition();
  if (lat_end_condition_ == NULL) {
    lat_end_condition_ = new ::apollo::planning::LatCondition;
  }
  // @@protoc_insertion_point(field_mutable:apollo.planning.LatSampleConfig.lat_end_condition)
  return lat_end_condition_;
}
::apollo::planning::LatCondition* LatSampleConfig::release_lat_end_condition() {
  // @@protoc_insertion_point(field_release:apollo.planning.LatSampleConfig.lat_end_condition)
  clear_has_lat_end_condition();
  ::apollo::planning::LatCondition* temp = lat_end_condition_;
  lat_end_condition_ = NULL;
  return temp;
}
void LatSampleConfig::set_allocated_lat_end_condition(::apollo::planning::LatCondition* lat_end_condition) {
  delete lat_end_condition_;
  lat_end_condition_ = lat_end_condition;
  if (lat_end_condition) {
    set_has_lat_end_condition();
  } else {
    clear_has_lat_end_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.LatSampleConfig.lat_end_condition)
}

// optional .apollo.planning.SStrategy s_strategy = 2;
bool LatSampleConfig::has_s_strategy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LatSampleConfig::set_has_s_strategy() {
  _has_bits_[0] |= 0x00000002u;
}
void LatSampleConfig::clear_has_s_strategy() {
  _has_bits_[0] &= ~0x00000002u;
}
void LatSampleConfig::clear_s_strategy() {
  if (s_strategy_ != NULL) s_strategy_->::apollo::planning::SStrategy::Clear();
  clear_has_s_strategy();
}
const ::apollo::planning::SStrategy& LatSampleConfig::s_strategy() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatSampleConfig.s_strategy)
  return s_strategy_ != NULL ? *s_strategy_ : *default_instance_->s_strategy_;
}
::apollo::planning::SStrategy* LatSampleConfig::mutable_s_strategy() {
  set_has_s_strategy();
  if (s_strategy_ == NULL) {
    s_strategy_ = new ::apollo::planning::SStrategy;
  }
  // @@protoc_insertion_point(field_mutable:apollo.planning.LatSampleConfig.s_strategy)
  return s_strategy_;
}
::apollo::planning::SStrategy* LatSampleConfig::release_s_strategy() {
  // @@protoc_insertion_point(field_release:apollo.planning.LatSampleConfig.s_strategy)
  clear_has_s_strategy();
  ::apollo::planning::SStrategy* temp = s_strategy_;
  s_strategy_ = NULL;
  return temp;
}
void LatSampleConfig::set_allocated_s_strategy(::apollo::planning::SStrategy* s_strategy) {
  delete s_strategy_;
  s_strategy_ = s_strategy;
  if (s_strategy) {
    set_has_s_strategy();
  } else {
    clear_has_s_strategy();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.LatSampleConfig.s_strategy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatticeSamplingConfig::kLonSampleConfigFieldNumber;
const int LatticeSamplingConfig::kLatSampleConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatticeSamplingConfig::LatticeSamplingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.LatticeSamplingConfig)
}

void LatticeSamplingConfig::InitAsDefaultInstance() {
  lon_sample_config_ = const_cast< ::apollo::planning::LonSampleConfig*>(&::apollo::planning::LonSampleConfig::default_instance());
  lat_sample_config_ = const_cast< ::apollo::planning::LatSampleConfig*>(&::apollo::planning::LatSampleConfig::default_instance());
}

LatticeSamplingConfig::LatticeSamplingConfig(const LatticeSamplingConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.planning.LatticeSamplingConfig)
}

void LatticeSamplingConfig::SharedCtor() {
  _cached_size_ = 0;
  lon_sample_config_ = NULL;
  lat_sample_config_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LatticeSamplingConfig::~LatticeSamplingConfig() {
  // @@protoc_insertion_point(destructor:apollo.planning.LatticeSamplingConfig)
  SharedDtor();
}

void LatticeSamplingConfig::SharedDtor() {
  if (this != default_instance_) {
    delete lon_sample_config_;
    delete lat_sample_config_;
  }
}

void LatticeSamplingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatticeSamplingConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LatticeSamplingConfig_descriptor_;
}

const LatticeSamplingConfig& LatticeSamplingConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_planning_2flattice_5fsampling_5fconfig_2eproto();
  return *default_instance_;
}

LatticeSamplingConfig* LatticeSamplingConfig::default_instance_ = NULL;

LatticeSamplingConfig* LatticeSamplingConfig::New(::google::protobuf::Arena* arena) const {
  LatticeSamplingConfig* n = new LatticeSamplingConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatticeSamplingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.LatticeSamplingConfig)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lon_sample_config()) {
      if (lon_sample_config_ != NULL) lon_sample_config_->::apollo::planning::LonSampleConfig::Clear();
    }
    if (has_lat_sample_config()) {
      if (lat_sample_config_ != NULL) lat_sample_config_->::apollo::planning::LatSampleConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LatticeSamplingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.LatticeSamplingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.planning.LonSampleConfig lon_sample_config = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lon_sample_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lat_sample_config;
        break;
      }

      // optional .apollo.planning.LatSampleConfig lat_sample_config = 2;
      case 2: {
        if (tag == 18) {
         parse_lat_sample_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lat_sample_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.LatticeSamplingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.LatticeSamplingConfig)
  return false;
#undef DO_
}

void LatticeSamplingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.LatticeSamplingConfig)
  // optional .apollo.planning.LonSampleConfig lon_sample_config = 1;
  if (has_lon_sample_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lon_sample_config_, output);
  }

  // optional .apollo.planning.LatSampleConfig lat_sample_config = 2;
  if (has_lat_sample_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lat_sample_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.LatticeSamplingConfig)
}

::google::protobuf::uint8* LatticeSamplingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.LatticeSamplingConfig)
  // optional .apollo.planning.LonSampleConfig lon_sample_config = 1;
  if (has_lon_sample_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lon_sample_config_, false, target);
  }

  // optional .apollo.planning.LatSampleConfig lat_sample_config = 2;
  if (has_lat_sample_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->lat_sample_config_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.LatticeSamplingConfig)
  return target;
}

int LatticeSamplingConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.LatticeSamplingConfig)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.planning.LonSampleConfig lon_sample_config = 1;
    if (has_lon_sample_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lon_sample_config_);
    }

    // optional .apollo.planning.LatSampleConfig lat_sample_config = 2;
    if (has_lat_sample_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lat_sample_config_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatticeSamplingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.LatticeSamplingConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LatticeSamplingConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LatticeSamplingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.LatticeSamplingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.LatticeSamplingConfig)
    MergeFrom(*source);
  }
}

void LatticeSamplingConfig::MergeFrom(const LatticeSamplingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.LatticeSamplingConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lon_sample_config()) {
      mutable_lon_sample_config()->::apollo::planning::LonSampleConfig::MergeFrom(from.lon_sample_config());
    }
    if (from.has_lat_sample_config()) {
      mutable_lat_sample_config()->::apollo::planning::LatSampleConfig::MergeFrom(from.lat_sample_config());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LatticeSamplingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.LatticeSamplingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatticeSamplingConfig::CopyFrom(const LatticeSamplingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.LatticeSamplingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatticeSamplingConfig::IsInitialized() const {

  return true;
}

void LatticeSamplingConfig::Swap(LatticeSamplingConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatticeSamplingConfig::InternalSwap(LatticeSamplingConfig* other) {
  std::swap(lon_sample_config_, other->lon_sample_config_);
  std::swap(lat_sample_config_, other->lat_sample_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatticeSamplingConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LatticeSamplingConfig_descriptor_;
  metadata.reflection = LatticeSamplingConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LatticeSamplingConfig

// optional .apollo.planning.LonSampleConfig lon_sample_config = 1;
bool LatticeSamplingConfig::has_lon_sample_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LatticeSamplingConfig::set_has_lon_sample_config() {
  _has_bits_[0] |= 0x00000001u;
}
void LatticeSamplingConfig::clear_has_lon_sample_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void LatticeSamplingConfig::clear_lon_sample_config() {
  if (lon_sample_config_ != NULL) lon_sample_config_->::apollo::planning::LonSampleConfig::Clear();
  clear_has_lon_sample_config();
}
const ::apollo::planning::LonSampleConfig& LatticeSamplingConfig::lon_sample_config() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatticeSamplingConfig.lon_sample_config)
  return lon_sample_config_ != NULL ? *lon_sample_config_ : *default_instance_->lon_sample_config_;
}
::apollo::planning::LonSampleConfig* LatticeSamplingConfig::mutable_lon_sample_config() {
  set_has_lon_sample_config();
  if (lon_sample_config_ == NULL) {
    lon_sample_config_ = new ::apollo::planning::LonSampleConfig;
  }
  // @@protoc_insertion_point(field_mutable:apollo.planning.LatticeSamplingConfig.lon_sample_config)
  return lon_sample_config_;
}
::apollo::planning::LonSampleConfig* LatticeSamplingConfig::release_lon_sample_config() {
  // @@protoc_insertion_point(field_release:apollo.planning.LatticeSamplingConfig.lon_sample_config)
  clear_has_lon_sample_config();
  ::apollo::planning::LonSampleConfig* temp = lon_sample_config_;
  lon_sample_config_ = NULL;
  return temp;
}
void LatticeSamplingConfig::set_allocated_lon_sample_config(::apollo::planning::LonSampleConfig* lon_sample_config) {
  delete lon_sample_config_;
  lon_sample_config_ = lon_sample_config;
  if (lon_sample_config) {
    set_has_lon_sample_config();
  } else {
    clear_has_lon_sample_config();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.LatticeSamplingConfig.lon_sample_config)
}

// optional .apollo.planning.LatSampleConfig lat_sample_config = 2;
bool LatticeSamplingConfig::has_lat_sample_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LatticeSamplingConfig::set_has_lat_sample_config() {
  _has_bits_[0] |= 0x00000002u;
}
void LatticeSamplingConfig::clear_has_lat_sample_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void LatticeSamplingConfig::clear_lat_sample_config() {
  if (lat_sample_config_ != NULL) lat_sample_config_->::apollo::planning::LatSampleConfig::Clear();
  clear_has_lat_sample_config();
}
const ::apollo::planning::LatSampleConfig& LatticeSamplingConfig::lat_sample_config() const {
  // @@protoc_insertion_point(field_get:apollo.planning.LatticeSamplingConfig.lat_sample_config)
  return lat_sample_config_ != NULL ? *lat_sample_config_ : *default_instance_->lat_sample_config_;
}
::apollo::planning::LatSampleConfig* LatticeSamplingConfig::mutable_lat_sample_config() {
  set_has_lat_sample_config();
  if (lat_sample_config_ == NULL) {
    lat_sample_config_ = new ::apollo::planning::LatSampleConfig;
  }
  // @@protoc_insertion_point(field_mutable:apollo.planning.LatticeSamplingConfig.lat_sample_config)
  return lat_sample_config_;
}
::apollo::planning::LatSampleConfig* LatticeSamplingConfig::release_lat_sample_config() {
  // @@protoc_insertion_point(field_release:apollo.planning.LatticeSamplingConfig.lat_sample_config)
  clear_has_lat_sample_config();
  ::apollo::planning::LatSampleConfig* temp = lat_sample_config_;
  lat_sample_config_ = NULL;
  return temp;
}
void LatticeSamplingConfig::set_allocated_lat_sample_config(::apollo::planning::LatSampleConfig* lat_sample_config) {
  delete lat_sample_config_;
  lat_sample_config_ = lat_sample_config;
  if (lat_sample_config) {
    set_has_lat_sample_config();
  } else {
    clear_has_lat_sample_config();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.planning.LatticeSamplingConfig.lat_sample_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
