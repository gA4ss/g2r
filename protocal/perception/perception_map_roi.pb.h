// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/perception_map_roi.proto

#ifndef PROTOBUF_perception_2fperception_5fmap_5froi_2eproto__INCLUDED
#define PROTOBUF_perception_2fperception_5fmap_5froi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/header.pb.h"
#include "map/map.pb.h"
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
void protobuf_AssignDesc_perception_2fperception_5fmap_5froi_2eproto();
void protobuf_ShutdownFile_perception_2fperception_5fmap_5froi_2eproto();

class PerceptionMapROI;
class PerceptionMapROI_Region;

// ===================================================================

class PerceptionMapROI_Region : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.PerceptionMapROI.Region) */ {
 public:
  PerceptionMapROI_Region();
  virtual ~PerceptionMapROI_Region();

  PerceptionMapROI_Region(const PerceptionMapROI_Region& from);

  inline PerceptionMapROI_Region& operator=(const PerceptionMapROI_Region& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PerceptionMapROI_Region& default_instance();

  void Swap(PerceptionMapROI_Region* other);

  // implements Message ----------------------------------------------

  inline PerceptionMapROI_Region* New() const { return New(NULL); }

  PerceptionMapROI_Region* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PerceptionMapROI_Region& from);
  void MergeFrom(const PerceptionMapROI_Region& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PerceptionMapROI_Region* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 start_x = 1;
  bool has_start_x() const;
  void clear_start_x();
  static const int kStartXFieldNumber = 1;
  ::google::protobuf::int32 start_x() const;
  void set_start_x(::google::protobuf::int32 value);

  // optional int32 end_x = 2;
  bool has_end_x() const;
  void clear_end_x();
  static const int kEndXFieldNumber = 2;
  ::google::protobuf::int32 end_x() const;
  void set_end_x(::google::protobuf::int32 value);

  // optional int32 start_y = 3;
  bool has_start_y() const;
  void clear_start_y();
  static const int kStartYFieldNumber = 3;
  ::google::protobuf::int32 start_y() const;
  void set_start_y(::google::protobuf::int32 value);

  // optional int32 end_y = 4;
  bool has_end_y() const;
  void clear_end_y();
  static const int kEndYFieldNumber = 4;
  ::google::protobuf::int32 end_y() const;
  void set_end_y(::google::protobuf::int32 value);

  // optional int32 extension_distance = 5;
  bool has_extension_distance() const;
  void clear_extension_distance();
  static const int kExtensionDistanceFieldNumber = 5;
  ::google::protobuf::int32 extension_distance() const;
  void set_extension_distance(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.perception.PerceptionMapROI.Region)
 private:
  inline void set_has_start_x();
  inline void clear_has_start_x();
  inline void set_has_end_x();
  inline void clear_has_end_x();
  inline void set_has_start_y();
  inline void clear_has_start_y();
  inline void set_has_end_y();
  inline void clear_has_end_y();
  inline void set_has_extension_distance();
  inline void clear_has_extension_distance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 start_x_;
  ::google::protobuf::int32 end_x_;
  ::google::protobuf::int32 start_y_;
  ::google::protobuf::int32 end_y_;
  ::google::protobuf::int32 extension_distance_;
  friend void  protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
  friend void protobuf_AssignDesc_perception_2fperception_5fmap_5froi_2eproto();
  friend void protobuf_ShutdownFile_perception_2fperception_5fmap_5froi_2eproto();

  void InitAsDefaultInstance();
  static PerceptionMapROI_Region* default_instance_;
};
// -------------------------------------------------------------------

class PerceptionMapROI : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.PerceptionMapROI) */ {
 public:
  PerceptionMapROI();
  virtual ~PerceptionMapROI();

  PerceptionMapROI(const PerceptionMapROI& from);

  inline PerceptionMapROI& operator=(const PerceptionMapROI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PerceptionMapROI& default_instance();

  void Swap(PerceptionMapROI* other);

  // implements Message ----------------------------------------------

  inline PerceptionMapROI* New() const { return New(NULL); }

  PerceptionMapROI* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PerceptionMapROI& from);
  void MergeFrom(const PerceptionMapROI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PerceptionMapROI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PerceptionMapROI_Region Region;

  // accessors -------------------------------------------------------

  // optional .apollo.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::apollo::common::Header& header() const;
  ::apollo::common::Header* mutable_header();
  ::apollo::common::Header* release_header();
  void set_allocated_header(::apollo::common::Header* header);

  // optional .apollo.hdmap.Header hdmap_header = 8;
  bool has_hdmap_header() const;
  void clear_hdmap_header();
  static const int kHdmapHeaderFieldNumber = 8;
  const ::apollo::hdmap::Header& hdmap_header() const;
  ::apollo::hdmap::Header* mutable_hdmap_header();
  ::apollo::hdmap::Header* release_hdmap_header();
  void set_allocated_hdmap_header(::apollo::hdmap::Header* hdmap_header);

  // optional double origin_x = 2;
  bool has_origin_x() const;
  void clear_origin_x();
  static const int kOriginXFieldNumber = 2;
  double origin_x() const;
  void set_origin_x(double value);

  // optional double origin_y = 3;
  bool has_origin_y() const;
  void clear_origin_y();
  static const int kOriginYFieldNumber = 3;
  double origin_y() const;
  void set_origin_y(double value);

  // optional double grid_size = 4;
  bool has_grid_size() const;
  void clear_grid_size();
  static const int kGridSizeFieldNumber = 4;
  double grid_size() const;
  void set_grid_size(double value);

  // optional int32 num_rows = 5;
  bool has_num_rows() const;
  void clear_num_rows();
  static const int kNumRowsFieldNumber = 5;
  ::google::protobuf::int32 num_rows() const;
  void set_num_rows(::google::protobuf::int32 value);

  // optional int32 num_columns = 6;
  bool has_num_columns() const;
  void clear_num_columns();
  static const int kNumColumnsFieldNumber = 6;
  ::google::protobuf::int32 num_columns() const;
  void set_num_columns(::google::protobuf::int32 value);

  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  int region_size() const;
  void clear_region();
  static const int kRegionFieldNumber = 7;
  const ::apollo::perception::PerceptionMapROI_Region& region(int index) const;
  ::apollo::perception::PerceptionMapROI_Region* mutable_region(int index);
  ::apollo::perception::PerceptionMapROI_Region* add_region();
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >*
      mutable_region();
  const ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >&
      region() const;

  // @@protoc_insertion_point(class_scope:apollo.perception.PerceptionMapROI)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_hdmap_header();
  inline void clear_has_hdmap_header();
  inline void set_has_origin_x();
  inline void clear_has_origin_x();
  inline void set_has_origin_y();
  inline void clear_has_origin_y();
  inline void set_has_grid_size();
  inline void clear_has_grid_size();
  inline void set_has_num_rows();
  inline void clear_has_num_rows();
  inline void set_has_num_columns();
  inline void clear_has_num_columns();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::apollo::common::Header* header_;
  ::apollo::hdmap::Header* hdmap_header_;
  double origin_x_;
  double origin_y_;
  double grid_size_;
  ::google::protobuf::int32 num_rows_;
  ::google::protobuf::int32 num_columns_;
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region > region_;
  friend void  protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
  friend void protobuf_AssignDesc_perception_2fperception_5fmap_5froi_2eproto();
  friend void protobuf_ShutdownFile_perception_2fperception_5fmap_5froi_2eproto();

  void InitAsDefaultInstance();
  static PerceptionMapROI* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PerceptionMapROI_Region

// optional int32 start_x = 1;
inline bool PerceptionMapROI_Region::has_start_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerceptionMapROI_Region::set_has_start_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PerceptionMapROI_Region::clear_has_start_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PerceptionMapROI_Region::clear_start_x() {
  start_x_ = 0;
  clear_has_start_x();
}
inline ::google::protobuf::int32 PerceptionMapROI_Region::start_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.start_x)
  return start_x_;
}
inline void PerceptionMapROI_Region::set_start_x(::google::protobuf::int32 value) {
  set_has_start_x();
  start_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.start_x)
}

// optional int32 end_x = 2;
inline bool PerceptionMapROI_Region::has_end_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PerceptionMapROI_Region::set_has_end_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PerceptionMapROI_Region::clear_has_end_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PerceptionMapROI_Region::clear_end_x() {
  end_x_ = 0;
  clear_has_end_x();
}
inline ::google::protobuf::int32 PerceptionMapROI_Region::end_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.end_x)
  return end_x_;
}
inline void PerceptionMapROI_Region::set_end_x(::google::protobuf::int32 value) {
  set_has_end_x();
  end_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.end_x)
}

// optional int32 start_y = 3;
inline bool PerceptionMapROI_Region::has_start_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PerceptionMapROI_Region::set_has_start_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PerceptionMapROI_Region::clear_has_start_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PerceptionMapROI_Region::clear_start_y() {
  start_y_ = 0;
  clear_has_start_y();
}
inline ::google::protobuf::int32 PerceptionMapROI_Region::start_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.start_y)
  return start_y_;
}
inline void PerceptionMapROI_Region::set_start_y(::google::protobuf::int32 value) {
  set_has_start_y();
  start_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.start_y)
}

// optional int32 end_y = 4;
inline bool PerceptionMapROI_Region::has_end_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PerceptionMapROI_Region::set_has_end_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PerceptionMapROI_Region::clear_has_end_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PerceptionMapROI_Region::clear_end_y() {
  end_y_ = 0;
  clear_has_end_y();
}
inline ::google::protobuf::int32 PerceptionMapROI_Region::end_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.end_y)
  return end_y_;
}
inline void PerceptionMapROI_Region::set_end_y(::google::protobuf::int32 value) {
  set_has_end_y();
  end_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.end_y)
}

// optional int32 extension_distance = 5;
inline bool PerceptionMapROI_Region::has_extension_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PerceptionMapROI_Region::set_has_extension_distance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PerceptionMapROI_Region::clear_has_extension_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PerceptionMapROI_Region::clear_extension_distance() {
  extension_distance_ = 0;
  clear_has_extension_distance();
}
inline ::google::protobuf::int32 PerceptionMapROI_Region::extension_distance() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.extension_distance)
  return extension_distance_;
}
inline void PerceptionMapROI_Region::set_extension_distance(::google::protobuf::int32 value) {
  set_has_extension_distance();
  extension_distance_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.extension_distance)
}

// -------------------------------------------------------------------

// PerceptionMapROI

// optional .apollo.common.Header header = 1;
inline bool PerceptionMapROI::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerceptionMapROI::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PerceptionMapROI::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PerceptionMapROI::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
inline const ::apollo::common::Header& PerceptionMapROI::header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::apollo::common::Header* PerceptionMapROI::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.header)
  return header_;
}
inline ::apollo::common::Header* PerceptionMapROI::release_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionMapROI.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void PerceptionMapROI::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionMapROI.header)
}

// optional .apollo.hdmap.Header hdmap_header = 8;
inline bool PerceptionMapROI::has_hdmap_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PerceptionMapROI::set_has_hdmap_header() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PerceptionMapROI::clear_has_hdmap_header() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PerceptionMapROI::clear_hdmap_header() {
  if (hdmap_header_ != NULL) hdmap_header_->::apollo::hdmap::Header::Clear();
  clear_has_hdmap_header();
}
inline const ::apollo::hdmap::Header& PerceptionMapROI::hdmap_header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.hdmap_header)
  return hdmap_header_ != NULL ? *hdmap_header_ : *default_instance_->hdmap_header_;
}
inline ::apollo::hdmap::Header* PerceptionMapROI::mutable_hdmap_header() {
  set_has_hdmap_header();
  if (hdmap_header_ == NULL) {
    hdmap_header_ = new ::apollo::hdmap::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.hdmap_header)
  return hdmap_header_;
}
inline ::apollo::hdmap::Header* PerceptionMapROI::release_hdmap_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionMapROI.hdmap_header)
  clear_has_hdmap_header();
  ::apollo::hdmap::Header* temp = hdmap_header_;
  hdmap_header_ = NULL;
  return temp;
}
inline void PerceptionMapROI::set_allocated_hdmap_header(::apollo::hdmap::Header* hdmap_header) {
  delete hdmap_header_;
  hdmap_header_ = hdmap_header;
  if (hdmap_header) {
    set_has_hdmap_header();
  } else {
    clear_has_hdmap_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionMapROI.hdmap_header)
}

// optional double origin_x = 2;
inline bool PerceptionMapROI::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PerceptionMapROI::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PerceptionMapROI::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PerceptionMapROI::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline double PerceptionMapROI::origin_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.origin_x)
  return origin_x_;
}
inline void PerceptionMapROI::set_origin_x(double value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.origin_x)
}

// optional double origin_y = 3;
inline bool PerceptionMapROI::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PerceptionMapROI::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PerceptionMapROI::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PerceptionMapROI::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline double PerceptionMapROI::origin_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.origin_y)
  return origin_y_;
}
inline void PerceptionMapROI::set_origin_y(double value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.origin_y)
}

// optional double grid_size = 4;
inline bool PerceptionMapROI::has_grid_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PerceptionMapROI::set_has_grid_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PerceptionMapROI::clear_has_grid_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PerceptionMapROI::clear_grid_size() {
  grid_size_ = 0;
  clear_has_grid_size();
}
inline double PerceptionMapROI::grid_size() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.grid_size)
  return grid_size_;
}
inline void PerceptionMapROI::set_grid_size(double value) {
  set_has_grid_size();
  grid_size_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.grid_size)
}

// optional int32 num_rows = 5;
inline bool PerceptionMapROI::has_num_rows() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PerceptionMapROI::set_has_num_rows() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PerceptionMapROI::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PerceptionMapROI::clear_num_rows() {
  num_rows_ = 0;
  clear_has_num_rows();
}
inline ::google::protobuf::int32 PerceptionMapROI::num_rows() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.num_rows)
  return num_rows_;
}
inline void PerceptionMapROI::set_num_rows(::google::protobuf::int32 value) {
  set_has_num_rows();
  num_rows_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.num_rows)
}

// optional int32 num_columns = 6;
inline bool PerceptionMapROI::has_num_columns() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PerceptionMapROI::set_has_num_columns() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PerceptionMapROI::clear_has_num_columns() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PerceptionMapROI::clear_num_columns() {
  num_columns_ = 0;
  clear_has_num_columns();
}
inline ::google::protobuf::int32 PerceptionMapROI::num_columns() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.num_columns)
  return num_columns_;
}
inline void PerceptionMapROI::set_num_columns(::google::protobuf::int32 value) {
  set_has_num_columns();
  num_columns_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.num_columns)
}

// repeated .apollo.perception.PerceptionMapROI.Region region = 7;
inline int PerceptionMapROI::region_size() const {
  return region_.size();
}
inline void PerceptionMapROI::clear_region() {
  region_.Clear();
}
inline const ::apollo::perception::PerceptionMapROI_Region& PerceptionMapROI::region(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.region)
  return region_.Get(index);
}
inline ::apollo::perception::PerceptionMapROI_Region* PerceptionMapROI::mutable_region(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.region)
  return region_.Mutable(index);
}
inline ::apollo::perception::PerceptionMapROI_Region* PerceptionMapROI::add_region() {
  // @@protoc_insertion_point(field_add:apollo.perception.PerceptionMapROI.region)
  return region_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >*
PerceptionMapROI::mutable_region() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.PerceptionMapROI.region)
  return &region_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >&
PerceptionMapROI::region() const {
  // @@protoc_insertion_point(field_list:apollo.perception.PerceptionMapROI.region)
  return region_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_2fperception_5fmap_5froi_2eproto__INCLUDED
