// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/drive_state.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common/drive_state.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace common {

namespace {

const ::google::protobuf::Descriptor* EngageAdvice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EngageAdvice_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EngageAdvice_Advice_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2fdrive_5fstate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_common_2fdrive_5fstate_2eproto() {
  protobuf_AddDesc_common_2fdrive_5fstate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common/drive_state.proto");
  GOOGLE_CHECK(file != NULL);
  EngageAdvice_descriptor_ = file->message_type(0);
  static const int EngageAdvice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngageAdvice, advice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngageAdvice, reason_),
  };
  EngageAdvice_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EngageAdvice_descriptor_,
      EngageAdvice::default_instance_,
      EngageAdvice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngageAdvice, _has_bits_[0]),
      -1,
      -1,
      sizeof(EngageAdvice),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EngageAdvice, _internal_metadata_),
      -1);
  EngageAdvice_Advice_descriptor_ = EngageAdvice_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2fdrive_5fstate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EngageAdvice_descriptor_, &EngageAdvice::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2fdrive_5fstate_2eproto() {
  delete EngageAdvice::default_instance_;
  delete EngageAdvice_reflection_;
}

void protobuf_AddDesc_common_2fdrive_5fstate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_common_2fdrive_5fstate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030common/drive_state.proto\022\rapollo.commo"
    "n\"\315\001\n\014EngageAdvice\022C\n\006advice\030\001 \001(\0162\".apo"
    "llo.common.EngageAdvice.Advice:\017DISALLOW"
    "_ENGAGE\022\016\n\006reason\030\002 \001(\t\"h\n\006Advice\022\013\n\007UNK"
    "NOWN\020\000\022\023\n\017DISALLOW_ENGAGE\020\001\022\023\n\017READY_TO_"
    "ENGAGE\020\002\022\020\n\014KEEP_ENGAGED\020\003\022\025\n\021PREPARE_DI"
    "SENGAGE\020\004", 249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/drive_state.proto", &protobuf_RegisterTypes);
  EngageAdvice::default_instance_ = new EngageAdvice();
  EngageAdvice::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2fdrive_5fstate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2fdrive_5fstate_2eproto {
  StaticDescriptorInitializer_common_2fdrive_5fstate_2eproto() {
    protobuf_AddDesc_common_2fdrive_5fstate_2eproto();
  }
} static_descriptor_initializer_common_2fdrive_5fstate_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* EngageAdvice_Advice_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EngageAdvice_Advice_descriptor_;
}
bool EngageAdvice_Advice_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EngageAdvice_Advice EngageAdvice::UNKNOWN;
const EngageAdvice_Advice EngageAdvice::DISALLOW_ENGAGE;
const EngageAdvice_Advice EngageAdvice::READY_TO_ENGAGE;
const EngageAdvice_Advice EngageAdvice::KEEP_ENGAGED;
const EngageAdvice_Advice EngageAdvice::PREPARE_DISENGAGE;
const EngageAdvice_Advice EngageAdvice::Advice_MIN;
const EngageAdvice_Advice EngageAdvice::Advice_MAX;
const int EngageAdvice::Advice_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EngageAdvice::kAdviceFieldNumber;
const int EngageAdvice::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EngageAdvice::EngageAdvice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.EngageAdvice)
}

void EngageAdvice::InitAsDefaultInstance() {
}

EngageAdvice::EngageAdvice(const EngageAdvice& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.common.EngageAdvice)
}

void EngageAdvice::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  advice_ = 1;
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EngageAdvice::~EngageAdvice() {
  // @@protoc_insertion_point(destructor:apollo.common.EngageAdvice)
  SharedDtor();
}

void EngageAdvice::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EngageAdvice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EngageAdvice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EngageAdvice_descriptor_;
}

const EngageAdvice& EngageAdvice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2fdrive_5fstate_2eproto();
  return *default_instance_;
}

EngageAdvice* EngageAdvice::default_instance_ = NULL;

EngageAdvice* EngageAdvice::New(::google::protobuf::Arena* arena) const {
  EngageAdvice* n = new EngageAdvice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EngageAdvice::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.EngageAdvice)
  if (_has_bits_[0 / 32] & 3u) {
    advice_ = 1;
    if (has_reason()) {
      reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EngageAdvice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.EngageAdvice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::EngageAdvice_Advice_IsValid(value)) {
            set_advice(static_cast< ::apollo::common::EngageAdvice_Advice >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reason;
        break;
      }

      // optional string reason = 2;
      case 2: {
        if (tag == 18) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.common.EngageAdvice.reason");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.EngageAdvice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.EngageAdvice)
  return false;
#undef DO_
}

void EngageAdvice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.EngageAdvice)
  // optional .apollo.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
  if (has_advice()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->advice(), output);
  }

  // optional string reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.common.EngageAdvice.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.EngageAdvice)
}

::google::protobuf::uint8* EngageAdvice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.EngageAdvice)
  // optional .apollo.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
  if (has_advice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->advice(), target);
  }

  // optional string reason = 2;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.common.EngageAdvice.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.EngageAdvice)
  return target;
}

int EngageAdvice::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.EngageAdvice)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
    if (has_advice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->advice());
    }

    // optional string reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EngageAdvice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.EngageAdvice)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EngageAdvice* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EngageAdvice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.EngageAdvice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.EngageAdvice)
    MergeFrom(*source);
  }
}

void EngageAdvice::MergeFrom(const EngageAdvice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.EngageAdvice)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_advice()) {
      set_advice(from.advice());
    }
    if (from.has_reason()) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EngageAdvice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.EngageAdvice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EngageAdvice::CopyFrom(const EngageAdvice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.EngageAdvice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EngageAdvice::IsInitialized() const {

  return true;
}

void EngageAdvice::Swap(EngageAdvice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EngageAdvice::InternalSwap(EngageAdvice* other) {
  std::swap(advice_, other->advice_);
  reason_.Swap(&other->reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EngageAdvice::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EngageAdvice_descriptor_;
  metadata.reflection = EngageAdvice_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EngageAdvice

// optional .apollo.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
bool EngageAdvice::has_advice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EngageAdvice::set_has_advice() {
  _has_bits_[0] |= 0x00000001u;
}
void EngageAdvice::clear_has_advice() {
  _has_bits_[0] &= ~0x00000001u;
}
void EngageAdvice::clear_advice() {
  advice_ = 1;
  clear_has_advice();
}
 ::apollo::common::EngageAdvice_Advice EngageAdvice::advice() const {
  // @@protoc_insertion_point(field_get:apollo.common.EngageAdvice.advice)
  return static_cast< ::apollo::common::EngageAdvice_Advice >(advice_);
}
 void EngageAdvice::set_advice(::apollo::common::EngageAdvice_Advice value) {
  assert(::apollo::common::EngageAdvice_Advice_IsValid(value));
  set_has_advice();
  advice_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.EngageAdvice.advice)
}

// optional string reason = 2;
bool EngageAdvice::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EngageAdvice::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
void EngageAdvice::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void EngageAdvice::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reason();
}
 const ::std::string& EngageAdvice::reason() const {
  // @@protoc_insertion_point(field_get:apollo.common.EngageAdvice.reason)
  return reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngageAdvice::set_reason(const ::std::string& value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.common.EngageAdvice.reason)
}
 void EngageAdvice::set_reason(const char* value) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.common.EngageAdvice.reason)
}
 void EngageAdvice::set_reason(const char* value, size_t size) {
  set_has_reason();
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.common.EngageAdvice.reason)
}
 ::std::string* EngageAdvice::mutable_reason() {
  set_has_reason();
  // @@protoc_insertion_point(field_mutable:apollo.common.EngageAdvice.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EngageAdvice::release_reason() {
  // @@protoc_insertion_point(field_release:apollo.common.EngageAdvice.reason)
  clear_has_reason();
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EngageAdvice::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    set_has_reason();
  } else {
    clear_has_reason();
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:apollo.common.EngageAdvice.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
