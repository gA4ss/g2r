// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/perception_map_roi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "perception/perception_map_roi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {

namespace {

const ::google::protobuf::Descriptor* PerceptionMapROI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PerceptionMapROI_reflection_ = NULL;
const ::google::protobuf::Descriptor* PerceptionMapROI_Region_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PerceptionMapROI_Region_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_perception_2fperception_5fmap_5froi_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_perception_2fperception_5fmap_5froi_2eproto() {
  protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "perception/perception_map_roi.proto");
  GOOGLE_CHECK(file != NULL);
  PerceptionMapROI_descriptor_ = file->message_type(0);
  static const int PerceptionMapROI_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, hdmap_header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, origin_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, origin_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, grid_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, num_rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, num_columns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, region_),
  };
  PerceptionMapROI_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PerceptionMapROI_descriptor_,
      PerceptionMapROI::default_instance_,
      PerceptionMapROI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, _has_bits_[0]),
      -1,
      -1,
      sizeof(PerceptionMapROI),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, _internal_metadata_),
      -1);
  PerceptionMapROI_Region_descriptor_ = PerceptionMapROI_descriptor_->nested_type(0);
  static const int PerceptionMapROI_Region_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, start_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, end_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, start_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, end_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, extension_distance_),
  };
  PerceptionMapROI_Region_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PerceptionMapROI_Region_descriptor_,
      PerceptionMapROI_Region::default_instance_,
      PerceptionMapROI_Region_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, _has_bits_[0]),
      -1,
      -1,
      sizeof(PerceptionMapROI_Region),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_perception_2fperception_5fmap_5froi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PerceptionMapROI_descriptor_, &PerceptionMapROI::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PerceptionMapROI_Region_descriptor_, &PerceptionMapROI_Region::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_perception_2fperception_5fmap_5froi_2eproto() {
  delete PerceptionMapROI::default_instance_;
  delete PerceptionMapROI_reflection_;
  delete PerceptionMapROI_Region::default_instance_;
  delete PerceptionMapROI_Region_reflection_;
}

void protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::common::protobuf_AddDesc_common_2fheader_2eproto();
  ::apollo::hdmap::protobuf_AddDesc_map_2fmap_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#perception/perception_map_roi.proto\022\021a"
    "pollo.perception\032\023common/header.proto\032\rm"
    "ap/map.proto\"\345\002\n\020PerceptionMapROI\022%\n\006hea"
    "der\030\001 \001(\0132\025.apollo.common.Header\022*\n\014hdma"
    "p_header\030\010 \001(\0132\024.apollo.hdmap.Header\022\020\n\010"
    "origin_x\030\002 \001(\001\022\020\n\010origin_y\030\003 \001(\001\022\021\n\tgrid"
    "_size\030\004 \001(\001\022\020\n\010num_rows\030\005 \001(\005\022\023\n\013num_col"
    "umns\030\006 \001(\005\022:\n\006region\030\007 \003(\0132*.apollo.perc"
    "eption.PerceptionMapROI.Region\032d\n\006Region"
    "\022\017\n\007start_x\030\001 \001(\005\022\r\n\005end_x\030\002 \001(\005\022\017\n\007star"
    "t_y\030\003 \001(\005\022\r\n\005end_y\030\004 \001(\005\022\032\n\022extension_di"
    "stance\030\005 \001(\005", 452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "perception/perception_map_roi.proto", &protobuf_RegisterTypes);
  PerceptionMapROI::default_instance_ = new PerceptionMapROI();
  PerceptionMapROI_Region::default_instance_ = new PerceptionMapROI_Region();
  PerceptionMapROI::default_instance_->InitAsDefaultInstance();
  PerceptionMapROI_Region::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_perception_2fperception_5fmap_5froi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_perception_2fperception_5fmap_5froi_2eproto {
  StaticDescriptorInitializer_perception_2fperception_5fmap_5froi_2eproto() {
    protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
  }
} static_descriptor_initializer_perception_2fperception_5fmap_5froi_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionMapROI_Region::kStartXFieldNumber;
const int PerceptionMapROI_Region::kEndXFieldNumber;
const int PerceptionMapROI_Region::kStartYFieldNumber;
const int PerceptionMapROI_Region::kEndYFieldNumber;
const int PerceptionMapROI_Region::kExtensionDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionMapROI_Region::PerceptionMapROI_Region()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.PerceptionMapROI.Region)
}

void PerceptionMapROI_Region::InitAsDefaultInstance() {
}

PerceptionMapROI_Region::PerceptionMapROI_Region(const PerceptionMapROI_Region& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.PerceptionMapROI.Region)
}

void PerceptionMapROI_Region::SharedCtor() {
  _cached_size_ = 0;
  start_x_ = 0;
  end_x_ = 0;
  start_y_ = 0;
  end_y_ = 0;
  extension_distance_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PerceptionMapROI_Region::~PerceptionMapROI_Region() {
  // @@protoc_insertion_point(destructor:apollo.perception.PerceptionMapROI.Region)
  SharedDtor();
}

void PerceptionMapROI_Region::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PerceptionMapROI_Region::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerceptionMapROI_Region::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PerceptionMapROI_Region_descriptor_;
}

const PerceptionMapROI_Region& PerceptionMapROI_Region::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
  return *default_instance_;
}

PerceptionMapROI_Region* PerceptionMapROI_Region::default_instance_ = NULL;

PerceptionMapROI_Region* PerceptionMapROI_Region::New(::google::protobuf::Arena* arena) const {
  PerceptionMapROI_Region* n = new PerceptionMapROI_Region;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerceptionMapROI_Region::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.PerceptionMapROI.Region)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PerceptionMapROI_Region, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PerceptionMapROI_Region*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(start_x_, extension_distance_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PerceptionMapROI_Region::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.PerceptionMapROI.Region)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 start_x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_x_)));
          set_has_start_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end_x;
        break;
      }

      // optional int32 end_x = 2;
      case 2: {
        if (tag == 16) {
         parse_end_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_x_)));
          set_has_end_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_start_y;
        break;
      }

      // optional int32 start_y = 3;
      case 3: {
        if (tag == 24) {
         parse_start_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_y_)));
          set_has_start_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_end_y;
        break;
      }

      // optional int32 end_y = 4;
      case 4: {
        if (tag == 32) {
         parse_end_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_y_)));
          set_has_end_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_extension_distance;
        break;
      }

      // optional int32 extension_distance = 5;
      case 5: {
        if (tag == 40) {
         parse_extension_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extension_distance_)));
          set_has_extension_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.PerceptionMapROI.Region)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.PerceptionMapROI.Region)
  return false;
#undef DO_
}

void PerceptionMapROI_Region::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.PerceptionMapROI.Region)
  // optional int32 start_x = 1;
  if (has_start_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start_x(), output);
  }

  // optional int32 end_x = 2;
  if (has_end_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end_x(), output);
  }

  // optional int32 start_y = 3;
  if (has_start_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->start_y(), output);
  }

  // optional int32 end_y = 4;
  if (has_end_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->end_y(), output);
  }

  // optional int32 extension_distance = 5;
  if (has_extension_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->extension_distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.PerceptionMapROI.Region)
}

::google::protobuf::uint8* PerceptionMapROI_Region::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.PerceptionMapROI.Region)
  // optional int32 start_x = 1;
  if (has_start_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start_x(), target);
  }

  // optional int32 end_x = 2;
  if (has_end_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end_x(), target);
  }

  // optional int32 start_y = 3;
  if (has_start_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->start_y(), target);
  }

  // optional int32 end_y = 4;
  if (has_end_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->end_y(), target);
  }

  // optional int32 extension_distance = 5;
  if (has_extension_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->extension_distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.PerceptionMapROI.Region)
  return target;
}

int PerceptionMapROI_Region::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.PerceptionMapROI.Region)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 start_x = 1;
    if (has_start_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_x());
    }

    // optional int32 end_x = 2;
    if (has_end_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_x());
    }

    // optional int32 start_y = 3;
    if (has_start_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_y());
    }

    // optional int32 end_y = 4;
    if (has_end_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_y());
    }

    // optional int32 extension_distance = 5;
    if (has_extension_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extension_distance());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerceptionMapROI_Region::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.PerceptionMapROI.Region)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PerceptionMapROI_Region* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionMapROI_Region>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.PerceptionMapROI.Region)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.PerceptionMapROI.Region)
    MergeFrom(*source);
  }
}

void PerceptionMapROI_Region::MergeFrom(const PerceptionMapROI_Region& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.PerceptionMapROI.Region)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_x()) {
      set_start_x(from.start_x());
    }
    if (from.has_end_x()) {
      set_end_x(from.end_x());
    }
    if (from.has_start_y()) {
      set_start_y(from.start_y());
    }
    if (from.has_end_y()) {
      set_end_y(from.end_y());
    }
    if (from.has_extension_distance()) {
      set_extension_distance(from.extension_distance());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PerceptionMapROI_Region::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.PerceptionMapROI.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionMapROI_Region::CopyFrom(const PerceptionMapROI_Region& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.PerceptionMapROI.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionMapROI_Region::IsInitialized() const {

  return true;
}

void PerceptionMapROI_Region::Swap(PerceptionMapROI_Region* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionMapROI_Region::InternalSwap(PerceptionMapROI_Region* other) {
  std::swap(start_x_, other->start_x_);
  std::swap(end_x_, other->end_x_);
  std::swap(start_y_, other->start_y_);
  std::swap(end_y_, other->end_y_);
  std::swap(extension_distance_, other->extension_distance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerceptionMapROI_Region::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PerceptionMapROI_Region_descriptor_;
  metadata.reflection = PerceptionMapROI_Region_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionMapROI::kHeaderFieldNumber;
const int PerceptionMapROI::kHdmapHeaderFieldNumber;
const int PerceptionMapROI::kOriginXFieldNumber;
const int PerceptionMapROI::kOriginYFieldNumber;
const int PerceptionMapROI::kGridSizeFieldNumber;
const int PerceptionMapROI::kNumRowsFieldNumber;
const int PerceptionMapROI::kNumColumnsFieldNumber;
const int PerceptionMapROI::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionMapROI::PerceptionMapROI()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.PerceptionMapROI)
}

void PerceptionMapROI::InitAsDefaultInstance() {
  header_ = const_cast< ::apollo::common::Header*>(&::apollo::common::Header::default_instance());
  hdmap_header_ = const_cast< ::apollo::hdmap::Header*>(&::apollo::hdmap::Header::default_instance());
}

PerceptionMapROI::PerceptionMapROI(const PerceptionMapROI& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.PerceptionMapROI)
}

void PerceptionMapROI::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  hdmap_header_ = NULL;
  origin_x_ = 0;
  origin_y_ = 0;
  grid_size_ = 0;
  num_rows_ = 0;
  num_columns_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PerceptionMapROI::~PerceptionMapROI() {
  // @@protoc_insertion_point(destructor:apollo.perception.PerceptionMapROI)
  SharedDtor();
}

void PerceptionMapROI::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete hdmap_header_;
  }
}

void PerceptionMapROI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerceptionMapROI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PerceptionMapROI_descriptor_;
}

const PerceptionMapROI& PerceptionMapROI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fperception_5fmap_5froi_2eproto();
  return *default_instance_;
}

PerceptionMapROI* PerceptionMapROI::default_instance_ = NULL;

PerceptionMapROI* PerceptionMapROI::New(::google::protobuf::Arena* arena) const {
  PerceptionMapROI* n = new PerceptionMapROI;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerceptionMapROI::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.PerceptionMapROI)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PerceptionMapROI, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PerceptionMapROI*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(origin_x_, num_columns_);
    if (has_header()) {
      if (header_ != NULL) header_->::apollo::common::Header::Clear();
    }
    if (has_hdmap_header()) {
      if (hdmap_header_ != NULL) hdmap_header_->::apollo::hdmap::Header::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  region_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PerceptionMapROI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.PerceptionMapROI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_origin_x;
        break;
      }

      // optional double origin_x = 2;
      case 2: {
        if (tag == 17) {
         parse_origin_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &origin_x_)));
          set_has_origin_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_origin_y;
        break;
      }

      // optional double origin_y = 3;
      case 3: {
        if (tag == 25) {
         parse_origin_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &origin_y_)));
          set_has_origin_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_grid_size;
        break;
      }

      // optional double grid_size = 4;
      case 4: {
        if (tag == 33) {
         parse_grid_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &grid_size_)));
          set_has_grid_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_num_rows;
        break;
      }

      // optional int32 num_rows = 5;
      case 5: {
        if (tag == 40) {
         parse_num_rows:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_rows_)));
          set_has_num_rows();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_num_columns;
        break;
      }

      // optional int32 num_columns = 6;
      case 6: {
        if (tag == 48) {
         parse_num_columns:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_columns_)));
          set_has_num_columns();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_region;
        break;
      }

      // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
      case 7: {
        if (tag == 58) {
         parse_region:
          DO_(input->IncrementRecursionDepth());
         parse_loop_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_region;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(66)) goto parse_hdmap_header;
        break;
      }

      // optional .apollo.hdmap.Header hdmap_header = 8;
      case 8: {
        if (tag == 66) {
         parse_hdmap_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hdmap_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.PerceptionMapROI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.PerceptionMapROI)
  return false;
#undef DO_
}

void PerceptionMapROI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.PerceptionMapROI)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional double origin_x = 2;
  if (has_origin_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->origin_x(), output);
  }

  // optional double origin_y = 3;
  if (has_origin_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->origin_y(), output);
  }

  // optional double grid_size = 4;
  if (has_grid_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->grid_size(), output);
  }

  // optional int32 num_rows = 5;
  if (has_num_rows()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_rows(), output);
  }

  // optional int32 num_columns = 6;
  if (has_num_columns()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_columns(), output);
  }

  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  for (unsigned int i = 0, n = this->region_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->region(i), output);
  }

  // optional .apollo.hdmap.Header hdmap_header = 8;
  if (has_hdmap_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->hdmap_header_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.PerceptionMapROI)
}

::google::protobuf::uint8* PerceptionMapROI::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.PerceptionMapROI)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional double origin_x = 2;
  if (has_origin_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->origin_x(), target);
  }

  // optional double origin_y = 3;
  if (has_origin_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->origin_y(), target);
  }

  // optional double grid_size = 4;
  if (has_grid_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->grid_size(), target);
  }

  // optional int32 num_rows = 5;
  if (has_num_rows()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->num_rows(), target);
  }

  // optional int32 num_columns = 6;
  if (has_num_columns()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->num_columns(), target);
  }

  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  for (unsigned int i = 0, n = this->region_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->region(i), false, target);
  }

  // optional .apollo.hdmap.Header hdmap_header = 8;
  if (has_hdmap_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->hdmap_header_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.PerceptionMapROI)
  return target;
}

int PerceptionMapROI::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.PerceptionMapROI)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional .apollo.hdmap.Header hdmap_header = 8;
    if (has_hdmap_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hdmap_header_);
    }

    // optional double origin_x = 2;
    if (has_origin_x()) {
      total_size += 1 + 8;
    }

    // optional double origin_y = 3;
    if (has_origin_y()) {
      total_size += 1 + 8;
    }

    // optional double grid_size = 4;
    if (has_grid_size()) {
      total_size += 1 + 8;
    }

    // optional int32 num_rows = 5;
    if (has_num_rows()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_rows());
    }

    // optional int32 num_columns = 6;
    if (has_num_columns()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_columns());
    }

  }
  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  total_size += 1 * this->region_size();
  for (int i = 0; i < this->region_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->region(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerceptionMapROI::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.PerceptionMapROI)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PerceptionMapROI* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionMapROI>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.PerceptionMapROI)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.PerceptionMapROI)
    MergeFrom(*source);
  }
}

void PerceptionMapROI::MergeFrom(const PerceptionMapROI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.PerceptionMapROI)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  region_.MergeFrom(from.region_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (from.has_hdmap_header()) {
      mutable_hdmap_header()->::apollo::hdmap::Header::MergeFrom(from.hdmap_header());
    }
    if (from.has_origin_x()) {
      set_origin_x(from.origin_x());
    }
    if (from.has_origin_y()) {
      set_origin_y(from.origin_y());
    }
    if (from.has_grid_size()) {
      set_grid_size(from.grid_size());
    }
    if (from.has_num_rows()) {
      set_num_rows(from.num_rows());
    }
    if (from.has_num_columns()) {
      set_num_columns(from.num_columns());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PerceptionMapROI::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.PerceptionMapROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionMapROI::CopyFrom(const PerceptionMapROI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.PerceptionMapROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionMapROI::IsInitialized() const {

  return true;
}

void PerceptionMapROI::Swap(PerceptionMapROI* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionMapROI::InternalSwap(PerceptionMapROI* other) {
  std::swap(header_, other->header_);
  std::swap(hdmap_header_, other->hdmap_header_);
  std::swap(origin_x_, other->origin_x_);
  std::swap(origin_y_, other->origin_y_);
  std::swap(grid_size_, other->grid_size_);
  std::swap(num_rows_, other->num_rows_);
  std::swap(num_columns_, other->num_columns_);
  region_.UnsafeArenaSwap(&other->region_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerceptionMapROI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PerceptionMapROI_descriptor_;
  metadata.reflection = PerceptionMapROI_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerceptionMapROI_Region

// optional int32 start_x = 1;
bool PerceptionMapROI_Region::has_start_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PerceptionMapROI_Region::set_has_start_x() {
  _has_bits_[0] |= 0x00000001u;
}
void PerceptionMapROI_Region::clear_has_start_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void PerceptionMapROI_Region::clear_start_x() {
  start_x_ = 0;
  clear_has_start_x();
}
 ::google::protobuf::int32 PerceptionMapROI_Region::start_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.start_x)
  return start_x_;
}
 void PerceptionMapROI_Region::set_start_x(::google::protobuf::int32 value) {
  set_has_start_x();
  start_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.start_x)
}

// optional int32 end_x = 2;
bool PerceptionMapROI_Region::has_end_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PerceptionMapROI_Region::set_has_end_x() {
  _has_bits_[0] |= 0x00000002u;
}
void PerceptionMapROI_Region::clear_has_end_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void PerceptionMapROI_Region::clear_end_x() {
  end_x_ = 0;
  clear_has_end_x();
}
 ::google::protobuf::int32 PerceptionMapROI_Region::end_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.end_x)
  return end_x_;
}
 void PerceptionMapROI_Region::set_end_x(::google::protobuf::int32 value) {
  set_has_end_x();
  end_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.end_x)
}

// optional int32 start_y = 3;
bool PerceptionMapROI_Region::has_start_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PerceptionMapROI_Region::set_has_start_y() {
  _has_bits_[0] |= 0x00000004u;
}
void PerceptionMapROI_Region::clear_has_start_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void PerceptionMapROI_Region::clear_start_y() {
  start_y_ = 0;
  clear_has_start_y();
}
 ::google::protobuf::int32 PerceptionMapROI_Region::start_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.start_y)
  return start_y_;
}
 void PerceptionMapROI_Region::set_start_y(::google::protobuf::int32 value) {
  set_has_start_y();
  start_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.start_y)
}

// optional int32 end_y = 4;
bool PerceptionMapROI_Region::has_end_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PerceptionMapROI_Region::set_has_end_y() {
  _has_bits_[0] |= 0x00000008u;
}
void PerceptionMapROI_Region::clear_has_end_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void PerceptionMapROI_Region::clear_end_y() {
  end_y_ = 0;
  clear_has_end_y();
}
 ::google::protobuf::int32 PerceptionMapROI_Region::end_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.end_y)
  return end_y_;
}
 void PerceptionMapROI_Region::set_end_y(::google::protobuf::int32 value) {
  set_has_end_y();
  end_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.end_y)
}

// optional int32 extension_distance = 5;
bool PerceptionMapROI_Region::has_extension_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PerceptionMapROI_Region::set_has_extension_distance() {
  _has_bits_[0] |= 0x00000010u;
}
void PerceptionMapROI_Region::clear_has_extension_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
void PerceptionMapROI_Region::clear_extension_distance() {
  extension_distance_ = 0;
  clear_has_extension_distance();
}
 ::google::protobuf::int32 PerceptionMapROI_Region::extension_distance() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.extension_distance)
  return extension_distance_;
}
 void PerceptionMapROI_Region::set_extension_distance(::google::protobuf::int32 value) {
  set_has_extension_distance();
  extension_distance_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.extension_distance)
}

// -------------------------------------------------------------------

// PerceptionMapROI

// optional .apollo.common.Header header = 1;
bool PerceptionMapROI::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PerceptionMapROI::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void PerceptionMapROI::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void PerceptionMapROI::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
const ::apollo::common::Header& PerceptionMapROI::header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::apollo::common::Header* PerceptionMapROI::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.header)
  return header_;
}
::apollo::common::Header* PerceptionMapROI::release_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionMapROI.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void PerceptionMapROI::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionMapROI.header)
}

// optional .apollo.hdmap.Header hdmap_header = 8;
bool PerceptionMapROI::has_hdmap_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PerceptionMapROI::set_has_hdmap_header() {
  _has_bits_[0] |= 0x00000002u;
}
void PerceptionMapROI::clear_has_hdmap_header() {
  _has_bits_[0] &= ~0x00000002u;
}
void PerceptionMapROI::clear_hdmap_header() {
  if (hdmap_header_ != NULL) hdmap_header_->::apollo::hdmap::Header::Clear();
  clear_has_hdmap_header();
}
const ::apollo::hdmap::Header& PerceptionMapROI::hdmap_header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.hdmap_header)
  return hdmap_header_ != NULL ? *hdmap_header_ : *default_instance_->hdmap_header_;
}
::apollo::hdmap::Header* PerceptionMapROI::mutable_hdmap_header() {
  set_has_hdmap_header();
  if (hdmap_header_ == NULL) {
    hdmap_header_ = new ::apollo::hdmap::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.hdmap_header)
  return hdmap_header_;
}
::apollo::hdmap::Header* PerceptionMapROI::release_hdmap_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionMapROI.hdmap_header)
  clear_has_hdmap_header();
  ::apollo::hdmap::Header* temp = hdmap_header_;
  hdmap_header_ = NULL;
  return temp;
}
void PerceptionMapROI::set_allocated_hdmap_header(::apollo::hdmap::Header* hdmap_header) {
  delete hdmap_header_;
  hdmap_header_ = hdmap_header;
  if (hdmap_header) {
    set_has_hdmap_header();
  } else {
    clear_has_hdmap_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionMapROI.hdmap_header)
}

// optional double origin_x = 2;
bool PerceptionMapROI::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PerceptionMapROI::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
void PerceptionMapROI::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void PerceptionMapROI::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
 double PerceptionMapROI::origin_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.origin_x)
  return origin_x_;
}
 void PerceptionMapROI::set_origin_x(double value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.origin_x)
}

// optional double origin_y = 3;
bool PerceptionMapROI::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PerceptionMapROI::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
void PerceptionMapROI::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void PerceptionMapROI::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
 double PerceptionMapROI::origin_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.origin_y)
  return origin_y_;
}
 void PerceptionMapROI::set_origin_y(double value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.origin_y)
}

// optional double grid_size = 4;
bool PerceptionMapROI::has_grid_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PerceptionMapROI::set_has_grid_size() {
  _has_bits_[0] |= 0x00000010u;
}
void PerceptionMapROI::clear_has_grid_size() {
  _has_bits_[0] &= ~0x00000010u;
}
void PerceptionMapROI::clear_grid_size() {
  grid_size_ = 0;
  clear_has_grid_size();
}
 double PerceptionMapROI::grid_size() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.grid_size)
  return grid_size_;
}
 void PerceptionMapROI::set_grid_size(double value) {
  set_has_grid_size();
  grid_size_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.grid_size)
}

// optional int32 num_rows = 5;
bool PerceptionMapROI::has_num_rows() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PerceptionMapROI::set_has_num_rows() {
  _has_bits_[0] |= 0x00000020u;
}
void PerceptionMapROI::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000020u;
}
void PerceptionMapROI::clear_num_rows() {
  num_rows_ = 0;
  clear_has_num_rows();
}
 ::google::protobuf::int32 PerceptionMapROI::num_rows() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.num_rows)
  return num_rows_;
}
 void PerceptionMapROI::set_num_rows(::google::protobuf::int32 value) {
  set_has_num_rows();
  num_rows_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.num_rows)
}

// optional int32 num_columns = 6;
bool PerceptionMapROI::has_num_columns() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PerceptionMapROI::set_has_num_columns() {
  _has_bits_[0] |= 0x00000040u;
}
void PerceptionMapROI::clear_has_num_columns() {
  _has_bits_[0] &= ~0x00000040u;
}
void PerceptionMapROI::clear_num_columns() {
  num_columns_ = 0;
  clear_has_num_columns();
}
 ::google::protobuf::int32 PerceptionMapROI::num_columns() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.num_columns)
  return num_columns_;
}
 void PerceptionMapROI::set_num_columns(::google::protobuf::int32 value) {
  set_has_num_columns();
  num_columns_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.num_columns)
}

// repeated .apollo.perception.PerceptionMapROI.Region region = 7;
int PerceptionMapROI::region_size() const {
  return region_.size();
}
void PerceptionMapROI::clear_region() {
  region_.Clear();
}
const ::apollo::perception::PerceptionMapROI_Region& PerceptionMapROI::region(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.region)
  return region_.Get(index);
}
::apollo::perception::PerceptionMapROI_Region* PerceptionMapROI::mutable_region(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.region)
  return region_.Mutable(index);
}
::apollo::perception::PerceptionMapROI_Region* PerceptionMapROI::add_region() {
  // @@protoc_insertion_point(field_add:apollo.perception.PerceptionMapROI.region)
  return region_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >*
PerceptionMapROI::mutable_region() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.PerceptionMapROI.region)
  return &region_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >&
PerceptionMapROI::region() const {
  // @@protoc_insertion_point(field_list:apollo.perception.PerceptionMapROI.region)
  return region_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
