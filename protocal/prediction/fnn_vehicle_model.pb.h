// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/fnn_vehicle_model.proto

#ifndef PROTOBUF_prediction_2ffnn_5fvehicle_5fmodel_2eproto__INCLUDED
#define PROTOBUF_prediction_2ffnn_5fvehicle_5fmodel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "prediction/fnn_model_base.pb.h"
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_prediction_2ffnn_5fvehicle_5fmodel_2eproto();
void protobuf_AssignDesc_prediction_2ffnn_5fvehicle_5fmodel_2eproto();
void protobuf_ShutdownFile_prediction_2ffnn_5fvehicle_5fmodel_2eproto();

class FnnVehicleModel;

// ===================================================================

class FnnVehicleModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.FnnVehicleModel) */ {
 public:
  FnnVehicleModel();
  virtual ~FnnVehicleModel();

  FnnVehicleModel(const FnnVehicleModel& from);

  inline FnnVehicleModel& operator=(const FnnVehicleModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FnnVehicleModel& default_instance();

  void Swap(FnnVehicleModel* other);

  // implements Message ----------------------------------------------

  inline FnnVehicleModel* New() const { return New(NULL); }

  FnnVehicleModel* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FnnVehicleModel& from);
  void MergeFrom(const FnnVehicleModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FnnVehicleModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dim_input = 1;
  bool has_dim_input() const;
  void clear_dim_input();
  static const int kDimInputFieldNumber = 1;
  ::google::protobuf::int32 dim_input() const;
  void set_dim_input(::google::protobuf::int32 value);

  // optional .apollo.prediction.Vector samples_mean = 2;
  bool has_samples_mean() const;
  void clear_samples_mean();
  static const int kSamplesMeanFieldNumber = 2;
  const ::apollo::prediction::Vector& samples_mean() const;
  ::apollo::prediction::Vector* mutable_samples_mean();
  ::apollo::prediction::Vector* release_samples_mean();
  void set_allocated_samples_mean(::apollo::prediction::Vector* samples_mean);

  // optional .apollo.prediction.Vector samples_std = 3;
  bool has_samples_std() const;
  void clear_samples_std();
  static const int kSamplesStdFieldNumber = 3;
  const ::apollo::prediction::Vector& samples_std() const;
  ::apollo::prediction::Vector* mutable_samples_std();
  ::apollo::prediction::Vector* release_samples_std();
  void set_allocated_samples_std(::apollo::prediction::Vector* samples_std);

  // optional int32 num_layer = 4;
  bool has_num_layer() const;
  void clear_num_layer();
  static const int kNumLayerFieldNumber = 4;
  ::google::protobuf::int32 num_layer() const;
  void set_num_layer(::google::protobuf::int32 value);

  // repeated .apollo.prediction.Layer layer = 5;
  int layer_size() const;
  void clear_layer();
  static const int kLayerFieldNumber = 5;
  const ::apollo::prediction::Layer& layer(int index) const;
  ::apollo::prediction::Layer* mutable_layer(int index);
  ::apollo::prediction::Layer* add_layer();
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Layer >*
      mutable_layer();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Layer >&
      layer() const;

  // optional int32 dim_output = 6;
  bool has_dim_output() const;
  void clear_dim_output();
  static const int kDimOutputFieldNumber = 6;
  ::google::protobuf::int32 dim_output() const;
  void set_dim_output(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.FnnVehicleModel)
 private:
  inline void set_has_dim_input();
  inline void clear_has_dim_input();
  inline void set_has_samples_mean();
  inline void clear_has_samples_mean();
  inline void set_has_samples_std();
  inline void clear_has_samples_std();
  inline void set_has_num_layer();
  inline void clear_has_num_layer();
  inline void set_has_dim_output();
  inline void clear_has_dim_output();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::apollo::prediction::Vector* samples_mean_;
  ::google::protobuf::int32 dim_input_;
  ::google::protobuf::int32 num_layer_;
  ::apollo::prediction::Vector* samples_std_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Layer > layer_;
  ::google::protobuf::int32 dim_output_;
  friend void  protobuf_AddDesc_prediction_2ffnn_5fvehicle_5fmodel_2eproto();
  friend void protobuf_AssignDesc_prediction_2ffnn_5fvehicle_5fmodel_2eproto();
  friend void protobuf_ShutdownFile_prediction_2ffnn_5fvehicle_5fmodel_2eproto();

  void InitAsDefaultInstance();
  static FnnVehicleModel* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FnnVehicleModel

// optional int32 dim_input = 1;
inline bool FnnVehicleModel::has_dim_input() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FnnVehicleModel::set_has_dim_input() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FnnVehicleModel::clear_has_dim_input() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FnnVehicleModel::clear_dim_input() {
  dim_input_ = 0;
  clear_has_dim_input();
}
inline ::google::protobuf::int32 FnnVehicleModel::dim_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.dim_input)
  return dim_input_;
}
inline void FnnVehicleModel::set_dim_input(::google::protobuf::int32 value) {
  set_has_dim_input();
  dim_input_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.FnnVehicleModel.dim_input)
}

// optional .apollo.prediction.Vector samples_mean = 2;
inline bool FnnVehicleModel::has_samples_mean() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FnnVehicleModel::set_has_samples_mean() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FnnVehicleModel::clear_has_samples_mean() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FnnVehicleModel::clear_samples_mean() {
  if (samples_mean_ != NULL) samples_mean_->::apollo::prediction::Vector::Clear();
  clear_has_samples_mean();
}
inline const ::apollo::prediction::Vector& FnnVehicleModel::samples_mean() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.samples_mean)
  return samples_mean_ != NULL ? *samples_mean_ : *default_instance_->samples_mean_;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::mutable_samples_mean() {
  set_has_samples_mean();
  if (samples_mean_ == NULL) {
    samples_mean_ = new ::apollo::prediction::Vector;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.FnnVehicleModel.samples_mean)
  return samples_mean_;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::release_samples_mean() {
  // @@protoc_insertion_point(field_release:apollo.prediction.FnnVehicleModel.samples_mean)
  clear_has_samples_mean();
  ::apollo::prediction::Vector* temp = samples_mean_;
  samples_mean_ = NULL;
  return temp;
}
inline void FnnVehicleModel::set_allocated_samples_mean(::apollo::prediction::Vector* samples_mean) {
  delete samples_mean_;
  samples_mean_ = samples_mean;
  if (samples_mean) {
    set_has_samples_mean();
  } else {
    clear_has_samples_mean();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.FnnVehicleModel.samples_mean)
}

// optional .apollo.prediction.Vector samples_std = 3;
inline bool FnnVehicleModel::has_samples_std() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FnnVehicleModel::set_has_samples_std() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FnnVehicleModel::clear_has_samples_std() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FnnVehicleModel::clear_samples_std() {
  if (samples_std_ != NULL) samples_std_->::apollo::prediction::Vector::Clear();
  clear_has_samples_std();
}
inline const ::apollo::prediction::Vector& FnnVehicleModel::samples_std() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.samples_std)
  return samples_std_ != NULL ? *samples_std_ : *default_instance_->samples_std_;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::mutable_samples_std() {
  set_has_samples_std();
  if (samples_std_ == NULL) {
    samples_std_ = new ::apollo::prediction::Vector;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.FnnVehicleModel.samples_std)
  return samples_std_;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::release_samples_std() {
  // @@protoc_insertion_point(field_release:apollo.prediction.FnnVehicleModel.samples_std)
  clear_has_samples_std();
  ::apollo::prediction::Vector* temp = samples_std_;
  samples_std_ = NULL;
  return temp;
}
inline void FnnVehicleModel::set_allocated_samples_std(::apollo::prediction::Vector* samples_std) {
  delete samples_std_;
  samples_std_ = samples_std;
  if (samples_std) {
    set_has_samples_std();
  } else {
    clear_has_samples_std();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.FnnVehicleModel.samples_std)
}

// optional int32 num_layer = 4;
inline bool FnnVehicleModel::has_num_layer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FnnVehicleModel::set_has_num_layer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FnnVehicleModel::clear_has_num_layer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FnnVehicleModel::clear_num_layer() {
  num_layer_ = 0;
  clear_has_num_layer();
}
inline ::google::protobuf::int32 FnnVehicleModel::num_layer() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.num_layer)
  return num_layer_;
}
inline void FnnVehicleModel::set_num_layer(::google::protobuf::int32 value) {
  set_has_num_layer();
  num_layer_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.FnnVehicleModel.num_layer)
}

// repeated .apollo.prediction.Layer layer = 5;
inline int FnnVehicleModel::layer_size() const {
  return layer_.size();
}
inline void FnnVehicleModel::clear_layer() {
  layer_.Clear();
}
inline const ::apollo::prediction::Layer& FnnVehicleModel::layer(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.layer)
  return layer_.Get(index);
}
inline ::apollo::prediction::Layer* FnnVehicleModel::mutable_layer(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.FnnVehicleModel.layer)
  return layer_.Mutable(index);
}
inline ::apollo::prediction::Layer* FnnVehicleModel::add_layer() {
  // @@protoc_insertion_point(field_add:apollo.prediction.FnnVehicleModel.layer)
  return layer_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Layer >*
FnnVehicleModel::mutable_layer() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.FnnVehicleModel.layer)
  return &layer_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Layer >&
FnnVehicleModel::layer() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.FnnVehicleModel.layer)
  return layer_;
}

// optional int32 dim_output = 6;
inline bool FnnVehicleModel::has_dim_output() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FnnVehicleModel::set_has_dim_output() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FnnVehicleModel::clear_has_dim_output() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FnnVehicleModel::clear_dim_output() {
  dim_output_ = 0;
  clear_has_dim_output();
}
inline ::google::protobuf::int32 FnnVehicleModel::dim_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.dim_output)
  return dim_output_;
}
inline void FnnVehicleModel::set_dim_output(::google::protobuf::int32 value) {
  set_has_dim_output();
  dim_output_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.FnnVehicleModel.dim_output)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_prediction_2ffnn_5fvehicle_5fmodel_2eproto__INCLUDED
