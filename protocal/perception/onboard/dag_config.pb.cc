// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception/onboard/dag_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "perception/onboard/dag_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {

namespace {

const ::google::protobuf::Descriptor* DAGConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_Subnode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_Subnode_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_SubnodeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_SubnodeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_Event_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_Edge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_Edge_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_EdgeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_EdgeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_SharedData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_SharedData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DAGConfig_SharedDataConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DAGConfig_SharedDataConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DAGConfig_SubnodeType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_perception_2fonboard_2fdag_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_perception_2fonboard_2fdag_5fconfig_2eproto() {
  protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "perception/onboard/dag_config.proto");
  GOOGLE_CHECK(file != NULL);
  DAGConfig_descriptor_ = file->message_type(0);
  static const int DAGConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig, subnode_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig, edge_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig, data_config_),
  };
  DAGConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_descriptor_,
      DAGConfig::default_instance_,
      DAGConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig, _internal_metadata_),
      -1);
  DAGConfig_Subnode_descriptor_ = DAGConfig_descriptor_->nested_type(0);
  static const int DAGConfig_Subnode_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Subnode, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Subnode, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Subnode, reserve_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Subnode, type_),
  };
  DAGConfig_Subnode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_Subnode_descriptor_,
      DAGConfig_Subnode::default_instance_,
      DAGConfig_Subnode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Subnode, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_Subnode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Subnode, _internal_metadata_),
      -1);
  DAGConfig_SubnodeConfig_descriptor_ = DAGConfig_descriptor_->nested_type(1);
  static const int DAGConfig_SubnodeConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SubnodeConfig, subnodes_),
  };
  DAGConfig_SubnodeConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_SubnodeConfig_descriptor_,
      DAGConfig_SubnodeConfig::default_instance_,
      DAGConfig_SubnodeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SubnodeConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_SubnodeConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SubnodeConfig, _internal_metadata_),
      -1);
  DAGConfig_Event_descriptor_ = DAGConfig_descriptor_->nested_type(2);
  static const int DAGConfig_Event_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Event, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Event, name_),
  };
  DAGConfig_Event_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_Event_descriptor_,
      DAGConfig_Event::default_instance_,
      DAGConfig_Event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Event, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_Event),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Event, _internal_metadata_),
      -1);
  DAGConfig_Edge_descriptor_ = DAGConfig_descriptor_->nested_type(3);
  static const int DAGConfig_Edge_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Edge, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Edge, from_node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Edge, to_node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Edge, events_),
  };
  DAGConfig_Edge_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_Edge_descriptor_,
      DAGConfig_Edge::default_instance_,
      DAGConfig_Edge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Edge, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_Edge),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_Edge, _internal_metadata_),
      -1);
  DAGConfig_EdgeConfig_descriptor_ = DAGConfig_descriptor_->nested_type(4);
  static const int DAGConfig_EdgeConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_EdgeConfig, edges_),
  };
  DAGConfig_EdgeConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_EdgeConfig_descriptor_,
      DAGConfig_EdgeConfig::default_instance_,
      DAGConfig_EdgeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_EdgeConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_EdgeConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_EdgeConfig, _internal_metadata_),
      -1);
  DAGConfig_SharedData_descriptor_ = DAGConfig_descriptor_->nested_type(5);
  static const int DAGConfig_SharedData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedData, name_),
  };
  DAGConfig_SharedData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_SharedData_descriptor_,
      DAGConfig_SharedData::default_instance_,
      DAGConfig_SharedData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedData, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_SharedData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedData, _internal_metadata_),
      -1);
  DAGConfig_SharedDataConfig_descriptor_ = DAGConfig_descriptor_->nested_type(6);
  static const int DAGConfig_SharedDataConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedDataConfig, datas_),
  };
  DAGConfig_SharedDataConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DAGConfig_SharedDataConfig_descriptor_,
      DAGConfig_SharedDataConfig::default_instance_,
      DAGConfig_SharedDataConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedDataConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(DAGConfig_SharedDataConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DAGConfig_SharedDataConfig, _internal_metadata_),
      -1);
  DAGConfig_SubnodeType_descriptor_ = DAGConfig_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_perception_2fonboard_2fdag_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_descriptor_, &DAGConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_Subnode_descriptor_, &DAGConfig_Subnode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_SubnodeConfig_descriptor_, &DAGConfig_SubnodeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_Event_descriptor_, &DAGConfig_Event::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_Edge_descriptor_, &DAGConfig_Edge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_EdgeConfig_descriptor_, &DAGConfig_EdgeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_SharedData_descriptor_, &DAGConfig_SharedData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DAGConfig_SharedDataConfig_descriptor_, &DAGConfig_SharedDataConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_perception_2fonboard_2fdag_5fconfig_2eproto() {
  delete DAGConfig::default_instance_;
  delete DAGConfig_reflection_;
  delete DAGConfig_Subnode::default_instance_;
  delete DAGConfig_Subnode_reflection_;
  delete DAGConfig_SubnodeConfig::default_instance_;
  delete DAGConfig_SubnodeConfig_reflection_;
  delete DAGConfig_Event::default_instance_;
  delete DAGConfig_Event_reflection_;
  delete DAGConfig_Edge::default_instance_;
  delete DAGConfig_Edge_reflection_;
  delete DAGConfig_EdgeConfig::default_instance_;
  delete DAGConfig_EdgeConfig_reflection_;
  delete DAGConfig_SharedData::default_instance_;
  delete DAGConfig_SharedData_reflection_;
  delete DAGConfig_SharedDataConfig::default_instance_;
  delete DAGConfig_SharedDataConfig_reflection_;
}

void protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#perception/onboard/dag_config.proto\022\021a"
    "pollo.perception\"\237\006\n\tDAGConfig\022B\n\016subnod"
    "e_config\030\001 \002(\0132*.apollo.perception.DAGCo"
    "nfig.SubnodeConfig\022<\n\013edge_config\030\002 \002(\0132"
    "\'.apollo.perception.DAGConfig.EdgeConfig"
    "\022B\n\013data_config\030\003 \002(\0132-.apollo.perceptio"
    "n.DAGConfig.SharedDataConfig\032|\n\007Subnode\022"
    "\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\017\n\007reserve\030\003 \001"
    "(\t\022F\n\004type\030\004 \001(\0162(.apollo.perception.DAG"
    "Config.SubnodeType:\016SUBNODE_NORMAL\032G\n\rSu"
    "bnodeConfig\0226\n\010subnodes\030\001 \003(\0132$.apollo.p"
    "erception.DAGConfig.Subnode\032!\n\005Event\022\n\n\002"
    "id\030\001 \002(\005\022\014\n\004name\030\002 \001(\t\032j\n\004Edge\022\n\n\002id\030\001 \002"
    "(\005\022\021\n\tfrom_node\030\002 \002(\005\022\017\n\007to_node\030\003 \002(\005\0222"
    "\n\006events\030\004 \003(\0132\".apollo.perception.DAGCo"
    "nfig.Event\032>\n\nEdgeConfig\0220\n\005edges\030\001 \003(\0132"
    "!.apollo.perception.DAGConfig.Edge\032&\n\nSh"
    "aredData\022\n\n\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\032J\n\020Sh"
    "aredDataConfig\0226\n\005datas\030\001 \003(\0132\'.apollo.p"
    "erception.DAGConfig.SharedData\"B\n\013Subnod"
    "eType\022\016\n\nSUBNODE_IN\020\001\022\017\n\013SUBNODE_OUT\020\002\022\022"
    "\n\016SUBNODE_NORMAL\020\003", 858);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "perception/onboard/dag_config.proto", &protobuf_RegisterTypes);
  DAGConfig::default_instance_ = new DAGConfig();
  DAGConfig_Subnode::default_instance_ = new DAGConfig_Subnode();
  DAGConfig_SubnodeConfig::default_instance_ = new DAGConfig_SubnodeConfig();
  DAGConfig_Event::default_instance_ = new DAGConfig_Event();
  DAGConfig_Edge::default_instance_ = new DAGConfig_Edge();
  DAGConfig_EdgeConfig::default_instance_ = new DAGConfig_EdgeConfig();
  DAGConfig_SharedData::default_instance_ = new DAGConfig_SharedData();
  DAGConfig_SharedDataConfig::default_instance_ = new DAGConfig_SharedDataConfig();
  DAGConfig::default_instance_->InitAsDefaultInstance();
  DAGConfig_Subnode::default_instance_->InitAsDefaultInstance();
  DAGConfig_SubnodeConfig::default_instance_->InitAsDefaultInstance();
  DAGConfig_Event::default_instance_->InitAsDefaultInstance();
  DAGConfig_Edge::default_instance_->InitAsDefaultInstance();
  DAGConfig_EdgeConfig::default_instance_->InitAsDefaultInstance();
  DAGConfig_SharedData::default_instance_->InitAsDefaultInstance();
  DAGConfig_SharedDataConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_perception_2fonboard_2fdag_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_perception_2fonboard_2fdag_5fconfig_2eproto {
  StaticDescriptorInitializer_perception_2fonboard_2fdag_5fconfig_2eproto() {
    protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  }
} static_descriptor_initializer_perception_2fonboard_2fdag_5fconfig_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* DAGConfig_SubnodeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_SubnodeType_descriptor_;
}
bool DAGConfig_SubnodeType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DAGConfig_SubnodeType DAGConfig::SUBNODE_IN;
const DAGConfig_SubnodeType DAGConfig::SUBNODE_OUT;
const DAGConfig_SubnodeType DAGConfig::SUBNODE_NORMAL;
const DAGConfig_SubnodeType DAGConfig::SubnodeType_MIN;
const DAGConfig_SubnodeType DAGConfig::SubnodeType_MAX;
const int DAGConfig::SubnodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_Subnode::kIdFieldNumber;
const int DAGConfig_Subnode::kNameFieldNumber;
const int DAGConfig_Subnode::kReserveFieldNumber;
const int DAGConfig_Subnode::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_Subnode::DAGConfig_Subnode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.Subnode)
}

void DAGConfig_Subnode::InitAsDefaultInstance() {
}

DAGConfig_Subnode::DAGConfig_Subnode(const DAGConfig_Subnode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.Subnode)
}

void DAGConfig_Subnode::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 3;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_Subnode::~DAGConfig_Subnode() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.Subnode)
  SharedDtor();
}

void DAGConfig_Subnode::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reserve_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DAGConfig_Subnode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_Subnode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_Subnode_descriptor_;
}

const DAGConfig_Subnode& DAGConfig_Subnode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_Subnode* DAGConfig_Subnode::default_instance_ = NULL;

DAGConfig_Subnode* DAGConfig_Subnode::New(::google::protobuf::Arena* arena) const {
  DAGConfig_Subnode* n = new DAGConfig_Subnode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_Subnode::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.Subnode)
  if (_has_bits_[0 / 32] & 15u) {
    id_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reserve()) {
      reserve_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 3;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_Subnode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.Subnode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.DAGConfig.Subnode.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reserve;
        break;
      }

      // optional string reserve = 3;
      case 3: {
        if (tag == 26) {
         parse_reserve:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reserve()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reserve().data(), this->reserve().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.DAGConfig.Subnode.reserve");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
      case 4: {
        if (tag == 32) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::perception::DAGConfig_SubnodeType_IsValid(value)) {
            set_type(static_cast< ::apollo::perception::DAGConfig_SubnodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.Subnode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.Subnode)
  return false;
#undef DO_
}

void DAGConfig_Subnode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.Subnode)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Subnode.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string reserve = 3;
  if (has_reserve()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reserve().data(), this->reserve().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Subnode.reserve");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reserve(), output);
  }

  // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.Subnode)
}

::google::protobuf::uint8* DAGConfig_Subnode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.Subnode)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Subnode.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string reserve = 3;
  if (has_reserve()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reserve().data(), this->reserve().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Subnode.reserve");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reserve(), target);
  }

  // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.Subnode)
  return target;
}

int DAGConfig_Subnode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig.Subnode)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int DAGConfig_Subnode::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.Subnode)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional string reserve = 3;
    if (has_reserve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reserve());
    }

    // optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_Subnode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.Subnode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_Subnode* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_Subnode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.Subnode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.Subnode)
    MergeFrom(*source);
  }
}

void DAGConfig_Subnode::MergeFrom(const DAGConfig_Subnode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.Subnode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_reserve()) {
      set_has_reserve();
      reserve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reserve_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_Subnode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.Subnode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_Subnode::CopyFrom(const DAGConfig_Subnode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.Subnode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_Subnode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DAGConfig_Subnode::Swap(DAGConfig_Subnode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_Subnode::InternalSwap(DAGConfig_Subnode* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  reserve_.Swap(&other->reserve_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_Subnode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_Subnode_descriptor_;
  metadata.reflection = DAGConfig_Subnode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_SubnodeConfig::kSubnodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_SubnodeConfig::DAGConfig_SubnodeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.SubnodeConfig)
}

void DAGConfig_SubnodeConfig::InitAsDefaultInstance() {
}

DAGConfig_SubnodeConfig::DAGConfig_SubnodeConfig(const DAGConfig_SubnodeConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.SubnodeConfig)
}

void DAGConfig_SubnodeConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_SubnodeConfig::~DAGConfig_SubnodeConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.SubnodeConfig)
  SharedDtor();
}

void DAGConfig_SubnodeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DAGConfig_SubnodeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_SubnodeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_SubnodeConfig_descriptor_;
}

const DAGConfig_SubnodeConfig& DAGConfig_SubnodeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_SubnodeConfig* DAGConfig_SubnodeConfig::default_instance_ = NULL;

DAGConfig_SubnodeConfig* DAGConfig_SubnodeConfig::New(::google::protobuf::Arena* arena) const {
  DAGConfig_SubnodeConfig* n = new DAGConfig_SubnodeConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_SubnodeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.SubnodeConfig)
  subnodes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_SubnodeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.SubnodeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_subnodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_subnodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_subnodes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.SubnodeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.SubnodeConfig)
  return false;
#undef DO_
}

void DAGConfig_SubnodeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.SubnodeConfig)
  // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
  for (unsigned int i = 0, n = this->subnodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->subnodes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.SubnodeConfig)
}

::google::protobuf::uint8* DAGConfig_SubnodeConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.SubnodeConfig)
  // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
  for (unsigned int i = 0, n = this->subnodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->subnodes(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.SubnodeConfig)
  return target;
}

int DAGConfig_SubnodeConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.SubnodeConfig)
  int total_size = 0;

  // repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
  total_size += 1 * this->subnodes_size();
  for (int i = 0; i < this->subnodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->subnodes(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_SubnodeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.SubnodeConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_SubnodeConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_SubnodeConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.SubnodeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.SubnodeConfig)
    MergeFrom(*source);
  }
}

void DAGConfig_SubnodeConfig::MergeFrom(const DAGConfig_SubnodeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.SubnodeConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  subnodes_.MergeFrom(from.subnodes_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_SubnodeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.SubnodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_SubnodeConfig::CopyFrom(const DAGConfig_SubnodeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.SubnodeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_SubnodeConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->subnodes())) return false;
  return true;
}

void DAGConfig_SubnodeConfig::Swap(DAGConfig_SubnodeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_SubnodeConfig::InternalSwap(DAGConfig_SubnodeConfig* other) {
  subnodes_.UnsafeArenaSwap(&other->subnodes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_SubnodeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_SubnodeConfig_descriptor_;
  metadata.reflection = DAGConfig_SubnodeConfig_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_Event::kIdFieldNumber;
const int DAGConfig_Event::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_Event::DAGConfig_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.Event)
}

void DAGConfig_Event::InitAsDefaultInstance() {
}

DAGConfig_Event::DAGConfig_Event(const DAGConfig_Event& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.Event)
}

void DAGConfig_Event::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_Event::~DAGConfig_Event() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.Event)
  SharedDtor();
}

void DAGConfig_Event::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DAGConfig_Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_Event_descriptor_;
}

const DAGConfig_Event& DAGConfig_Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_Event* DAGConfig_Event::default_instance_ = NULL;

DAGConfig_Event* DAGConfig_Event::New(::google::protobuf::Arena* arena) const {
  DAGConfig_Event* n = new DAGConfig_Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.Event)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.DAGConfig.Event.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.Event)
  return false;
#undef DO_
}

void DAGConfig_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.Event)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Event.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.Event)
}

::google::protobuf::uint8* DAGConfig_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.Event)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.Event.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.Event)
  return target;
}

int DAGConfig_Event::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.Event)
  int total_size = 0;

  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // optional string name = 2;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_Event* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.Event)
    MergeFrom(*source);
  }
}

void DAGConfig_Event::MergeFrom(const DAGConfig_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_Event::CopyFrom(const DAGConfig_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DAGConfig_Event::Swap(DAGConfig_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_Event::InternalSwap(DAGConfig_Event* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_Event_descriptor_;
  metadata.reflection = DAGConfig_Event_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_Edge::kIdFieldNumber;
const int DAGConfig_Edge::kFromNodeFieldNumber;
const int DAGConfig_Edge::kToNodeFieldNumber;
const int DAGConfig_Edge::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_Edge::DAGConfig_Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.Edge)
}

void DAGConfig_Edge::InitAsDefaultInstance() {
}

DAGConfig_Edge::DAGConfig_Edge(const DAGConfig_Edge& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.Edge)
}

void DAGConfig_Edge::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  from_node_ = 0;
  to_node_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_Edge::~DAGConfig_Edge() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.Edge)
  SharedDtor();
}

void DAGConfig_Edge::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DAGConfig_Edge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_Edge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_Edge_descriptor_;
}

const DAGConfig_Edge& DAGConfig_Edge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_Edge* DAGConfig_Edge::default_instance_ = NULL;

DAGConfig_Edge* DAGConfig_Edge::New(::google::protobuf::Arena* arena) const {
  DAGConfig_Edge* n = new DAGConfig_Edge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.Edge)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DAGConfig_Edge, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DAGConfig_Edge*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(id_, from_node_);
    to_node_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  events_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.Edge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_from_node;
        break;
      }

      // required int32 from_node = 2;
      case 2: {
        if (tag == 16) {
         parse_from_node:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_node_)));
          set_has_from_node();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_to_node;
        break;
      }

      // required int32 to_node = 3;
      case 3: {
        if (tag == 24) {
         parse_to_node:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &to_node_)));
          set_has_to_node();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_events;
        break;
      }

      // repeated .apollo.perception.DAGConfig.Event events = 4;
      case 4: {
        if (tag == 34) {
         parse_events:
          DO_(input->IncrementRecursionDepth());
         parse_loop_events:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_events;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.Edge)
  return false;
#undef DO_
}

void DAGConfig_Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.Edge)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 from_node = 2;
  if (has_from_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->from_node(), output);
  }

  // required int32 to_node = 3;
  if (has_to_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->to_node(), output);
  }

  // repeated .apollo.perception.DAGConfig.Event events = 4;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->events(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.Edge)
}

::google::protobuf::uint8* DAGConfig_Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.Edge)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 from_node = 2;
  if (has_from_node()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->from_node(), target);
  }

  // required int32 to_node = 3;
  if (has_to_node()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->to_node(), target);
  }

  // repeated .apollo.perception.DAGConfig.Event events = 4;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->events(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.Edge)
  return target;
}

int DAGConfig_Edge::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig.Edge)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_from_node()) {
    // required int32 from_node = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_node());
  }

  if (has_to_node()) {
    // required int32 to_node = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_node());
  }

  return total_size;
}
int DAGConfig_Edge::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.Edge)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 from_node = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_node());

    // required int32 to_node = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->to_node());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .apollo.perception.DAGConfig.Event events = 4;
  total_size += 1 * this->events_size();
  for (int i = 0; i < this->events_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->events(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_Edge* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.Edge)
    MergeFrom(*source);
  }
}

void DAGConfig_Edge::MergeFrom(const DAGConfig_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  events_.MergeFrom(from.events_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_from_node()) {
      set_from_node(from.from_node());
    }
    if (from.has_to_node()) {
      set_to_node(from.to_node());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_Edge::CopyFrom(const DAGConfig_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_Edge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->events())) return false;
  return true;
}

void DAGConfig_Edge::Swap(DAGConfig_Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_Edge::InternalSwap(DAGConfig_Edge* other) {
  std::swap(id_, other->id_);
  std::swap(from_node_, other->from_node_);
  std::swap(to_node_, other->to_node_);
  events_.UnsafeArenaSwap(&other->events_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_Edge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_Edge_descriptor_;
  metadata.reflection = DAGConfig_Edge_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_EdgeConfig::kEdgesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_EdgeConfig::DAGConfig_EdgeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.EdgeConfig)
}

void DAGConfig_EdgeConfig::InitAsDefaultInstance() {
}

DAGConfig_EdgeConfig::DAGConfig_EdgeConfig(const DAGConfig_EdgeConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.EdgeConfig)
}

void DAGConfig_EdgeConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_EdgeConfig::~DAGConfig_EdgeConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.EdgeConfig)
  SharedDtor();
}

void DAGConfig_EdgeConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DAGConfig_EdgeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_EdgeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_EdgeConfig_descriptor_;
}

const DAGConfig_EdgeConfig& DAGConfig_EdgeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_EdgeConfig* DAGConfig_EdgeConfig::default_instance_ = NULL;

DAGConfig_EdgeConfig* DAGConfig_EdgeConfig::New(::google::protobuf::Arena* arena) const {
  DAGConfig_EdgeConfig* n = new DAGConfig_EdgeConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_EdgeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.EdgeConfig)
  edges_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_EdgeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.EdgeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.perception.DAGConfig.Edge edges = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_edges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_edges;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.EdgeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.EdgeConfig)
  return false;
#undef DO_
}

void DAGConfig_EdgeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.EdgeConfig)
  // repeated .apollo.perception.DAGConfig.Edge edges = 1;
  for (unsigned int i = 0, n = this->edges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->edges(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.EdgeConfig)
}

::google::protobuf::uint8* DAGConfig_EdgeConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.EdgeConfig)
  // repeated .apollo.perception.DAGConfig.Edge edges = 1;
  for (unsigned int i = 0, n = this->edges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->edges(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.EdgeConfig)
  return target;
}

int DAGConfig_EdgeConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.EdgeConfig)
  int total_size = 0;

  // repeated .apollo.perception.DAGConfig.Edge edges = 1;
  total_size += 1 * this->edges_size();
  for (int i = 0; i < this->edges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->edges(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_EdgeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.EdgeConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_EdgeConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_EdgeConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.EdgeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.EdgeConfig)
    MergeFrom(*source);
  }
}

void DAGConfig_EdgeConfig::MergeFrom(const DAGConfig_EdgeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.EdgeConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  edges_.MergeFrom(from.edges_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_EdgeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.EdgeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_EdgeConfig::CopyFrom(const DAGConfig_EdgeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.EdgeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_EdgeConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->edges())) return false;
  return true;
}

void DAGConfig_EdgeConfig::Swap(DAGConfig_EdgeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_EdgeConfig::InternalSwap(DAGConfig_EdgeConfig* other) {
  edges_.UnsafeArenaSwap(&other->edges_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_EdgeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_EdgeConfig_descriptor_;
  metadata.reflection = DAGConfig_EdgeConfig_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_SharedData::kIdFieldNumber;
const int DAGConfig_SharedData::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_SharedData::DAGConfig_SharedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.SharedData)
}

void DAGConfig_SharedData::InitAsDefaultInstance() {
}

DAGConfig_SharedData::DAGConfig_SharedData(const DAGConfig_SharedData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.SharedData)
}

void DAGConfig_SharedData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_SharedData::~DAGConfig_SharedData() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.SharedData)
  SharedDtor();
}

void DAGConfig_SharedData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DAGConfig_SharedData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_SharedData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_SharedData_descriptor_;
}

const DAGConfig_SharedData& DAGConfig_SharedData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_SharedData* DAGConfig_SharedData::default_instance_ = NULL;

DAGConfig_SharedData* DAGConfig_SharedData::New(::google::protobuf::Arena* arena) const {
  DAGConfig_SharedData* n = new DAGConfig_SharedData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_SharedData::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.SharedData)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_SharedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.SharedData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.DAGConfig.SharedData.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.SharedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.SharedData)
  return false;
#undef DO_
}

void DAGConfig_SharedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.SharedData)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.SharedData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.SharedData)
}

::google::protobuf::uint8* DAGConfig_SharedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.SharedData)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.DAGConfig.SharedData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.SharedData)
  return target;
}

int DAGConfig_SharedData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig.SharedData)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int DAGConfig_SharedData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.SharedData)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_SharedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.SharedData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_SharedData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_SharedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.SharedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.SharedData)
    MergeFrom(*source);
  }
}

void DAGConfig_SharedData::MergeFrom(const DAGConfig_SharedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.SharedData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_SharedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.SharedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_SharedData::CopyFrom(const DAGConfig_SharedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.SharedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_SharedData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DAGConfig_SharedData::Swap(DAGConfig_SharedData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_SharedData::InternalSwap(DAGConfig_SharedData* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_SharedData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_SharedData_descriptor_;
  metadata.reflection = DAGConfig_SharedData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig_SharedDataConfig::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig_SharedDataConfig::DAGConfig_SharedDataConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig.SharedDataConfig)
}

void DAGConfig_SharedDataConfig::InitAsDefaultInstance() {
}

DAGConfig_SharedDataConfig::DAGConfig_SharedDataConfig(const DAGConfig_SharedDataConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig.SharedDataConfig)
}

void DAGConfig_SharedDataConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig_SharedDataConfig::~DAGConfig_SharedDataConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig.SharedDataConfig)
  SharedDtor();
}

void DAGConfig_SharedDataConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DAGConfig_SharedDataConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig_SharedDataConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_SharedDataConfig_descriptor_;
}

const DAGConfig_SharedDataConfig& DAGConfig_SharedDataConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig_SharedDataConfig* DAGConfig_SharedDataConfig::default_instance_ = NULL;

DAGConfig_SharedDataConfig* DAGConfig_SharedDataConfig::New(::google::protobuf::Arena* arena) const {
  DAGConfig_SharedDataConfig* n = new DAGConfig_SharedDataConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig_SharedDataConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig.SharedDataConfig)
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig_SharedDataConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig.SharedDataConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_datas;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig.SharedDataConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig.SharedDataConfig)
  return false;
#undef DO_
}

void DAGConfig_SharedDataConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig.SharedDataConfig)
  // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig.SharedDataConfig)
}

::google::protobuf::uint8* DAGConfig_SharedDataConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig.SharedDataConfig)
  // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig.SharedDataConfig)
  return target;
}

int DAGConfig_SharedDataConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig.SharedDataConfig)
  int total_size = 0;

  // repeated .apollo.perception.DAGConfig.SharedData datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig_SharedDataConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig.SharedDataConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig_SharedDataConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig_SharedDataConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig.SharedDataConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig.SharedDataConfig)
    MergeFrom(*source);
  }
}

void DAGConfig_SharedDataConfig::MergeFrom(const DAGConfig_SharedDataConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig.SharedDataConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  datas_.MergeFrom(from.datas_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig_SharedDataConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig.SharedDataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig_SharedDataConfig::CopyFrom(const DAGConfig_SharedDataConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig.SharedDataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig_SharedDataConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->datas())) return false;
  return true;
}

void DAGConfig_SharedDataConfig::Swap(DAGConfig_SharedDataConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig_SharedDataConfig::InternalSwap(DAGConfig_SharedDataConfig* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig_SharedDataConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_SharedDataConfig_descriptor_;
  metadata.reflection = DAGConfig_SharedDataConfig_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAGConfig::kSubnodeConfigFieldNumber;
const int DAGConfig::kEdgeConfigFieldNumber;
const int DAGConfig::kDataConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAGConfig::DAGConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.DAGConfig)
}

void DAGConfig::InitAsDefaultInstance() {
  subnode_config_ = const_cast< ::apollo::perception::DAGConfig_SubnodeConfig*>(&::apollo::perception::DAGConfig_SubnodeConfig::default_instance());
  edge_config_ = const_cast< ::apollo::perception::DAGConfig_EdgeConfig*>(&::apollo::perception::DAGConfig_EdgeConfig::default_instance());
  data_config_ = const_cast< ::apollo::perception::DAGConfig_SharedDataConfig*>(&::apollo::perception::DAGConfig_SharedDataConfig::default_instance());
}

DAGConfig::DAGConfig(const DAGConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.DAGConfig)
}

void DAGConfig::SharedCtor() {
  _cached_size_ = 0;
  subnode_config_ = NULL;
  edge_config_ = NULL;
  data_config_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DAGConfig::~DAGConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.DAGConfig)
  SharedDtor();
}

void DAGConfig::SharedDtor() {
  if (this != default_instance_) {
    delete subnode_config_;
    delete edge_config_;
    delete data_config_;
  }
}

void DAGConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DAGConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAGConfig_descriptor_;
}

const DAGConfig& DAGConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_perception_2fonboard_2fdag_5fconfig_2eproto();
  return *default_instance_;
}

DAGConfig* DAGConfig::default_instance_ = NULL;

DAGConfig* DAGConfig::New(::google::protobuf::Arena* arena) const {
  DAGConfig* n = new DAGConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DAGConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.DAGConfig)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_subnode_config()) {
      if (subnode_config_ != NULL) subnode_config_->::apollo::perception::DAGConfig_SubnodeConfig::Clear();
    }
    if (has_edge_config()) {
      if (edge_config_ != NULL) edge_config_->::apollo::perception::DAGConfig_EdgeConfig::Clear();
    }
    if (has_data_config()) {
      if (data_config_ != NULL) data_config_->::apollo::perception::DAGConfig_SharedDataConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DAGConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.DAGConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subnode_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_edge_config;
        break;
      }

      // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
      case 2: {
        if (tag == 18) {
         parse_edge_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_edge_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data_config;
        break;
      }

      // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
      case 3: {
        if (tag == 26) {
         parse_data_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.DAGConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.DAGConfig)
  return false;
#undef DO_
}

void DAGConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.DAGConfig)
  // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
  if (has_subnode_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->subnode_config_, output);
  }

  // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
  if (has_edge_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->edge_config_, output);
  }

  // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
  if (has_data_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.DAGConfig)
}

::google::protobuf::uint8* DAGConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.DAGConfig)
  // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
  if (has_subnode_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->subnode_config_, false, target);
  }

  // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
  if (has_edge_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->edge_config_, false, target);
  }

  // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
  if (has_data_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_config_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.DAGConfig)
  return target;
}

int DAGConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.perception.DAGConfig)
  int total_size = 0;

  if (has_subnode_config()) {
    // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subnode_config_);
  }

  if (has_edge_config()) {
    // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->edge_config_);
  }

  if (has_data_config()) {
    // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_config_);
  }

  return total_size;
}
int DAGConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.DAGConfig)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subnode_config_);

    // required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->edge_config_);

    // required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_config_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DAGConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.DAGConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DAGConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DAGConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.DAGConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.DAGConfig)
    MergeFrom(*source);
  }
}

void DAGConfig::MergeFrom(const DAGConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.DAGConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_subnode_config()) {
      mutable_subnode_config()->::apollo::perception::DAGConfig_SubnodeConfig::MergeFrom(from.subnode_config());
    }
    if (from.has_edge_config()) {
      mutable_edge_config()->::apollo::perception::DAGConfig_EdgeConfig::MergeFrom(from.edge_config());
    }
    if (from.has_data_config()) {
      mutable_data_config()->::apollo::perception::DAGConfig_SharedDataConfig::MergeFrom(from.data_config());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DAGConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.DAGConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAGConfig::CopyFrom(const DAGConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.DAGConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAGConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_subnode_config()) {
    if (!this->subnode_config_->IsInitialized()) return false;
  }
  if (has_edge_config()) {
    if (!this->edge_config_->IsInitialized()) return false;
  }
  if (has_data_config()) {
    if (!this->data_config_->IsInitialized()) return false;
  }
  return true;
}

void DAGConfig::Swap(DAGConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAGConfig::InternalSwap(DAGConfig* other) {
  std::swap(subnode_config_, other->subnode_config_);
  std::swap(edge_config_, other->edge_config_);
  std::swap(data_config_, other->data_config_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DAGConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DAGConfig_descriptor_;
  metadata.reflection = DAGConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DAGConfig_Subnode

// required int32 id = 1;
bool DAGConfig_Subnode::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DAGConfig_Subnode::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DAGConfig_Subnode::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DAGConfig_Subnode::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 DAGConfig_Subnode::id() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Subnode.id)
  return id_;
}
 void DAGConfig_Subnode::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Subnode.id)
}

// required string name = 2;
bool DAGConfig_Subnode::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DAGConfig_Subnode::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void DAGConfig_Subnode::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void DAGConfig_Subnode::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& DAGConfig_Subnode::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Subnode.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_Subnode::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Subnode.name)
}
 void DAGConfig_Subnode::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.DAGConfig.Subnode.name)
}
 void DAGConfig_Subnode::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.DAGConfig.Subnode.name)
}
 ::std::string* DAGConfig_Subnode::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.Subnode.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DAGConfig_Subnode::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.Subnode.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_Subnode::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.Subnode.name)
}

// optional string reserve = 3;
bool DAGConfig_Subnode::has_reserve() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DAGConfig_Subnode::set_has_reserve() {
  _has_bits_[0] |= 0x00000004u;
}
void DAGConfig_Subnode::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000004u;
}
void DAGConfig_Subnode::clear_reserve() {
  reserve_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reserve();
}
 const ::std::string& DAGConfig_Subnode::reserve() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Subnode.reserve)
  return reserve_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_Subnode::set_reserve(const ::std::string& value) {
  set_has_reserve();
  reserve_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Subnode.reserve)
}
 void DAGConfig_Subnode::set_reserve(const char* value) {
  set_has_reserve();
  reserve_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.DAGConfig.Subnode.reserve)
}
 void DAGConfig_Subnode::set_reserve(const char* value, size_t size) {
  set_has_reserve();
  reserve_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.DAGConfig.Subnode.reserve)
}
 ::std::string* DAGConfig_Subnode::mutable_reserve() {
  set_has_reserve();
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.Subnode.reserve)
  return reserve_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DAGConfig_Subnode::release_reserve() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.Subnode.reserve)
  clear_has_reserve();
  return reserve_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_Subnode::set_allocated_reserve(::std::string* reserve) {
  if (reserve != NULL) {
    set_has_reserve();
  } else {
    clear_has_reserve();
  }
  reserve_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserve);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.Subnode.reserve)
}

// optional .apollo.perception.DAGConfig.SubnodeType type = 4 [default = SUBNODE_NORMAL];
bool DAGConfig_Subnode::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DAGConfig_Subnode::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void DAGConfig_Subnode::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void DAGConfig_Subnode::clear_type() {
  type_ = 3;
  clear_has_type();
}
 ::apollo::perception::DAGConfig_SubnodeType DAGConfig_Subnode::type() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Subnode.type)
  return static_cast< ::apollo::perception::DAGConfig_SubnodeType >(type_);
}
 void DAGConfig_Subnode::set_type(::apollo::perception::DAGConfig_SubnodeType value) {
  assert(::apollo::perception::DAGConfig_SubnodeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Subnode.type)
}

// -------------------------------------------------------------------

// DAGConfig_SubnodeConfig

// repeated .apollo.perception.DAGConfig.Subnode subnodes = 1;
int DAGConfig_SubnodeConfig::subnodes_size() const {
  return subnodes_.size();
}
void DAGConfig_SubnodeConfig::clear_subnodes() {
  subnodes_.Clear();
}
const ::apollo::perception::DAGConfig_Subnode& DAGConfig_SubnodeConfig::subnodes(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.SubnodeConfig.subnodes)
  return subnodes_.Get(index);
}
::apollo::perception::DAGConfig_Subnode* DAGConfig_SubnodeConfig::mutable_subnodes(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.SubnodeConfig.subnodes)
  return subnodes_.Mutable(index);
}
::apollo::perception::DAGConfig_Subnode* DAGConfig_SubnodeConfig::add_subnodes() {
  // @@protoc_insertion_point(field_add:apollo.perception.DAGConfig.SubnodeConfig.subnodes)
  return subnodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_Subnode >*
DAGConfig_SubnodeConfig::mutable_subnodes() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.DAGConfig.SubnodeConfig.subnodes)
  return &subnodes_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_Subnode >&
DAGConfig_SubnodeConfig::subnodes() const {
  // @@protoc_insertion_point(field_list:apollo.perception.DAGConfig.SubnodeConfig.subnodes)
  return subnodes_;
}

// -------------------------------------------------------------------

// DAGConfig_Event

// required int32 id = 1;
bool DAGConfig_Event::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DAGConfig_Event::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DAGConfig_Event::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DAGConfig_Event::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 DAGConfig_Event::id() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Event.id)
  return id_;
}
 void DAGConfig_Event::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Event.id)
}

// optional string name = 2;
bool DAGConfig_Event::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DAGConfig_Event::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void DAGConfig_Event::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void DAGConfig_Event::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& DAGConfig_Event::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Event.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_Event::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Event.name)
}
 void DAGConfig_Event::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.DAGConfig.Event.name)
}
 void DAGConfig_Event::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.DAGConfig.Event.name)
}
 ::std::string* DAGConfig_Event::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.Event.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DAGConfig_Event::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.Event.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_Event::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.Event.name)
}

// -------------------------------------------------------------------

// DAGConfig_Edge

// required int32 id = 1;
bool DAGConfig_Edge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DAGConfig_Edge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DAGConfig_Edge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DAGConfig_Edge::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 DAGConfig_Edge::id() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Edge.id)
  return id_;
}
 void DAGConfig_Edge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Edge.id)
}

// required int32 from_node = 2;
bool DAGConfig_Edge::has_from_node() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DAGConfig_Edge::set_has_from_node() {
  _has_bits_[0] |= 0x00000002u;
}
void DAGConfig_Edge::clear_has_from_node() {
  _has_bits_[0] &= ~0x00000002u;
}
void DAGConfig_Edge::clear_from_node() {
  from_node_ = 0;
  clear_has_from_node();
}
 ::google::protobuf::int32 DAGConfig_Edge::from_node() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Edge.from_node)
  return from_node_;
}
 void DAGConfig_Edge::set_from_node(::google::protobuf::int32 value) {
  set_has_from_node();
  from_node_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Edge.from_node)
}

// required int32 to_node = 3;
bool DAGConfig_Edge::has_to_node() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DAGConfig_Edge::set_has_to_node() {
  _has_bits_[0] |= 0x00000004u;
}
void DAGConfig_Edge::clear_has_to_node() {
  _has_bits_[0] &= ~0x00000004u;
}
void DAGConfig_Edge::clear_to_node() {
  to_node_ = 0;
  clear_has_to_node();
}
 ::google::protobuf::int32 DAGConfig_Edge::to_node() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Edge.to_node)
  return to_node_;
}
 void DAGConfig_Edge::set_to_node(::google::protobuf::int32 value) {
  set_has_to_node();
  to_node_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.Edge.to_node)
}

// repeated .apollo.perception.DAGConfig.Event events = 4;
int DAGConfig_Edge::events_size() const {
  return events_.size();
}
void DAGConfig_Edge::clear_events() {
  events_.Clear();
}
const ::apollo::perception::DAGConfig_Event& DAGConfig_Edge::events(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.Edge.events)
  return events_.Get(index);
}
::apollo::perception::DAGConfig_Event* DAGConfig_Edge::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.Edge.events)
  return events_.Mutable(index);
}
::apollo::perception::DAGConfig_Event* DAGConfig_Edge::add_events() {
  // @@protoc_insertion_point(field_add:apollo.perception.DAGConfig.Edge.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_Event >*
DAGConfig_Edge::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.DAGConfig.Edge.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_Event >&
DAGConfig_Edge::events() const {
  // @@protoc_insertion_point(field_list:apollo.perception.DAGConfig.Edge.events)
  return events_;
}

// -------------------------------------------------------------------

// DAGConfig_EdgeConfig

// repeated .apollo.perception.DAGConfig.Edge edges = 1;
int DAGConfig_EdgeConfig::edges_size() const {
  return edges_.size();
}
void DAGConfig_EdgeConfig::clear_edges() {
  edges_.Clear();
}
const ::apollo::perception::DAGConfig_Edge& DAGConfig_EdgeConfig::edges(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.EdgeConfig.edges)
  return edges_.Get(index);
}
::apollo::perception::DAGConfig_Edge* DAGConfig_EdgeConfig::mutable_edges(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.EdgeConfig.edges)
  return edges_.Mutable(index);
}
::apollo::perception::DAGConfig_Edge* DAGConfig_EdgeConfig::add_edges() {
  // @@protoc_insertion_point(field_add:apollo.perception.DAGConfig.EdgeConfig.edges)
  return edges_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_Edge >*
DAGConfig_EdgeConfig::mutable_edges() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.DAGConfig.EdgeConfig.edges)
  return &edges_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_Edge >&
DAGConfig_EdgeConfig::edges() const {
  // @@protoc_insertion_point(field_list:apollo.perception.DAGConfig.EdgeConfig.edges)
  return edges_;
}

// -------------------------------------------------------------------

// DAGConfig_SharedData

// required int32 id = 1;
bool DAGConfig_SharedData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DAGConfig_SharedData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DAGConfig_SharedData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DAGConfig_SharedData::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 DAGConfig_SharedData::id() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.SharedData.id)
  return id_;
}
 void DAGConfig_SharedData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.SharedData.id)
}

// required string name = 2;
bool DAGConfig_SharedData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DAGConfig_SharedData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void DAGConfig_SharedData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void DAGConfig_SharedData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& DAGConfig_SharedData::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.SharedData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_SharedData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.DAGConfig.SharedData.name)
}
 void DAGConfig_SharedData::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.DAGConfig.SharedData.name)
}
 void DAGConfig_SharedData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.DAGConfig.SharedData.name)
}
 ::std::string* DAGConfig_SharedData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.SharedData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DAGConfig_SharedData::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.SharedData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DAGConfig_SharedData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.SharedData.name)
}

// -------------------------------------------------------------------

// DAGConfig_SharedDataConfig

// repeated .apollo.perception.DAGConfig.SharedData datas = 1;
int DAGConfig_SharedDataConfig::datas_size() const {
  return datas_.size();
}
void DAGConfig_SharedDataConfig::clear_datas() {
  datas_.Clear();
}
const ::apollo::perception::DAGConfig_SharedData& DAGConfig_SharedDataConfig::datas(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.SharedDataConfig.datas)
  return datas_.Get(index);
}
::apollo::perception::DAGConfig_SharedData* DAGConfig_SharedDataConfig::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.SharedDataConfig.datas)
  return datas_.Mutable(index);
}
::apollo::perception::DAGConfig_SharedData* DAGConfig_SharedDataConfig::add_datas() {
  // @@protoc_insertion_point(field_add:apollo.perception.DAGConfig.SharedDataConfig.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_SharedData >*
DAGConfig_SharedDataConfig::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.DAGConfig.SharedDataConfig.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::DAGConfig_SharedData >&
DAGConfig_SharedDataConfig::datas() const {
  // @@protoc_insertion_point(field_list:apollo.perception.DAGConfig.SharedDataConfig.datas)
  return datas_;
}

// -------------------------------------------------------------------

// DAGConfig

// required .apollo.perception.DAGConfig.SubnodeConfig subnode_config = 1;
bool DAGConfig::has_subnode_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DAGConfig::set_has_subnode_config() {
  _has_bits_[0] |= 0x00000001u;
}
void DAGConfig::clear_has_subnode_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void DAGConfig::clear_subnode_config() {
  if (subnode_config_ != NULL) subnode_config_->::apollo::perception::DAGConfig_SubnodeConfig::Clear();
  clear_has_subnode_config();
}
const ::apollo::perception::DAGConfig_SubnodeConfig& DAGConfig::subnode_config() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.subnode_config)
  return subnode_config_ != NULL ? *subnode_config_ : *default_instance_->subnode_config_;
}
::apollo::perception::DAGConfig_SubnodeConfig* DAGConfig::mutable_subnode_config() {
  set_has_subnode_config();
  if (subnode_config_ == NULL) {
    subnode_config_ = new ::apollo::perception::DAGConfig_SubnodeConfig;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.subnode_config)
  return subnode_config_;
}
::apollo::perception::DAGConfig_SubnodeConfig* DAGConfig::release_subnode_config() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.subnode_config)
  clear_has_subnode_config();
  ::apollo::perception::DAGConfig_SubnodeConfig* temp = subnode_config_;
  subnode_config_ = NULL;
  return temp;
}
void DAGConfig::set_allocated_subnode_config(::apollo::perception::DAGConfig_SubnodeConfig* subnode_config) {
  delete subnode_config_;
  subnode_config_ = subnode_config;
  if (subnode_config) {
    set_has_subnode_config();
  } else {
    clear_has_subnode_config();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.subnode_config)
}

// required .apollo.perception.DAGConfig.EdgeConfig edge_config = 2;
bool DAGConfig::has_edge_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DAGConfig::set_has_edge_config() {
  _has_bits_[0] |= 0x00000002u;
}
void DAGConfig::clear_has_edge_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void DAGConfig::clear_edge_config() {
  if (edge_config_ != NULL) edge_config_->::apollo::perception::DAGConfig_EdgeConfig::Clear();
  clear_has_edge_config();
}
const ::apollo::perception::DAGConfig_EdgeConfig& DAGConfig::edge_config() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.edge_config)
  return edge_config_ != NULL ? *edge_config_ : *default_instance_->edge_config_;
}
::apollo::perception::DAGConfig_EdgeConfig* DAGConfig::mutable_edge_config() {
  set_has_edge_config();
  if (edge_config_ == NULL) {
    edge_config_ = new ::apollo::perception::DAGConfig_EdgeConfig;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.edge_config)
  return edge_config_;
}
::apollo::perception::DAGConfig_EdgeConfig* DAGConfig::release_edge_config() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.edge_config)
  clear_has_edge_config();
  ::apollo::perception::DAGConfig_EdgeConfig* temp = edge_config_;
  edge_config_ = NULL;
  return temp;
}
void DAGConfig::set_allocated_edge_config(::apollo::perception::DAGConfig_EdgeConfig* edge_config) {
  delete edge_config_;
  edge_config_ = edge_config;
  if (edge_config) {
    set_has_edge_config();
  } else {
    clear_has_edge_config();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.edge_config)
}

// required .apollo.perception.DAGConfig.SharedDataConfig data_config = 3;
bool DAGConfig::has_data_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DAGConfig::set_has_data_config() {
  _has_bits_[0] |= 0x00000004u;
}
void DAGConfig::clear_has_data_config() {
  _has_bits_[0] &= ~0x00000004u;
}
void DAGConfig::clear_data_config() {
  if (data_config_ != NULL) data_config_->::apollo::perception::DAGConfig_SharedDataConfig::Clear();
  clear_has_data_config();
}
const ::apollo::perception::DAGConfig_SharedDataConfig& DAGConfig::data_config() const {
  // @@protoc_insertion_point(field_get:apollo.perception.DAGConfig.data_config)
  return data_config_ != NULL ? *data_config_ : *default_instance_->data_config_;
}
::apollo::perception::DAGConfig_SharedDataConfig* DAGConfig::mutable_data_config() {
  set_has_data_config();
  if (data_config_ == NULL) {
    data_config_ = new ::apollo::perception::DAGConfig_SharedDataConfig;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.DAGConfig.data_config)
  return data_config_;
}
::apollo::perception::DAGConfig_SharedDataConfig* DAGConfig::release_data_config() {
  // @@protoc_insertion_point(field_release:apollo.perception.DAGConfig.data_config)
  clear_has_data_config();
  ::apollo::perception::DAGConfig_SharedDataConfig* temp = data_config_;
  data_config_ = NULL;
  return temp;
}
void DAGConfig::set_allocated_data_config(::apollo::perception::DAGConfig_SharedDataConfig* data_config) {
  delete data_config_;
  data_config_ = data_config;
  if (data_config) {
    set_has_data_config();
  } else {
    clear_has_data_config();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.DAGConfig.data_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
