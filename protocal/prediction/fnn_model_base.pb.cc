// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/fnn_model_base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "prediction/fnn_model_base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {

namespace {

const ::google::protobuf::Descriptor* Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* Matrix_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Matrix_reflection_ = NULL;
const ::google::protobuf::Descriptor* Layer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Layer_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Layer_ActivationFunc_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_prediction_2ffnn_5fmodel_5fbase_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_prediction_2ffnn_5fmodel_5fbase_2eproto() {
  protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "prediction/fnn_model_base.proto");
  GOOGLE_CHECK(file != NULL);
  Vector_descriptor_ = file->message_type(0);
  static const int Vector_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, columns_),
  };
  Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Vector_descriptor_,
      Vector::default_instance_,
      Vector_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, _has_bits_[0]),
      -1,
      -1,
      sizeof(Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, _internal_metadata_),
      -1);
  Matrix_descriptor_ = file->message_type(1);
  static const int Matrix_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, rows_),
  };
  Matrix_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Matrix_descriptor_,
      Matrix::default_instance_,
      Matrix_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, _has_bits_[0]),
      -1,
      -1,
      sizeof(Matrix),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix, _internal_metadata_),
      -1);
  Layer_descriptor_ = file->message_type(2);
  static const int Layer_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, layer_input_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, layer_output_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, layer_input_weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, layer_bias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, layer_activation_func_),
  };
  Layer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Layer_descriptor_,
      Layer::default_instance_,
      Layer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, _has_bits_[0]),
      -1,
      -1,
      sizeof(Layer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, _internal_metadata_),
      -1);
  Layer_ActivationFunc_descriptor_ = Layer_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_prediction_2ffnn_5fmodel_5fbase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Vector_descriptor_, &Vector::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Matrix_descriptor_, &Matrix::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Layer_descriptor_, &Layer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_prediction_2ffnn_5fmodel_5fbase_2eproto() {
  delete Vector::default_instance_;
  delete Vector_reflection_;
  delete Matrix::default_instance_;
  delete Matrix_reflection_;
  delete Layer::default_instance_;
  delete Layer_reflection_;
}

void protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037prediction/fnn_model_base.proto\022\021apoll"
    "o.prediction\"\031\n\006Vector\022\017\n\007columns\030\001 \003(\001\""
    "1\n\006Matrix\022\'\n\004rows\030\001 \003(\0132\031.apollo.predict"
    "ion.Vector\"\233\002\n\005Layer\022\027\n\017layer_input_dim\030"
    "\001 \001(\005\022\030\n\020layer_output_dim\030\002 \001(\005\0225\n\022layer"
    "_input_weight\030\003 \001(\0132\031.apollo.prediction."
    "Matrix\022-\n\nlayer_bias\030\004 \001(\0132\031.apollo.pred"
    "iction.Vector\022F\n\025layer_activation_func\030\005"
    " \001(\0162\'.apollo.prediction.Layer.Activatio"
    "nFunc\"1\n\016ActivationFunc\022\010\n\004RELU\020\000\022\010\n\004TAN"
    "H\020\001\022\013\n\007SIGMOID\020\002", 416);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prediction/fnn_model_base.proto", &protobuf_RegisterTypes);
  Vector::default_instance_ = new Vector();
  Matrix::default_instance_ = new Matrix();
  Layer::default_instance_ = new Layer();
  Vector::default_instance_->InitAsDefaultInstance();
  Matrix::default_instance_->InitAsDefaultInstance();
  Layer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_prediction_2ffnn_5fmodel_5fbase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_prediction_2ffnn_5fmodel_5fbase_2eproto {
  StaticDescriptorInitializer_prediction_2ffnn_5fmodel_5fbase_2eproto() {
    protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto();
  }
} static_descriptor_initializer_prediction_2ffnn_5fmodel_5fbase_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector::kColumnsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector::Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Vector)
}

void Vector::InitAsDefaultInstance() {
}

Vector::Vector(const Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Vector)
}

void Vector::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Vector::~Vector() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Vector)
  SharedDtor();
}

void Vector::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vector_descriptor_;
}

const Vector& Vector::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto();
  return *default_instance_;
}

Vector* Vector::default_instance_ = NULL;

Vector* Vector::New(::google::protobuf::Arena* arena) const {
  Vector* n = new Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Vector)
  columns_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double columns = 1;
      case 1: {
        if (tag == 9) {
         parse_columns:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_columns())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_columns())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_columns;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Vector)
  return false;
#undef DO_
}

void Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Vector)
  // repeated double columns = 1;
  for (int i = 0; i < this->columns_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->columns(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.Vector)
}

::google::protobuf::uint8* Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Vector)
  // repeated double columns = 1;
  for (int i = 0; i < this->columns_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->columns(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Vector)
  return target;
}

int Vector::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Vector)
  int total_size = 0;

  // repeated double columns = 1;
  {
    int data_size = 0;
    data_size = 8 * this->columns_size();
    total_size += 1 * this->columns_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Vector* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Vector)
    MergeFrom(*source);
  }
}

void Vector::MergeFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  columns_.MergeFrom(from.columns_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector::IsInitialized() const {

  return true;
}

void Vector::Swap(Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector::InternalSwap(Vector* other) {
  columns_.UnsafeArenaSwap(&other->columns_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vector_descriptor_;
  metadata.reflection = Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector

// repeated double columns = 1;
int Vector::columns_size() const {
  return columns_.size();
}
void Vector::clear_columns() {
  columns_.Clear();
}
 double Vector::columns(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Vector.columns)
  return columns_.Get(index);
}
 void Vector::set_columns(int index, double value) {
  columns_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Vector.columns)
}
 void Vector::add_columns(double value) {
  columns_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Vector.columns)
}
 const ::google::protobuf::RepeatedField< double >&
Vector::columns() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Vector.columns)
  return columns_;
}
 ::google::protobuf::RepeatedField< double >*
Vector::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Vector.columns)
  return &columns_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Matrix::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Matrix::Matrix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Matrix)
}

void Matrix::InitAsDefaultInstance() {
}

Matrix::Matrix(const Matrix& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Matrix)
}

void Matrix::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Matrix::~Matrix() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Matrix)
  SharedDtor();
}

void Matrix::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Matrix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Matrix::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Matrix_descriptor_;
}

const Matrix& Matrix::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto();
  return *default_instance_;
}

Matrix* Matrix::default_instance_ = NULL;

Matrix* Matrix::New(::google::protobuf::Arena* arena) const {
  Matrix* n = new Matrix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Matrix::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Matrix)
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Matrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Matrix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.prediction.Vector rows = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_rows;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Matrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Matrix)
  return false;
#undef DO_
}

void Matrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Matrix)
  // repeated .apollo.prediction.Vector rows = 1;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rows(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.Matrix)
}

::google::protobuf::uint8* Matrix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Matrix)
  // repeated .apollo.prediction.Vector rows = 1;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rows(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Matrix)
  return target;
}

int Matrix::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Matrix)
  int total_size = 0;

  // repeated .apollo.prediction.Vector rows = 1;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Matrix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Matrix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Matrix* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Matrix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Matrix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Matrix)
    MergeFrom(*source);
  }
}

void Matrix::MergeFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Matrix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rows_.MergeFrom(from.rows_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Matrix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matrix::CopyFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matrix::IsInitialized() const {

  return true;
}

void Matrix::Swap(Matrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Matrix::InternalSwap(Matrix* other) {
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Matrix::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Matrix_descriptor_;
  metadata.reflection = Matrix_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Matrix

// repeated .apollo.prediction.Vector rows = 1;
int Matrix::rows_size() const {
  return rows_.size();
}
void Matrix::clear_rows() {
  rows_.Clear();
}
const ::apollo::prediction::Vector& Matrix::rows(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Matrix.rows)
  return rows_.Get(index);
}
::apollo::prediction::Vector* Matrix::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Matrix.rows)
  return rows_.Mutable(index);
}
::apollo::prediction::Vector* Matrix::add_rows() {
  // @@protoc_insertion_point(field_add:apollo.prediction.Matrix.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::Vector >*
Matrix::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Matrix.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Vector >&
Matrix::rows() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Matrix.rows)
  return rows_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Layer_ActivationFunc_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Layer_ActivationFunc_descriptor_;
}
bool Layer_ActivationFunc_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Layer_ActivationFunc Layer::RELU;
const Layer_ActivationFunc Layer::TANH;
const Layer_ActivationFunc Layer::SIGMOID;
const Layer_ActivationFunc Layer::ActivationFunc_MIN;
const Layer_ActivationFunc Layer::ActivationFunc_MAX;
const int Layer::ActivationFunc_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Layer::kLayerInputDimFieldNumber;
const int Layer::kLayerOutputDimFieldNumber;
const int Layer::kLayerInputWeightFieldNumber;
const int Layer::kLayerBiasFieldNumber;
const int Layer::kLayerActivationFuncFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Layer::Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Layer)
}

void Layer::InitAsDefaultInstance() {
  layer_input_weight_ = const_cast< ::apollo::prediction::Matrix*>(&::apollo::prediction::Matrix::default_instance());
  layer_bias_ = const_cast< ::apollo::prediction::Vector*>(&::apollo::prediction::Vector::default_instance());
}

Layer::Layer(const Layer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Layer)
}

void Layer::SharedCtor() {
  _cached_size_ = 0;
  layer_input_dim_ = 0;
  layer_output_dim_ = 0;
  layer_input_weight_ = NULL;
  layer_bias_ = NULL;
  layer_activation_func_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Layer::~Layer() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Layer)
  SharedDtor();
}

void Layer::SharedDtor() {
  if (this != default_instance_) {
    delete layer_input_weight_;
    delete layer_bias_;
  }
}

void Layer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Layer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Layer_descriptor_;
}

const Layer& Layer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2ffnn_5fmodel_5fbase_2eproto();
  return *default_instance_;
}

Layer* Layer::default_instance_ = NULL;

Layer* Layer::New(::google::protobuf::Arena* arena) const {
  Layer* n = new Layer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Layer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Layer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Layer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(layer_input_dim_, layer_output_dim_);
    if (has_layer_input_weight()) {
      if (layer_input_weight_ != NULL) layer_input_weight_->::apollo::prediction::Matrix::Clear();
    }
    if (has_layer_bias()) {
      if (layer_bias_ != NULL) layer_bias_->::apollo::prediction::Vector::Clear();
    }
    layer_activation_func_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Layer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 layer_input_dim = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_input_dim_)));
          set_has_layer_input_dim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_layer_output_dim;
        break;
      }

      // optional int32 layer_output_dim = 2;
      case 2: {
        if (tag == 16) {
         parse_layer_output_dim:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_output_dim_)));
          set_has_layer_output_dim();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_layer_input_weight;
        break;
      }

      // optional .apollo.prediction.Matrix layer_input_weight = 3;
      case 3: {
        if (tag == 26) {
         parse_layer_input_weight:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_layer_input_weight()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_layer_bias;
        break;
      }

      // optional .apollo.prediction.Vector layer_bias = 4;
      case 4: {
        if (tag == 34) {
         parse_layer_bias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_layer_bias()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_layer_activation_func;
        break;
      }

      // optional .apollo.prediction.Layer.ActivationFunc layer_activation_func = 5;
      case 5: {
        if (tag == 40) {
         parse_layer_activation_func:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::prediction::Layer_ActivationFunc_IsValid(value)) {
            set_layer_activation_func(static_cast< ::apollo::prediction::Layer_ActivationFunc >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Layer)
  return false;
#undef DO_
}

void Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Layer)
  // optional int32 layer_input_dim = 1;
  if (has_layer_input_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->layer_input_dim(), output);
  }

  // optional int32 layer_output_dim = 2;
  if (has_layer_output_dim()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->layer_output_dim(), output);
  }

  // optional .apollo.prediction.Matrix layer_input_weight = 3;
  if (has_layer_input_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->layer_input_weight_, output);
  }

  // optional .apollo.prediction.Vector layer_bias = 4;
  if (has_layer_bias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->layer_bias_, output);
  }

  // optional .apollo.prediction.Layer.ActivationFunc layer_activation_func = 5;
  if (has_layer_activation_func()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->layer_activation_func(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.Layer)
}

::google::protobuf::uint8* Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Layer)
  // optional int32 layer_input_dim = 1;
  if (has_layer_input_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->layer_input_dim(), target);
  }

  // optional int32 layer_output_dim = 2;
  if (has_layer_output_dim()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->layer_output_dim(), target);
  }

  // optional .apollo.prediction.Matrix layer_input_weight = 3;
  if (has_layer_input_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->layer_input_weight_, false, target);
  }

  // optional .apollo.prediction.Vector layer_bias = 4;
  if (has_layer_bias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->layer_bias_, false, target);
  }

  // optional .apollo.prediction.Layer.ActivationFunc layer_activation_func = 5;
  if (has_layer_activation_func()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->layer_activation_func(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Layer)
  return target;
}

int Layer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Layer)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 layer_input_dim = 1;
    if (has_layer_input_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layer_input_dim());
    }

    // optional int32 layer_output_dim = 2;
    if (has_layer_output_dim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->layer_output_dim());
    }

    // optional .apollo.prediction.Matrix layer_input_weight = 3;
    if (has_layer_input_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->layer_input_weight_);
    }

    // optional .apollo.prediction.Vector layer_bias = 4;
    if (has_layer_bias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->layer_bias_);
    }

    // optional .apollo.prediction.Layer.ActivationFunc layer_activation_func = 5;
    if (has_layer_activation_func()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->layer_activation_func());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Layer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Layer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Layer)
    MergeFrom(*source);
  }
}

void Layer::MergeFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Layer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_layer_input_dim()) {
      set_layer_input_dim(from.layer_input_dim());
    }
    if (from.has_layer_output_dim()) {
      set_layer_output_dim(from.layer_output_dim());
    }
    if (from.has_layer_input_weight()) {
      mutable_layer_input_weight()->::apollo::prediction::Matrix::MergeFrom(from.layer_input_weight());
    }
    if (from.has_layer_bias()) {
      mutable_layer_bias()->::apollo::prediction::Vector::MergeFrom(from.layer_bias());
    }
    if (from.has_layer_activation_func()) {
      set_layer_activation_func(from.layer_activation_func());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Layer::CopyFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Layer::IsInitialized() const {

  return true;
}

void Layer::Swap(Layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Layer::InternalSwap(Layer* other) {
  std::swap(layer_input_dim_, other->layer_input_dim_);
  std::swap(layer_output_dim_, other->layer_output_dim_);
  std::swap(layer_input_weight_, other->layer_input_weight_);
  std::swap(layer_bias_, other->layer_bias_);
  std::swap(layer_activation_func_, other->layer_activation_func_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Layer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Layer_descriptor_;
  metadata.reflection = Layer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Layer

// optional int32 layer_input_dim = 1;
bool Layer::has_layer_input_dim() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Layer::set_has_layer_input_dim() {
  _has_bits_[0] |= 0x00000001u;
}
void Layer::clear_has_layer_input_dim() {
  _has_bits_[0] &= ~0x00000001u;
}
void Layer::clear_layer_input_dim() {
  layer_input_dim_ = 0;
  clear_has_layer_input_dim();
}
 ::google::protobuf::int32 Layer::layer_input_dim() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Layer.layer_input_dim)
  return layer_input_dim_;
}
 void Layer::set_layer_input_dim(::google::protobuf::int32 value) {
  set_has_layer_input_dim();
  layer_input_dim_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.Layer.layer_input_dim)
}

// optional int32 layer_output_dim = 2;
bool Layer::has_layer_output_dim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Layer::set_has_layer_output_dim() {
  _has_bits_[0] |= 0x00000002u;
}
void Layer::clear_has_layer_output_dim() {
  _has_bits_[0] &= ~0x00000002u;
}
void Layer::clear_layer_output_dim() {
  layer_output_dim_ = 0;
  clear_has_layer_output_dim();
}
 ::google::protobuf::int32 Layer::layer_output_dim() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Layer.layer_output_dim)
  return layer_output_dim_;
}
 void Layer::set_layer_output_dim(::google::protobuf::int32 value) {
  set_has_layer_output_dim();
  layer_output_dim_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.Layer.layer_output_dim)
}

// optional .apollo.prediction.Matrix layer_input_weight = 3;
bool Layer::has_layer_input_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Layer::set_has_layer_input_weight() {
  _has_bits_[0] |= 0x00000004u;
}
void Layer::clear_has_layer_input_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
void Layer::clear_layer_input_weight() {
  if (layer_input_weight_ != NULL) layer_input_weight_->::apollo::prediction::Matrix::Clear();
  clear_has_layer_input_weight();
}
const ::apollo::prediction::Matrix& Layer::layer_input_weight() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Layer.layer_input_weight)
  return layer_input_weight_ != NULL ? *layer_input_weight_ : *default_instance_->layer_input_weight_;
}
::apollo::prediction::Matrix* Layer::mutable_layer_input_weight() {
  set_has_layer_input_weight();
  if (layer_input_weight_ == NULL) {
    layer_input_weight_ = new ::apollo::prediction::Matrix;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Layer.layer_input_weight)
  return layer_input_weight_;
}
::apollo::prediction::Matrix* Layer::release_layer_input_weight() {
  // @@protoc_insertion_point(field_release:apollo.prediction.Layer.layer_input_weight)
  clear_has_layer_input_weight();
  ::apollo::prediction::Matrix* temp = layer_input_weight_;
  layer_input_weight_ = NULL;
  return temp;
}
void Layer::set_allocated_layer_input_weight(::apollo::prediction::Matrix* layer_input_weight) {
  delete layer_input_weight_;
  layer_input_weight_ = layer_input_weight;
  if (layer_input_weight) {
    set_has_layer_input_weight();
  } else {
    clear_has_layer_input_weight();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.Layer.layer_input_weight)
}

// optional .apollo.prediction.Vector layer_bias = 4;
bool Layer::has_layer_bias() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Layer::set_has_layer_bias() {
  _has_bits_[0] |= 0x00000008u;
}
void Layer::clear_has_layer_bias() {
  _has_bits_[0] &= ~0x00000008u;
}
void Layer::clear_layer_bias() {
  if (layer_bias_ != NULL) layer_bias_->::apollo::prediction::Vector::Clear();
  clear_has_layer_bias();
}
const ::apollo::prediction::Vector& Layer::layer_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Layer.layer_bias)
  return layer_bias_ != NULL ? *layer_bias_ : *default_instance_->layer_bias_;
}
::apollo::prediction::Vector* Layer::mutable_layer_bias() {
  set_has_layer_bias();
  if (layer_bias_ == NULL) {
    layer_bias_ = new ::apollo::prediction::Vector;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Layer.layer_bias)
  return layer_bias_;
}
::apollo::prediction::Vector* Layer::release_layer_bias() {
  // @@protoc_insertion_point(field_release:apollo.prediction.Layer.layer_bias)
  clear_has_layer_bias();
  ::apollo::prediction::Vector* temp = layer_bias_;
  layer_bias_ = NULL;
  return temp;
}
void Layer::set_allocated_layer_bias(::apollo::prediction::Vector* layer_bias) {
  delete layer_bias_;
  layer_bias_ = layer_bias;
  if (layer_bias) {
    set_has_layer_bias();
  } else {
    clear_has_layer_bias();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.Layer.layer_bias)
}

// optional .apollo.prediction.Layer.ActivationFunc layer_activation_func = 5;
bool Layer::has_layer_activation_func() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Layer::set_has_layer_activation_func() {
  _has_bits_[0] |= 0x00000010u;
}
void Layer::clear_has_layer_activation_func() {
  _has_bits_[0] &= ~0x00000010u;
}
void Layer::clear_layer_activation_func() {
  layer_activation_func_ = 0;
  clear_has_layer_activation_func();
}
 ::apollo::prediction::Layer_ActivationFunc Layer::layer_activation_func() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Layer.layer_activation_func)
  return static_cast< ::apollo::prediction::Layer_ActivationFunc >(layer_activation_func_);
}
 void Layer::set_layer_activation_func(::apollo::prediction::Layer_ActivationFunc value) {
  assert(::apollo::prediction::Layer_ActivationFunc_IsValid(value));
  set_has_layer_activation_func();
  layer_activation_func_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.Layer.layer_activation_func)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
