// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: localization/imu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "localization/imu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace localization {

namespace {

const ::google::protobuf::Descriptor* CorrectedImu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CorrectedImu_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_localization_2fimu_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_localization_2fimu_2eproto() {
  protobuf_AddDesc_localization_2fimu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "localization/imu.proto");
  GOOGLE_CHECK(file != NULL);
  CorrectedImu_descriptor_ = file->message_type(0);
  static const int CorrectedImu_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CorrectedImu, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CorrectedImu, imu_),
  };
  CorrectedImu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CorrectedImu_descriptor_,
      CorrectedImu::default_instance_,
      CorrectedImu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CorrectedImu, _has_bits_[0]),
      -1,
      -1,
      sizeof(CorrectedImu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CorrectedImu, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_localization_2fimu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CorrectedImu_descriptor_, &CorrectedImu::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_localization_2fimu_2eproto() {
  delete CorrectedImu::default_instance_;
  delete CorrectedImu_reflection_;
}

void protobuf_AddDesc_localization_2fimu_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_localization_2fimu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::common::protobuf_AddDesc_common_2fheader_2eproto();
  ::apollo::localization::protobuf_AddDesc_localization_2fpose_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026localization/imu.proto\022\023apollo.localiz"
    "ation\032\023common/header.proto\032\027localization"
    "/pose.proto\"]\n\014CorrectedImu\022%\n\006header\030\001 "
    "\001(\0132\025.apollo.common.Header\022&\n\003imu\030\003 \001(\0132"
    "\031.apollo.localization.Pose", 186);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "localization/imu.proto", &protobuf_RegisterTypes);
  CorrectedImu::default_instance_ = new CorrectedImu();
  CorrectedImu::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_localization_2fimu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_localization_2fimu_2eproto {
  StaticDescriptorInitializer_localization_2fimu_2eproto() {
    protobuf_AddDesc_localization_2fimu_2eproto();
  }
} static_descriptor_initializer_localization_2fimu_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CorrectedImu::kHeaderFieldNumber;
const int CorrectedImu::kImuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CorrectedImu::CorrectedImu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.localization.CorrectedImu)
}

void CorrectedImu::InitAsDefaultInstance() {
  header_ = const_cast< ::apollo::common::Header*>(&::apollo::common::Header::default_instance());
  imu_ = const_cast< ::apollo::localization::Pose*>(&::apollo::localization::Pose::default_instance());
}

CorrectedImu::CorrectedImu(const CorrectedImu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.localization.CorrectedImu)
}

void CorrectedImu::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  imu_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CorrectedImu::~CorrectedImu() {
  // @@protoc_insertion_point(destructor:apollo.localization.CorrectedImu)
  SharedDtor();
}

void CorrectedImu::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete imu_;
  }
}

void CorrectedImu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CorrectedImu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CorrectedImu_descriptor_;
}

const CorrectedImu& CorrectedImu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_localization_2fimu_2eproto();
  return *default_instance_;
}

CorrectedImu* CorrectedImu::default_instance_ = NULL;

CorrectedImu* CorrectedImu::New(::google::protobuf::Arena* arena) const {
  CorrectedImu* n = new CorrectedImu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CorrectedImu::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.CorrectedImu)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_header()) {
      if (header_ != NULL) header_->::apollo::common::Header::Clear();
    }
    if (has_imu()) {
      if (imu_ != NULL) imu_->::apollo::localization::Pose::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CorrectedImu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.localization.CorrectedImu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_imu;
        break;
      }

      // optional .apollo.localization.Pose imu = 3;
      case 3: {
        if (tag == 26) {
         parse_imu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_imu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.localization.CorrectedImu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.localization.CorrectedImu)
  return false;
#undef DO_
}

void CorrectedImu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.localization.CorrectedImu)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional .apollo.localization.Pose imu = 3;
  if (has_imu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->imu_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.localization.CorrectedImu)
}

::google::protobuf::uint8* CorrectedImu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.CorrectedImu)
  // optional .apollo.common.Header header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional .apollo.localization.Pose imu = 3;
  if (has_imu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->imu_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.CorrectedImu)
  return target;
}

int CorrectedImu::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.CorrectedImu)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional .apollo.localization.Pose imu = 3;
    if (has_imu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->imu_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CorrectedImu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.localization.CorrectedImu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CorrectedImu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CorrectedImu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.localization.CorrectedImu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.localization.CorrectedImu)
    MergeFrom(*source);
  }
}

void CorrectedImu::MergeFrom(const CorrectedImu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.CorrectedImu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (from.has_imu()) {
      mutable_imu()->::apollo::localization::Pose::MergeFrom(from.imu());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CorrectedImu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.localization.CorrectedImu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CorrectedImu::CopyFrom(const CorrectedImu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.CorrectedImu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CorrectedImu::IsInitialized() const {

  return true;
}

void CorrectedImu::Swap(CorrectedImu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CorrectedImu::InternalSwap(CorrectedImu* other) {
  std::swap(header_, other->header_);
  std::swap(imu_, other->imu_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CorrectedImu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CorrectedImu_descriptor_;
  metadata.reflection = CorrectedImu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CorrectedImu

// optional .apollo.common.Header header = 1;
bool CorrectedImu::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CorrectedImu::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void CorrectedImu::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void CorrectedImu::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
const ::apollo::common::Header& CorrectedImu::header() const {
  // @@protoc_insertion_point(field_get:apollo.localization.CorrectedImu.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::apollo::common::Header* CorrectedImu::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.localization.CorrectedImu.header)
  return header_;
}
::apollo::common::Header* CorrectedImu::release_header() {
  // @@protoc_insertion_point(field_release:apollo.localization.CorrectedImu.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void CorrectedImu::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.localization.CorrectedImu.header)
}

// optional .apollo.localization.Pose imu = 3;
bool CorrectedImu::has_imu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CorrectedImu::set_has_imu() {
  _has_bits_[0] |= 0x00000002u;
}
void CorrectedImu::clear_has_imu() {
  _has_bits_[0] &= ~0x00000002u;
}
void CorrectedImu::clear_imu() {
  if (imu_ != NULL) imu_->::apollo::localization::Pose::Clear();
  clear_has_imu();
}
const ::apollo::localization::Pose& CorrectedImu::imu() const {
  // @@protoc_insertion_point(field_get:apollo.localization.CorrectedImu.imu)
  return imu_ != NULL ? *imu_ : *default_instance_->imu_;
}
::apollo::localization::Pose* CorrectedImu::mutable_imu() {
  set_has_imu();
  if (imu_ == NULL) {
    imu_ = new ::apollo::localization::Pose;
  }
  // @@protoc_insertion_point(field_mutable:apollo.localization.CorrectedImu.imu)
  return imu_;
}
::apollo::localization::Pose* CorrectedImu::release_imu() {
  // @@protoc_insertion_point(field_release:apollo.localization.CorrectedImu.imu)
  clear_has_imu();
  ::apollo::localization::Pose* temp = imu_;
  imu_ = NULL;
  return temp;
}
void CorrectedImu::set_allocated_imu(::apollo::localization::Pose* imu) {
  delete imu_;
  imu_ = imu;
  if (imu) {
    set_has_imu();
  } else {
    clear_has_imu();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.localization.CorrectedImu.imu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace localization
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
