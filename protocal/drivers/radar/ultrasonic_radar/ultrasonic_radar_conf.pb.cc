// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: drivers/radar/ultrasonic_radar/ultrasonic_radar_conf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "drivers/radar/ultrasonic_radar/ultrasonic_radar_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace drivers {
namespace ultrasonic_radar {

namespace {

const ::google::protobuf::Descriptor* CanConf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CanConf_reflection_ = NULL;
const ::google::protobuf::Descriptor* UltrasonicRadarConf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UltrasonicRadarConf_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto() {
  protobuf_AddDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "drivers/radar/ultrasonic_radar/ultrasonic_radar_conf.proto");
  GOOGLE_CHECK(file != NULL);
  CanConf_descriptor_ = file->message_type(0);
  static const int CanConf_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanConf, can_card_parameter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanConf, enable_debug_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanConf, enable_receiver_log_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanConf, enable_sender_log_),
  };
  CanConf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CanConf_descriptor_,
      CanConf::default_instance_,
      CanConf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanConf, _has_bits_[0]),
      -1,
      -1,
      sizeof(CanConf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanConf, _internal_metadata_),
      -1);
  UltrasonicRadarConf_descriptor_ = file->message_type(1);
  static const int UltrasonicRadarConf_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UltrasonicRadarConf, can_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UltrasonicRadarConf, entrance_num_),
  };
  UltrasonicRadarConf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UltrasonicRadarConf_descriptor_,
      UltrasonicRadarConf::default_instance_,
      UltrasonicRadarConf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UltrasonicRadarConf, _has_bits_[0]),
      -1,
      -1,
      sizeof(UltrasonicRadarConf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UltrasonicRadarConf, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CanConf_descriptor_, &CanConf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UltrasonicRadarConf_descriptor_, &UltrasonicRadarConf::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto() {
  delete CanConf::default_instance_;
  delete CanConf_reflection_;
  delete UltrasonicRadarConf::default_instance_;
  delete UltrasonicRadarConf_reflection_;
}

void protobuf_AddDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::drivers::canbus::protobuf_AddDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n:drivers/radar/ultrasonic_radar/ultraso"
    "nic_radar_conf.proto\022\037apollo.drivers.ult"
    "rasonic_radar\032\'drivers/canbus/can_card_p"
    "arameter.proto\"\266\001\n\007CanConf\022C\n\022can_card_p"
    "arameter\030\001 \001(\0132\'.apollo.drivers.canbus.C"
    "ANCardParameter\022 \n\021enable_debug_mode\030\002 \001"
    "(\010:\005false\022\"\n\023enable_receiver_log\030\003 \001(\010:\005"
    "false\022 \n\021enable_sender_log\030\004 \001(\010:\005false\""
    "g\n\023UltrasonicRadarConf\022:\n\010can_conf\030\001 \001(\013"
    "2(.apollo.drivers.ultrasonic_radar.CanCo"
    "nf\022\024\n\014entrance_num\030\002 \002(\005", 424);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "drivers/radar/ultrasonic_radar/ultrasonic_radar_conf.proto", &protobuf_RegisterTypes);
  CanConf::default_instance_ = new CanConf();
  UltrasonicRadarConf::default_instance_ = new UltrasonicRadarConf();
  CanConf::default_instance_->InitAsDefaultInstance();
  UltrasonicRadarConf::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto {
  StaticDescriptorInitializer_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto() {
    protobuf_AddDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto();
  }
} static_descriptor_initializer_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanConf::kCanCardParameterFieldNumber;
const int CanConf::kEnableDebugModeFieldNumber;
const int CanConf::kEnableReceiverLogFieldNumber;
const int CanConf::kEnableSenderLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanConf::CanConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.ultrasonic_radar.CanConf)
}

void CanConf::InitAsDefaultInstance() {
  can_card_parameter_ = const_cast< ::apollo::drivers::canbus::CANCardParameter*>(&::apollo::drivers::canbus::CANCardParameter::default_instance());
}

CanConf::CanConf(const CanConf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.ultrasonic_radar.CanConf)
}

void CanConf::SharedCtor() {
  _cached_size_ = 0;
  can_card_parameter_ = NULL;
  enable_debug_mode_ = false;
  enable_receiver_log_ = false;
  enable_sender_log_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CanConf::~CanConf() {
  // @@protoc_insertion_point(destructor:apollo.drivers.ultrasonic_radar.CanConf)
  SharedDtor();
}

void CanConf::SharedDtor() {
  if (this != default_instance_) {
    delete can_card_parameter_;
  }
}

void CanConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanConf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CanConf_descriptor_;
}

const CanConf& CanConf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto();
  return *default_instance_;
}

CanConf* CanConf::default_instance_ = NULL;

CanConf* CanConf::New(::google::protobuf::Arena* arena) const {
  CanConf* n = new CanConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.drivers.ultrasonic_radar.CanConf)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CanConf, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CanConf*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(enable_debug_mode_, enable_sender_log_);
    if (has_can_card_parameter()) {
      if (can_card_parameter_ != NULL) can_card_parameter_->::apollo::drivers::canbus::CANCardParameter::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CanConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.ultrasonic_radar.CanConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_can_card_parameter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enable_debug_mode;
        break;
      }

      // optional bool enable_debug_mode = 2 [default = false];
      case 2: {
        if (tag == 16) {
         parse_enable_debug_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_debug_mode_)));
          set_has_enable_debug_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_enable_receiver_log;
        break;
      }

      // optional bool enable_receiver_log = 3 [default = false];
      case 3: {
        if (tag == 24) {
         parse_enable_receiver_log:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_receiver_log_)));
          set_has_enable_receiver_log();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_enable_sender_log;
        break;
      }

      // optional bool enable_sender_log = 4 [default = false];
      case 4: {
        if (tag == 32) {
         parse_enable_sender_log:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_sender_log_)));
          set_has_enable_sender_log();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.ultrasonic_radar.CanConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.ultrasonic_radar.CanConf)
  return false;
#undef DO_
}

void CanConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.ultrasonic_radar.CanConf)
  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
  if (has_can_card_parameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->can_card_parameter_, output);
  }

  // optional bool enable_debug_mode = 2 [default = false];
  if (has_enable_debug_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable_debug_mode(), output);
  }

  // optional bool enable_receiver_log = 3 [default = false];
  if (has_enable_receiver_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable_receiver_log(), output);
  }

  // optional bool enable_sender_log = 4 [default = false];
  if (has_enable_sender_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enable_sender_log(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.ultrasonic_radar.CanConf)
}

::google::protobuf::uint8* CanConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.ultrasonic_radar.CanConf)
  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
  if (has_can_card_parameter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->can_card_parameter_, false, target);
  }

  // optional bool enable_debug_mode = 2 [default = false];
  if (has_enable_debug_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable_debug_mode(), target);
  }

  // optional bool enable_receiver_log = 3 [default = false];
  if (has_enable_receiver_log()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable_receiver_log(), target);
  }

  // optional bool enable_sender_log = 4 [default = false];
  if (has_enable_sender_log()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enable_sender_log(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.ultrasonic_radar.CanConf)
  return target;
}

int CanConf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.drivers.ultrasonic_radar.CanConf)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
    if (has_can_card_parameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->can_card_parameter_);
    }

    // optional bool enable_debug_mode = 2 [default = false];
    if (has_enable_debug_mode()) {
      total_size += 1 + 1;
    }

    // optional bool enable_receiver_log = 3 [default = false];
    if (has_enable_receiver_log()) {
      total_size += 1 + 1;
    }

    // optional bool enable_sender_log = 4 [default = false];
    if (has_enable_sender_log()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.drivers.ultrasonic_radar.CanConf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CanConf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CanConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.drivers.ultrasonic_radar.CanConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.drivers.ultrasonic_radar.CanConf)
    MergeFrom(*source);
  }
}

void CanConf::MergeFrom(const CanConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.drivers.ultrasonic_radar.CanConf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_can_card_parameter()) {
      mutable_can_card_parameter()->::apollo::drivers::canbus::CANCardParameter::MergeFrom(from.can_card_parameter());
    }
    if (from.has_enable_debug_mode()) {
      set_enable_debug_mode(from.enable_debug_mode());
    }
    if (from.has_enable_receiver_log()) {
      set_enable_receiver_log(from.enable_receiver_log());
    }
    if (from.has_enable_sender_log()) {
      set_enable_sender_log(from.enable_sender_log());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CanConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.drivers.ultrasonic_radar.CanConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanConf::CopyFrom(const CanConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.drivers.ultrasonic_radar.CanConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanConf::IsInitialized() const {

  return true;
}

void CanConf::Swap(CanConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanConf::InternalSwap(CanConf* other) {
  std::swap(can_card_parameter_, other->can_card_parameter_);
  std::swap(enable_debug_mode_, other->enable_debug_mode_);
  std::swap(enable_receiver_log_, other->enable_receiver_log_);
  std::swap(enable_sender_log_, other->enable_sender_log_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanConf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CanConf_descriptor_;
  metadata.reflection = CanConf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanConf

// optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
bool CanConf::has_can_card_parameter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CanConf::set_has_can_card_parameter() {
  _has_bits_[0] |= 0x00000001u;
}
void CanConf::clear_has_can_card_parameter() {
  _has_bits_[0] &= ~0x00000001u;
}
void CanConf::clear_can_card_parameter() {
  if (can_card_parameter_ != NULL) can_card_parameter_->::apollo::drivers::canbus::CANCardParameter::Clear();
  clear_has_can_card_parameter();
}
const ::apollo::drivers::canbus::CANCardParameter& CanConf::can_card_parameter() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.ultrasonic_radar.CanConf.can_card_parameter)
  return can_card_parameter_ != NULL ? *can_card_parameter_ : *default_instance_->can_card_parameter_;
}
::apollo::drivers::canbus::CANCardParameter* CanConf::mutable_can_card_parameter() {
  set_has_can_card_parameter();
  if (can_card_parameter_ == NULL) {
    can_card_parameter_ = new ::apollo::drivers::canbus::CANCardParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.drivers.ultrasonic_radar.CanConf.can_card_parameter)
  return can_card_parameter_;
}
::apollo::drivers::canbus::CANCardParameter* CanConf::release_can_card_parameter() {
  // @@protoc_insertion_point(field_release:apollo.drivers.ultrasonic_radar.CanConf.can_card_parameter)
  clear_has_can_card_parameter();
  ::apollo::drivers::canbus::CANCardParameter* temp = can_card_parameter_;
  can_card_parameter_ = NULL;
  return temp;
}
void CanConf::set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter) {
  delete can_card_parameter_;
  can_card_parameter_ = can_card_parameter;
  if (can_card_parameter) {
    set_has_can_card_parameter();
  } else {
    clear_has_can_card_parameter();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.drivers.ultrasonic_radar.CanConf.can_card_parameter)
}

// optional bool enable_debug_mode = 2 [default = false];
bool CanConf::has_enable_debug_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CanConf::set_has_enable_debug_mode() {
  _has_bits_[0] |= 0x00000002u;
}
void CanConf::clear_has_enable_debug_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
void CanConf::clear_enable_debug_mode() {
  enable_debug_mode_ = false;
  clear_has_enable_debug_mode();
}
 bool CanConf::enable_debug_mode() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.ultrasonic_radar.CanConf.enable_debug_mode)
  return enable_debug_mode_;
}
 void CanConf::set_enable_debug_mode(bool value) {
  set_has_enable_debug_mode();
  enable_debug_mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.ultrasonic_radar.CanConf.enable_debug_mode)
}

// optional bool enable_receiver_log = 3 [default = false];
bool CanConf::has_enable_receiver_log() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CanConf::set_has_enable_receiver_log() {
  _has_bits_[0] |= 0x00000004u;
}
void CanConf::clear_has_enable_receiver_log() {
  _has_bits_[0] &= ~0x00000004u;
}
void CanConf::clear_enable_receiver_log() {
  enable_receiver_log_ = false;
  clear_has_enable_receiver_log();
}
 bool CanConf::enable_receiver_log() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.ultrasonic_radar.CanConf.enable_receiver_log)
  return enable_receiver_log_;
}
 void CanConf::set_enable_receiver_log(bool value) {
  set_has_enable_receiver_log();
  enable_receiver_log_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.ultrasonic_radar.CanConf.enable_receiver_log)
}

// optional bool enable_sender_log = 4 [default = false];
bool CanConf::has_enable_sender_log() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CanConf::set_has_enable_sender_log() {
  _has_bits_[0] |= 0x00000008u;
}
void CanConf::clear_has_enable_sender_log() {
  _has_bits_[0] &= ~0x00000008u;
}
void CanConf::clear_enable_sender_log() {
  enable_sender_log_ = false;
  clear_has_enable_sender_log();
}
 bool CanConf::enable_sender_log() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.ultrasonic_radar.CanConf.enable_sender_log)
  return enable_sender_log_;
}
 void CanConf::set_enable_sender_log(bool value) {
  set_has_enable_sender_log();
  enable_sender_log_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.ultrasonic_radar.CanConf.enable_sender_log)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UltrasonicRadarConf::kCanConfFieldNumber;
const int UltrasonicRadarConf::kEntranceNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UltrasonicRadarConf::UltrasonicRadarConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
}

void UltrasonicRadarConf::InitAsDefaultInstance() {
  can_conf_ = const_cast< ::apollo::drivers::ultrasonic_radar::CanConf*>(&::apollo::drivers::ultrasonic_radar::CanConf::default_instance());
}

UltrasonicRadarConf::UltrasonicRadarConf(const UltrasonicRadarConf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
}

void UltrasonicRadarConf::SharedCtor() {
  _cached_size_ = 0;
  can_conf_ = NULL;
  entrance_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UltrasonicRadarConf::~UltrasonicRadarConf() {
  // @@protoc_insertion_point(destructor:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  SharedDtor();
}

void UltrasonicRadarConf::SharedDtor() {
  if (this != default_instance_) {
    delete can_conf_;
  }
}

void UltrasonicRadarConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UltrasonicRadarConf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UltrasonicRadarConf_descriptor_;
}

const UltrasonicRadarConf& UltrasonicRadarConf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drivers_2fradar_2fultrasonic_5fradar_2fultrasonic_5fradar_5fconf_2eproto();
  return *default_instance_;
}

UltrasonicRadarConf* UltrasonicRadarConf::default_instance_ = NULL;

UltrasonicRadarConf* UltrasonicRadarConf::New(::google::protobuf::Arena* arena) const {
  UltrasonicRadarConf* n = new UltrasonicRadarConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UltrasonicRadarConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_can_conf()) {
      if (can_conf_ != NULL) can_conf_->::apollo::drivers::ultrasonic_radar::CanConf::Clear();
    }
    entrance_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UltrasonicRadarConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.drivers.ultrasonic_radar.CanConf can_conf = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_can_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_entrance_num;
        break;
      }

      // required int32 entrance_num = 2;
      case 2: {
        if (tag == 16) {
         parse_entrance_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entrance_num_)));
          set_has_entrance_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  return false;
#undef DO_
}

void UltrasonicRadarConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  // optional .apollo.drivers.ultrasonic_radar.CanConf can_conf = 1;
  if (has_can_conf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->can_conf_, output);
  }

  // required int32 entrance_num = 2;
  if (has_entrance_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entrance_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
}

::google::protobuf::uint8* UltrasonicRadarConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  // optional .apollo.drivers.ultrasonic_radar.CanConf can_conf = 1;
  if (has_can_conf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->can_conf_, false, target);
  }

  // required int32 entrance_num = 2;
  if (has_entrance_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entrance_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  return target;
}

int UltrasonicRadarConf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  int total_size = 0;

  // required int32 entrance_num = 2;
  if (has_entrance_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entrance_num());
  }
  // optional .apollo.drivers.ultrasonic_radar.CanConf can_conf = 1;
  if (has_can_conf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->can_conf_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UltrasonicRadarConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UltrasonicRadarConf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UltrasonicRadarConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
    MergeFrom(*source);
  }
}

void UltrasonicRadarConf::MergeFrom(const UltrasonicRadarConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_can_conf()) {
      mutable_can_conf()->::apollo::drivers::ultrasonic_radar::CanConf::MergeFrom(from.can_conf());
    }
    if (from.has_entrance_num()) {
      set_entrance_num(from.entrance_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UltrasonicRadarConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UltrasonicRadarConf::CopyFrom(const UltrasonicRadarConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UltrasonicRadarConf::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void UltrasonicRadarConf::Swap(UltrasonicRadarConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UltrasonicRadarConf::InternalSwap(UltrasonicRadarConf* other) {
  std::swap(can_conf_, other->can_conf_);
  std::swap(entrance_num_, other->entrance_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UltrasonicRadarConf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UltrasonicRadarConf_descriptor_;
  metadata.reflection = UltrasonicRadarConf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UltrasonicRadarConf

// optional .apollo.drivers.ultrasonic_radar.CanConf can_conf = 1;
bool UltrasonicRadarConf::has_can_conf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UltrasonicRadarConf::set_has_can_conf() {
  _has_bits_[0] |= 0x00000001u;
}
void UltrasonicRadarConf::clear_has_can_conf() {
  _has_bits_[0] &= ~0x00000001u;
}
void UltrasonicRadarConf::clear_can_conf() {
  if (can_conf_ != NULL) can_conf_->::apollo::drivers::ultrasonic_radar::CanConf::Clear();
  clear_has_can_conf();
}
const ::apollo::drivers::ultrasonic_radar::CanConf& UltrasonicRadarConf::can_conf() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.can_conf)
  return can_conf_ != NULL ? *can_conf_ : *default_instance_->can_conf_;
}
::apollo::drivers::ultrasonic_radar::CanConf* UltrasonicRadarConf::mutable_can_conf() {
  set_has_can_conf();
  if (can_conf_ == NULL) {
    can_conf_ = new ::apollo::drivers::ultrasonic_radar::CanConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.can_conf)
  return can_conf_;
}
::apollo::drivers::ultrasonic_radar::CanConf* UltrasonicRadarConf::release_can_conf() {
  // @@protoc_insertion_point(field_release:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.can_conf)
  clear_has_can_conf();
  ::apollo::drivers::ultrasonic_radar::CanConf* temp = can_conf_;
  can_conf_ = NULL;
  return temp;
}
void UltrasonicRadarConf::set_allocated_can_conf(::apollo::drivers::ultrasonic_radar::CanConf* can_conf) {
  delete can_conf_;
  can_conf_ = can_conf;
  if (can_conf) {
    set_has_can_conf();
  } else {
    clear_has_can_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.can_conf)
}

// required int32 entrance_num = 2;
bool UltrasonicRadarConf::has_entrance_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UltrasonicRadarConf::set_has_entrance_num() {
  _has_bits_[0] |= 0x00000002u;
}
void UltrasonicRadarConf::clear_has_entrance_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void UltrasonicRadarConf::clear_entrance_num() {
  entrance_num_ = 0;
  clear_has_entrance_num();
}
 ::google::protobuf::int32 UltrasonicRadarConf::entrance_num() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.entrance_num)
  return entrance_num_;
}
 void UltrasonicRadarConf::set_entrance_num(::google::protobuf::int32 value) {
  set_has_entrance_num();
  entrance_num_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.ultrasonic_radar.UltrasonicRadarConf.entrance_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ultrasonic_radar
}  // namespace drivers
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
