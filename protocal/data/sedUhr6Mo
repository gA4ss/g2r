// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data/static_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data/static_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace data {
class VehicleInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VehicleInfo> {
} _VehicleInfo_default_instance_;
class EnvironmentInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnvironmentInfo> {
} _EnvironmentInfo_default_instance_;
class HardwareInfo_ConfigsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HardwareInfo::HardwareInfo_ConfigsEntry> {
} _HardwareInfo_ConfigsEntry_default_instance_;
class HardwareInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HardwareInfo> {
} _HardwareInfo_default_instance_;
class SoftwareInfo_ConfigsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SoftwareInfo::SoftwareInfo_ConfigsEntry> {
} _SoftwareInfo_ConfigsEntry_default_instance_;
class SoftwareInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SoftwareInfo> {
} _SoftwareInfo_default_instance_;
class UserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> {
} _UserInfo_default_instance_;
class StaticInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StaticInfo> {
} _StaticInfo_default_instance_;
class StaticInfoConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StaticInfoConf> {
} _StaticInfoConf_default_instance_;

namespace protobuf_data_2fstatic_5finfo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, brand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, license_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, canbus_conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, vehicle_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleInfo, control_config_),
  0,
  5,
  6,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentInfo, map_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentInfo, temperature_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HardwareInfo, configs_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, docker_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, commit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareInfo, latest_routing_request_),
  0,
  1,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, driver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, co_driver_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, vehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, environment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, hardware_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, software_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfo, user_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfoConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfoConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfoConf, hardware_configs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StaticInfoConf, software_configs_),
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 12, sizeof(VehicleInfo)},
  { 19, 26, sizeof(EnvironmentInfo)},
  { 28, 34, sizeof(HardwareInfo)},
  { 35, 45, sizeof(SoftwareInfo)},
  { 50, 58, sizeof(UserInfo)},
  { 61, 71, sizeof(StaticInfo)},
  { 76, 83, sizeof(StaticInfoConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VehicleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnvironmentInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HardwareInfo_ConfigsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HardwareInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SoftwareInfo_ConfigsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SoftwareInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StaticInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StaticInfoConf_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "data/static_info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[2].reflection = HardwareInfo::HardwareInfo_ConfigsEntry::CreateReflection(file_level_metadata[2].descriptor, _HardwareInfo_ConfigsEntry_default_instance_.get_mutable());
file_level_metadata[4].reflection = SoftwareInfo::SoftwareInfo_ConfigsEntry::CreateReflection(file_level_metadata[4].descriptor, _SoftwareInfo_ConfigsEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _VehicleInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _EnvironmentInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _HardwareInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SoftwareInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _UserInfo_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _StaticInfo_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _StaticInfoConf_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  delete file_level_metadata[2].reflection;
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::apollo::canbus::protobuf_canbus_2fcanbus_5fconf_2eproto::InitDefaults();
  ::apollo::canbus::protobuf_canbus_2fchassis_2eproto::InitDefaults();
  ::apollo::common::protobuf_common_2fconfigs_2fvehicle_5fconfig_2eproto::InitDefaults();
  ::apollo::control::protobuf_control_2fcontrol_5fconf_2eproto::InitDefaults();
  ::apollo::routing::protobuf_routing_2frouting_2eproto::InitDefaults();
  _VehicleInfo_default_instance_.DefaultConstruct();
  _EnvironmentInfo_default_instance_.DefaultConstruct();
  _HardwareInfo_ConfigsEntry_default_instance_.DefaultConstruct();
  _HardwareInfo_default_instance_.DefaultConstruct();
  _SoftwareInfo_ConfigsEntry_default_instance_.DefaultConstruct();
  _SoftwareInfo_default_instance_.DefaultConstruct();
  _UserInfo_default_instance_.DefaultConstruct();
  _StaticInfo_default_instance_.DefaultConstruct();
  _StaticInfoConf_default_instance_.DefaultConstruct();
  _VehicleInfo_default_instance_.get_mutable()->license_ = const_cast< ::apollo::canbus::License*>(
      ::apollo::canbus::License::internal_default_instance());
  _VehicleInfo_default_instance_.get_mutable()->canbus_conf_ = const_cast< ::apollo::canbus::CanbusConf*>(
      ::apollo::canbus::CanbusConf::internal_default_instance());
  _VehicleInfo_default_instance_.get_mutable()->vehicle_config_ = const_cast< ::apollo::common::VehicleConfig*>(
      ::apollo::common::VehicleConfig::internal_default_instance());
  _VehicleInfo_default_instance_.get_mutable()->control_config_ = const_cast< ::apollo::control::ControlConf*>(
      ::apollo::control::ControlConf::internal_default_instance());
  _HardwareInfo_ConfigsEntry_default_instance_.get_mutable()->set_default_instance(_HardwareInfo_ConfigsEntry_default_instance_.get_mutable());
  _HardwareInfo_ConfigsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _SoftwareInfo_ConfigsEntry_default_instance_.get_mutable()->set_default_instance(_SoftwareInfo_ConfigsEntry_default_instance_.get_mutable());
  _SoftwareInfo_ConfigsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _SoftwareInfo_default_instance_.get_mutable()->latest_routing_request_ = const_cast< ::apollo::routing::RoutingRequest*>(
      ::apollo::routing::RoutingRequest::internal_default_instance());
  _StaticInfo_default_instance_.get_mutable()->vehicle_ = const_cast< ::apollo::data::VehicleInfo*>(
      ::apollo::data::VehicleInfo::internal_default_instance());
  _StaticInfo_default_instance_.get_mutable()->environment_ = const_cast< ::apollo::data::EnvironmentInfo*>(
      ::apollo::data::EnvironmentInfo::internal_default_instance());
  _StaticInfo_default_instance_.get_mutable()->hardware_ = const_cast< ::apollo::data::HardwareInfo*>(
      ::apollo::data::HardwareInfo::internal_default_instance());
  _StaticInfo_default_instance_.get_mutable()->software_ = const_cast< ::apollo::data::SoftwareInfo*>(
      ::apollo::data::SoftwareInfo::internal_default_instance());
  _StaticInfo_default_instance_.get_mutable()->user_ = const_cast< ::apollo::data::UserInfo*>(
      ::apollo::data::UserInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026data/static_info.proto\022\013apollo.data\032\030c"
      "anbus/canbus_conf.proto\032\024canbus/chassis."
      "proto\032#common/configs/vehicle_config.pro"
      "to\032\032control/control_conf.proto\032\025routing/"
      "routing.proto\"\345\002\n\013VehicleInfo\022\014\n\004name\030\001 "
      "\001(\t\022-\n\005brand\030\002 \001(\0162\036.apollo.data.Vehicle"
      "Info.Brand\022-\n\005model\030\003 \001(\0162\036.apollo.data."
      "VehicleInfo.Model\022\'\n\007license\030\004 \001(\0132\026.apo"
      "llo.canbus.License\022.\n\013canbus_conf\030\005 \001(\0132"
      "\031.apollo.canbus.CanbusConf\0224\n\016vehicle_co"
      "nfig\030\006 \001(\0132\034.apollo.common.VehicleConfig"
      "\0223\n\016control_config\030\007 \001(\0132\033.apollo.contro"
      "l.ControlConf\"\024\n\005Brand\022\013\n\007LINCOLN\020\001\"\020\n\005M"
      "odel\022\007\n\003MKZ\020\001\"8\n\017EnvironmentInfo\022\020\n\010map_"
      "name\030\001 \001(\t\022\023\n\013temperature\030\002 \001(\002\"w\n\014Hardw"
      "areInfo\0227\n\007configs\030\001 \003(\0132&.apollo.data.H"
      "ardwareInfo.ConfigsEntry\032.\n\014ConfigsEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\356\001\n\014Sof"
      "twareInfo\022\024\n\014docker_image\030\001 \001(\t\022\021\n\tcommi"
      "t_id\030\002 \001(\t\022\014\n\004mode\030\003 \001(\t\0227\n\007configs\030\004 \003("
      "\0132&.apollo.data.SoftwareInfo.ConfigsEntr"
      "y\022>\n\026latest_routing_request\030\005 \001(\0132\036.apol"
      "lo.routing.RoutingRequest\032.\n\014ConfigsEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"=\n\010Use"
      "rInfo\022\016\n\006entity\030\001 \001(\t\022\016\n\006driver\030\002 \001(\t\022\021\n"
      "\tco_driver\030\003 \001(\t\"\351\001\n\nStaticInfo\022)\n\007vehic"
      "le\030\001 \001(\0132\030.apollo.data.VehicleInfo\0221\n\013en"
      "vironment\030\002 \001(\0132\034.apollo.data.Environmen"
      "tInfo\022+\n\010hardware\030\003 \001(\0132\031.apollo.data.Ha"
      "rdwareInfo\022+\n\010software\030\004 \001(\0132\031.apollo.da"
      "ta.SoftwareInfo\022#\n\004user\030\005 \001(\0132\025.apollo.d"
      "ata.UserInfo\"D\n\016StaticInfoConf\022\030\n\020hardwa"
      "re_configs\030\001 \003(\t\022\030\n\020software_configs\030\002 \003"
      "(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data/static_info.proto", &protobuf_RegisterTypes);
  ::apollo::canbus::protobuf_canbus_2fcanbus_5fconf_2eproto::AddDescriptors();
  ::apollo::canbus::protobuf_canbus_2fchassis_2eproto::AddDescriptors();
  ::apollo::common::protobuf_common_2fconfigs_2fvehicle_5fconfig_2eproto::AddDescriptors();
  ::apollo::control::protobuf_control_2fcontrol_5fconf_2eproto::AddDescriptors();
  ::apollo::routing::protobuf_routing_2frouting_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_data_2fstatic_5finfo_2eproto

const ::google::protobuf::EnumDescriptor* VehicleInfo_Brand_descriptor() {
  protobuf_data_2fstatic_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2fstatic_5finfo_2eproto::file_level_enum_descriptors[0];
}
bool VehicleInfo_Brand_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VehicleInfo_Brand VehicleInfo::LINCOLN;
const VehicleInfo_Brand VehicleInfo::Brand_MIN;
const VehicleInfo_Brand VehicleInfo::Brand_MAX;
const int VehicleInfo::Brand_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* VehicleInfo_Model_descriptor() {
  protobuf_data_2fstatic_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2fstatic_5finfo_2eproto::file_level_enum_descriptors[1];
}
bool VehicleInfo_Model_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VehicleInfo_Model VehicleInfo::MKZ;
const VehicleInfo_Model VehicleInfo::Model_MIN;
const VehicleInfo_Model VehicleInfo::Model_MAX;
const int VehicleInfo::Model_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleInfo::kNameFieldNumber;
const int VehicleInfo::kBrandFieldNumber;
const int VehicleInfo::kModelFieldNumber;
const int VehicleInfo::kLicenseFieldNumber;
const int VehicleInfo::kCanbusConfFieldNumber;
const int VehicleInfo::kVehicleConfigFieldNumber;
const int VehicleInfo::kControlConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleInfo::VehicleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2fstatic_5finfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.data.VehicleInfo)
}
VehicleInfo::VehicleInfo(const VehicleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_license()) {
    license_ = new ::apollo::canbus::License(*from.license_);
  } else {
    license_ = NULL;
  }
  if (from.has_canbus_conf()) {
    canbus_conf_ = new ::apollo::canbus::CanbusConf(*from.canbus_conf_);
  } else {
    canbus_conf_ = NULL;
  }
  if (from.has_vehicle_config()) {
    vehicle_config_ = new ::apollo::common::VehicleConfig(*from.vehicle_config_);
  } else {
    vehicle_config_ = NULL;
  }
  if (from.has_control_config()) {
    control_config_ = new ::apollo::control::ControlConf(*from.control_config_);
  } else {
    control_config_ = NULL;
  }
  ::memcpy(&brand_, &from.brand_,
    reinterpret_cast<char*>(&model_) -
    reinterpret_cast<char*>(&brand_) + sizeof(model_));
  // @@protoc_insertion_point(copy_constructor:apollo.data.VehicleInfo)
}

void VehicleInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&license_, 0, reinterpret_cast<char*>(&control_config_) -
    reinterpret_cast<char*>(&license_) + sizeof(control_config_));
  brand_ = 1;
  model_ = 1;
}

VehicleInfo::~VehicleInfo() {
  // @@protoc_insertion_point(destructor:apollo.data.VehicleInfo)
  SharedDtor();
}

void VehicleInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete license_;
  }
  if (this != internal_default_instance()) {
    delete canbus_conf_;
  }
  if (this != internal_default_instance()) {
    delete vehicle_config_;
  }
  if (this != internal_default_instance()) {
    delete control_config_;
  }
}

void VehicleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VehicleInfo::descriptor() {
  protobuf_data_2fstatic_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2fstatic_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleInfo& VehicleInfo::default_instance() {
  protobuf_data_2fstatic_5finfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleInfo* VehicleInfo::New(::google::protobuf::Arena* arena) const {
  VehicleInfo* n = new VehicleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.data.VehicleInfo)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_license()) {
      GOOGLE_DCHECK(license_ != NULL);
      license_->::apollo::canbus::License::Clear();
    }
    if (has_canbus_conf()) {
      GOOGLE_DCHECK(canbus_conf_ != NULL);
      canbus_conf_->::apollo::canbus::CanbusConf::Clear();
    }
    if (has_vehicle_config()) {
      GOOGLE_DCHECK(vehicle_config_ != NULL);
      vehicle_config_->::apollo::common::VehicleConfig::Clear();
    }
    if (has_control_config()) {
      GOOGLE_DCHECK(control_config_ != NULL);
      control_config_->::apollo::control::ControlConf::Clear();
    }
    brand_ = 1;
    model_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.data.VehicleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.data.VehicleInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.data.VehicleInfo.Brand brand = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::data::VehicleInfo_Brand_IsValid(value)) {
            set_brand(static_cast< ::apollo::data::VehicleInfo_Brand >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.data.VehicleInfo.Model model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::data::VehicleInfo_Model_IsValid(value)) {
            set_model(static_cast< ::apollo::data::VehicleInfo_Model >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.License license = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_license()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.CanbusConf canbus_conf = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_canbus_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.common.VehicleConfig vehicle_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vehicle_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.control.ControlConf control_config = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_control_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto s.oess;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
s.oess:
  // @@protoc_insertion_point(parse_s.oess:apollo.data.VehicleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.data.VehicleInfo)
  return false;
#undef DO_
}

void VehicleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.data.VehicleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.data.VehicleInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .apollo.data.VehicleInfo.Brand brand = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->brand(), output);
  }

  // optional .apollo.data.VehicleInfo.Model model = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->model(), output);
  }

  // optional .apollo.canbus.License license = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->license_, output);
  }

  // optional .apollo.canbus.CanbusConf canbus_conf = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->canbus_conf_, output);
  }

  // optional .apollo.common.VehicleConfig vehicle_config = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->vehicle_config_, output);
  }

  // optional .apollo.control.ControlConf control_config = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->control_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.data.VehicleInfo)
}

::google::protobuf::uint8* VehicleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.data.VehicleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.data.VehicleInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .apollo.data.VehicleInfo.Brand brand = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->brand(), target);
  }

  // optional .apollo.data.VehicleInfo.Model model = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->model(), target);
  }

  // optional .apollo.canbus.License license = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->license_, deterministic, target);
  }

  // optional .apollo.canbus.CanbusConf canbus_conf = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->canbus_conf_, deterministic, target);
  }

  // optional .apollo.common.VehicleConfig vehicle_config = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->vehicle_config_, deterministic, target);
  }

  // optional .apollo.control.ControlConf control_config = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->control_config_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.data.VehicleInfo)
  return target;
}

size_t VehicleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.data.VehicleInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .apollo.canbus.License license = 4;
    if (has_license()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->license_);
    }

    // optional .apollo.canbus.CanbusConf canbus_conf = 5;
    if (has_canbus_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->canbus_conf_);
    }

    // optional .apollo.common.VehicleConfig vehicle_config = 6;
    if (has_vehicle_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->vehicle_config_);
    }

    // optional .apollo.control.ControlConf control_config = 7;
    if (has_control_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->control_config_);
    }

    // optional .apollo.data.VehicleInfo.Brand brand = 2;
    if (has_brand()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brand());
    }

