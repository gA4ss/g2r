// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/network_layers.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "prediction/network_layers.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {

namespace {

const ::google::protobuf::Descriptor* TensorParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* DenseParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DenseParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* BatchNormalizationParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BatchNormalizationParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* LSTMParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LSTMParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivationParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivationParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* FlattenParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FlattenParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConcatenateParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConcatenateParameter_reflection_ = NULL;
const ::google::protobuf::Descriptor* LayerParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LayerParameter_reflection_ = NULL;
struct LayerParameterOneofInstance {
  const ::apollo::prediction::InputParameter* input_;
  const ::apollo::prediction::ActivationParameter* activation_;
  const ::apollo::prediction::DenseParameter* dense_;
  const ::apollo::prediction::BatchNormalizationParameter* batch_normalization_;
  const ::apollo::prediction::LSTMParameter* lstm_;
  const ::apollo::prediction::FlattenParameter* flatten_;
  const ::apollo::prediction::ConcatenateParameter* concatenate_;
}* LayerParameter_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_prediction_2fnetwork_5flayers_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_prediction_2fnetwork_5flayers_2eproto() {
  protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "prediction/network_layers.proto");
  GOOGLE_CHECK(file != NULL);
  TensorParameter_descriptor_ = file->message_type(0);
  static const int TensorParameter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, shape_),
  };
  TensorParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TensorParameter_descriptor_,
      TensorParameter::default_instance_,
      TensorParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(TensorParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, _internal_metadata_),
      -1);
  InputParameter_descriptor_ = file->message_type(1);
  static const int InputParameter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, input_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, dtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, sparse_),
  };
  InputParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InputParameter_descriptor_,
      InputParameter::default_instance_,
      InputParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(InputParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, _internal_metadata_),
      -1);
  DenseParameter_descriptor_ = file->message_type(2);
  static const int DenseParameter_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, units_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, activation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, use_bias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, weights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, bias_),
  };
  DenseParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DenseParameter_descriptor_,
      DenseParameter::default_instance_,
      DenseParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(DenseParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, _internal_metadata_),
      -1);
  BatchNormalizationParameter_descriptor_ = file->message_type(3);
  static const int BatchNormalizationParameter_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, epsilon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, center_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, momentum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, mu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, sigma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, gamma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, beta_),
  };
  BatchNormalizationParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BatchNormalizationParameter_descriptor_,
      BatchNormalizationParameter::default_instance_,
      BatchNormalizationParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(BatchNormalizationParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, _internal_metadata_),
      -1);
  LSTMParameter_descriptor_ = file->message_type(4);
  static const int LSTMParameter_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, units_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, return_sequences_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, stateful_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, activation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_activation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, use_bias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, unit_forget_bias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, go_backwards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, unroll_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, implementation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_forget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_cell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_forget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_cell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_forget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_cell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_output_),
  };
  LSTMParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LSTMParameter_descriptor_,
      LSTMParameter::default_instance_,
      LSTMParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(LSTMParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, _internal_metadata_),
      -1);
  ActivationParameter_descriptor_ = file->message_type(5);
  static const int ActivationParameter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivationParameter, activation_),
  };
  ActivationParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActivationParameter_descriptor_,
      ActivationParameter::default_instance_,
      ActivationParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivationParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(ActivationParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivationParameter, _internal_metadata_),
      -1);
  FlattenParameter_descriptor_ = file->message_type(6);
  static const int FlattenParameter_offsets_[1] = {
  };
  FlattenParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FlattenParameter_descriptor_,
      FlattenParameter::default_instance_,
      FlattenParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlattenParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(FlattenParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlattenParameter, _internal_metadata_),
      -1);
  ConcatenateParameter_descriptor_ = file->message_type(7);
  static const int ConcatenateParameter_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcatenateParameter, axis_),
  };
  ConcatenateParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConcatenateParameter_descriptor_,
      ConcatenateParameter::default_instance_,
      ConcatenateParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcatenateParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(ConcatenateParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcatenateParameter, _internal_metadata_),
      -1);
  LayerParameter_descriptor_ = file->message_type(8);
  static const int LayerParameter_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, order_number_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, input_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, activation_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, dense_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, batch_normalization_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, lstm_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, flatten_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(LayerParameter_default_oneof_instance_, concatenate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, oneof_layers_),
  };
  LayerParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LayerParameter_descriptor_,
      LayerParameter::default_instance_,
      LayerParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, _has_bits_[0]),
      -1,
      -1,
      LayerParameter_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, _oneof_case_[0]),
      sizeof(LayerParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_prediction_2fnetwork_5flayers_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TensorParameter_descriptor_, &TensorParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InputParameter_descriptor_, &InputParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DenseParameter_descriptor_, &DenseParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BatchNormalizationParameter_descriptor_, &BatchNormalizationParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LSTMParameter_descriptor_, &LSTMParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActivationParameter_descriptor_, &ActivationParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FlattenParameter_descriptor_, &FlattenParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConcatenateParameter_descriptor_, &ConcatenateParameter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LayerParameter_descriptor_, &LayerParameter::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_prediction_2fnetwork_5flayers_2eproto() {
  delete TensorParameter::default_instance_;
  delete TensorParameter_reflection_;
  delete InputParameter::default_instance_;
  delete InputParameter_reflection_;
  delete DenseParameter::default_instance_;
  delete DenseParameter_reflection_;
  delete BatchNormalizationParameter::default_instance_;
  delete BatchNormalizationParameter_reflection_;
  delete LSTMParameter::default_instance_;
  delete LSTMParameter_reflection_;
  delete ActivationParameter::default_instance_;
  delete ActivationParameter_reflection_;
  delete FlattenParameter::default_instance_;
  delete FlattenParameter_reflection_;
  delete ConcatenateParameter::default_instance_;
  delete ConcatenateParameter_reflection_;
  delete LayerParameter::default_instance_;
  delete LayerParameter_default_oneof_instance_;
  delete LayerParameter_reflection_;
}

void protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037prediction/network_layers.proto\022\021apoll"
    "o.prediction\"2\n\017TensorParameter\022\020\n\004data\030"
    "\001 \003(\002B\002\020\001\022\r\n\005shape\030\002 \003(\005\"D\n\016InputParamet"
    "er\022\023\n\013input_shape\030\001 \003(\005\022\r\n\005dtype\030\002 \001(\t\022\016"
    "\n\006sparse\030\003 \001(\010\"\254\001\n\016DenseParameter\022\r\n\005uni"
    "ts\030\001 \001(\005\022\022\n\nactivation\030\002 \001(\t\022\020\n\010use_bias"
    "\030\003 \001(\010\0223\n\007weights\030\004 \001(\0132\".apollo.predict"
    "ion.TensorParameter\0220\n\004bias\030\005 \001(\0132\".apol"
    "lo.prediction.TensorParameter\"\274\002\n\033BatchN"
    "ormalizationParameter\022\026\n\007epsilon\030\001 \001(\001:\005"
    "1e-05\022\014\n\004axis\030\002 \001(\005\022\016\n\006center\030\003 \001(\010\022\r\n\005s"
    "cale\030\004 \001(\010\022\020\n\010momentum\030\005 \001(\002\022.\n\002mu\030\006 \001(\013"
    "2\".apollo.prediction.TensorParameter\0221\n\005"
    "sigma\030\007 \001(\0132\".apollo.prediction.TensorPa"
    "rameter\0221\n\005gamma\030\010 \001(\0132\".apollo.predicti"
    "on.TensorParameter\0220\n\004beta\030\t \001(\0132\".apoll"
    "o.prediction.TensorParameter\"\340\007\n\rLSTMPar"
    "ameter\022\r\n\005units\030\001 \001(\005\022\030\n\020return_sequence"
    "s\030\002 \001(\010\022\020\n\010stateful\030\003 \001(\010\022\022\n\nactivation\030"
    "\004 \001(\t\022\034\n\024recurrent_activation\030\005 \001(\t\022\020\n\010u"
    "se_bias\030\006 \001(\010\022\036\n\020unit_forget_bias\030\007 \001(\010:"
    "\004true\022\033\n\014go_backwards\030\010 \001(\010:\005false\022\025\n\006un"
    "roll\030\t \001(\010:\005false\022\031\n\016implementation\030\n \001("
    "\005:\0010\0229\n\rweights_input\030\017 \001(\0132\".apollo.pre"
    "diction.TensorParameter\022:\n\016weights_forge"
    "t\030\020 \001(\0132\".apollo.prediction.TensorParame"
    "ter\0228\n\014weights_cell\030\021 \001(\0132\".apollo.predi"
    "ction.TensorParameter\022:\n\016weights_output\030"
    "\022 \001(\0132\".apollo.prediction.TensorParamete"
    "r\0226\n\nbias_input\030\023 \001(\0132\".apollo.predictio"
    "n.TensorParameter\0227\n\013bias_forget\030\024 \001(\0132\""
    ".apollo.prediction.TensorParameter\0225\n\tbi"
    "as_cell\030\025 \001(\0132\".apollo.prediction.Tensor"
    "Parameter\0227\n\013bias_output\030\026 \001(\0132\".apollo."
    "prediction.TensorParameter\022C\n\027recurrent_"
    "weights_input\030\031 \001(\0132\".apollo.prediction."
    "TensorParameter\022D\n\030recurrent_weights_for"
    "get\030\032 \001(\0132\".apollo.prediction.TensorPara"
    "meter\022B\n\026recurrent_weights_cell\030\033 \001(\0132\"."
    "apollo.prediction.TensorParameter\022D\n\030rec"
    "urrent_weights_output\030\034 \001(\0132\".apollo.pre"
    "diction.TensorParameter\")\n\023ActivationPar"
    "ameter\022\022\n\nactivation\030\001 \001(\t\"\022\n\020FlattenPar"
    "ameter\"$\n\024ConcatenateParameter\022\014\n\004axis\030\001"
    " \001(\005\"\361\003\n\016LayerParameter\022\014\n\004type\030\001 \001(\t\022\014\n"
    "\004name\030\002 \001(\t\022\024\n\014order_number\030\003 \001(\005\0222\n\005inp"
    "ut\030\004 \001(\0132!.apollo.prediction.InputParame"
    "terH\000\022<\n\nactivation\030\005 \001(\0132&.apollo.predi"
    "ction.ActivationParameterH\000\0222\n\005dense\030\006 \001"
    "(\0132!.apollo.prediction.DenseParameterH\000\022"
    "M\n\023batch_normalization\030\007 \001(\0132..apollo.pr"
    "ediction.BatchNormalizationParameterH\000\0220"
    "\n\004lstm\030\010 \001(\0132 .apollo.prediction.LSTMPar"
    "ameterH\000\0226\n\007flatten\030\t \001(\0132#.apollo.predi"
    "ction.FlattenParameterH\000\022>\n\013concatenate\030"
    "\n \001(\0132\'.apollo.prediction.ConcatenatePar"
    "ameterH\000B\016\n\014oneof_layers", 2264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prediction/network_layers.proto", &protobuf_RegisterTypes);
  TensorParameter::default_instance_ = new TensorParameter();
  InputParameter::default_instance_ = new InputParameter();
  DenseParameter::default_instance_ = new DenseParameter();
  BatchNormalizationParameter::default_instance_ = new BatchNormalizationParameter();
  LSTMParameter::default_instance_ = new LSTMParameter();
  ActivationParameter::default_instance_ = new ActivationParameter();
  FlattenParameter::default_instance_ = new FlattenParameter();
  ConcatenateParameter::default_instance_ = new ConcatenateParameter();
  LayerParameter::default_instance_ = new LayerParameter();
  LayerParameter_default_oneof_instance_ = new LayerParameterOneofInstance();
  TensorParameter::default_instance_->InitAsDefaultInstance();
  InputParameter::default_instance_->InitAsDefaultInstance();
  DenseParameter::default_instance_->InitAsDefaultInstance();
  BatchNormalizationParameter::default_instance_->InitAsDefaultInstance();
  LSTMParameter::default_instance_->InitAsDefaultInstance();
  ActivationParameter::default_instance_->InitAsDefaultInstance();
  FlattenParameter::default_instance_->InitAsDefaultInstance();
  ConcatenateParameter::default_instance_->InitAsDefaultInstance();
  LayerParameter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_prediction_2fnetwork_5flayers_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_prediction_2fnetwork_5flayers_2eproto {
  StaticDescriptorInitializer_prediction_2fnetwork_5flayers_2eproto() {
    protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  }
} static_descriptor_initializer_prediction_2fnetwork_5flayers_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorParameter::kDataFieldNumber;
const int TensorParameter::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorParameter::TensorParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.TensorParameter)
}

void TensorParameter::InitAsDefaultInstance() {
}

TensorParameter::TensorParameter(const TensorParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TensorParameter)
}

void TensorParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TensorParameter::~TensorParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TensorParameter)
  SharedDtor();
}

void TensorParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TensorParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorParameter_descriptor_;
}

const TensorParameter& TensorParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

TensorParameter* TensorParameter::default_instance_ = NULL;

TensorParameter* TensorParameter::New(::google::protobuf::Arena* arena) const {
  TensorParameter* n = new TensorParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TensorParameter)
  data_.Clear();
  shape_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TensorParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.TensorParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float data = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_shape;
        break;
      }

      // repeated int32 shape = 2;
      case 2: {
        if (tag == 16) {
         parse_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_shape())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_shape;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.TensorParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.TensorParameter)
  return false;
#undef DO_
}

void TensorParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.TensorParameter)
  // repeated float data = 1 [packed = true];
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_cached_byte_size_);
  }
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->data(i), output);
  }

  // repeated int32 shape = 2;
  for (int i = 0; i < this->shape_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->shape(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.TensorParameter)
}

::google::protobuf::uint8* TensorParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TensorParameter)
  // repeated float data = 1 [packed = true];
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->data(i), target);
  }

  // repeated int32 shape = 2;
  for (int i = 0; i < this->shape_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->shape(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TensorParameter)
  return target;
}

int TensorParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TensorParameter)
  int total_size = 0;

  // repeated float data = 1 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->data_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 shape = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->shape_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->shape(i));
    }
    total_size += 1 * this->shape_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.TensorParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TensorParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.TensorParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.TensorParameter)
    MergeFrom(*source);
  }
}

void TensorParameter::MergeFrom(const TensorParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TensorParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  shape_.MergeFrom(from.shape_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TensorParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.TensorParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorParameter::CopyFrom(const TensorParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TensorParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorParameter::IsInitialized() const {

  return true;
}

void TensorParameter::Swap(TensorParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorParameter::InternalSwap(TensorParameter* other) {
  data_.UnsafeArenaSwap(&other->data_);
  shape_.UnsafeArenaSwap(&other->shape_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorParameter_descriptor_;
  metadata.reflection = TensorParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorParameter

// repeated float data = 1 [packed = true];
int TensorParameter::data_size() const {
  return data_.size();
}
void TensorParameter::clear_data() {
  data_.Clear();
}
 float TensorParameter::data(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TensorParameter.data)
  return data_.Get(index);
}
 void TensorParameter::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TensorParameter.data)
}
 void TensorParameter::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.TensorParameter.data)
}
 const ::google::protobuf::RepeatedField< float >&
TensorParameter::data() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.TensorParameter.data)
  return data_;
}
 ::google::protobuf::RepeatedField< float >*
TensorParameter::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.TensorParameter.data)
  return &data_;
}

// repeated int32 shape = 2;
int TensorParameter::shape_size() const {
  return shape_.size();
}
void TensorParameter::clear_shape() {
  shape_.Clear();
}
 ::google::protobuf::int32 TensorParameter::shape(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TensorParameter.shape)
  return shape_.Get(index);
}
 void TensorParameter::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TensorParameter.shape)
}
 void TensorParameter::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.TensorParameter.shape)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorParameter::shape() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.TensorParameter.shape)
  return shape_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorParameter::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.TensorParameter.shape)
  return &shape_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputParameter::kInputShapeFieldNumber;
const int InputParameter::kDtypeFieldNumber;
const int InputParameter::kSparseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputParameter::InputParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.InputParameter)
}

void InputParameter::InitAsDefaultInstance() {
}

InputParameter::InputParameter(const InputParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.InputParameter)
}

void InputParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sparse_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputParameter::~InputParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.InputParameter)
  SharedDtor();
}

void InputParameter::SharedDtor() {
  dtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InputParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputParameter_descriptor_;
}

const InputParameter& InputParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

InputParameter* InputParameter::default_instance_ = NULL;

InputParameter* InputParameter::New(::google::protobuf::Arena* arena) const {
  InputParameter* n = new InputParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.InputParameter)
  if (_has_bits_[0 / 32] & 6u) {
    if (has_dtype()) {
      dtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    sparse_ = false;
  }
  input_shape_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InputParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.InputParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 input_shape = 1;
      case 1: {
        if (tag == 8) {
         parse_input_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_input_shape())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_input_shape())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_input_shape;
        if (input->ExpectTag(18)) goto parse_dtype;
        break;
      }

      // optional string dtype = 2;
      case 2: {
        if (tag == 18) {
         parse_dtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dtype().data(), this->dtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.InputParameter.dtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sparse;
        break;
      }

      // optional bool sparse = 3;
      case 3: {
        if (tag == 24) {
         parse_sparse:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sparse_)));
          set_has_sparse();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.InputParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.InputParameter)
  return false;
#undef DO_
}

void InputParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.InputParameter)
  // repeated int32 input_shape = 1;
  for (int i = 0; i < this->input_shape_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->input_shape(i), output);
  }

  // optional string dtype = 2;
  if (has_dtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), this->dtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.InputParameter.dtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dtype(), output);
  }

  // optional bool sparse = 3;
  if (has_sparse()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sparse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.InputParameter)
}

::google::protobuf::uint8* InputParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.InputParameter)
  // repeated int32 input_shape = 1;
  for (int i = 0; i < this->input_shape_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->input_shape(i), target);
  }

  // optional string dtype = 2;
  if (has_dtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), this->dtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.InputParameter.dtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dtype(), target);
  }

  // optional bool sparse = 3;
  if (has_sparse()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sparse(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.InputParameter)
  return target;
}

int InputParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.InputParameter)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional string dtype = 2;
    if (has_dtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dtype());
    }

    // optional bool sparse = 3;
    if (has_sparse()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 input_shape = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->input_shape_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->input_shape(i));
    }
    total_size += 1 * this->input_shape_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.InputParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InputParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InputParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.InputParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.InputParameter)
    MergeFrom(*source);
  }
}

void InputParameter::MergeFrom(const InputParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.InputParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  input_shape_.MergeFrom(from.input_shape_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_dtype()) {
      set_has_dtype();
      dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
    }
    if (from.has_sparse()) {
      set_sparse(from.sparse());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InputParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.InputParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputParameter::CopyFrom(const InputParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.InputParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputParameter::IsInitialized() const {

  return true;
}

void InputParameter::Swap(InputParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputParameter::InternalSwap(InputParameter* other) {
  input_shape_.UnsafeArenaSwap(&other->input_shape_);
  dtype_.Swap(&other->dtype_);
  std::swap(sparse_, other->sparse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputParameter_descriptor_;
  metadata.reflection = InputParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputParameter

// repeated int32 input_shape = 1;
int InputParameter::input_shape_size() const {
  return input_shape_.size();
}
void InputParameter::clear_input_shape() {
  input_shape_.Clear();
}
 ::google::protobuf::int32 InputParameter::input_shape(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.InputParameter.input_shape)
  return input_shape_.Get(index);
}
 void InputParameter::set_input_shape(int index, ::google::protobuf::int32 value) {
  input_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.InputParameter.input_shape)
}
 void InputParameter::add_input_shape(::google::protobuf::int32 value) {
  input_shape_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.InputParameter.input_shape)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
InputParameter::input_shape() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.InputParameter.input_shape)
  return input_shape_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
InputParameter::mutable_input_shape() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.InputParameter.input_shape)
  return &input_shape_;
}

// optional string dtype = 2;
bool InputParameter::has_dtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputParameter::set_has_dtype() {
  _has_bits_[0] |= 0x00000002u;
}
void InputParameter::clear_has_dtype() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputParameter::clear_dtype() {
  dtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dtype();
}
 const ::std::string& InputParameter::dtype() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.InputParameter.dtype)
  return dtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputParameter::set_dtype(const ::std::string& value) {
  set_has_dtype();
  dtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.InputParameter.dtype)
}
 void InputParameter::set_dtype(const char* value) {
  set_has_dtype();
  dtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.InputParameter.dtype)
}
 void InputParameter::set_dtype(const char* value, size_t size) {
  set_has_dtype();
  dtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.InputParameter.dtype)
}
 ::std::string* InputParameter::mutable_dtype() {
  set_has_dtype();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.InputParameter.dtype)
  return dtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputParameter::release_dtype() {
  // @@protoc_insertion_point(field_release:apollo.prediction.InputParameter.dtype)
  clear_has_dtype();
  return dtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputParameter::set_allocated_dtype(::std::string* dtype) {
  if (dtype != NULL) {
    set_has_dtype();
  } else {
    clear_has_dtype();
  }
  dtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dtype);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.InputParameter.dtype)
}

// optional bool sparse = 3;
bool InputParameter::has_sparse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InputParameter::set_has_sparse() {
  _has_bits_[0] |= 0x00000004u;
}
void InputParameter::clear_has_sparse() {
  _has_bits_[0] &= ~0x00000004u;
}
void InputParameter::clear_sparse() {
  sparse_ = false;
  clear_has_sparse();
}
 bool InputParameter::sparse() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.InputParameter.sparse)
  return sparse_;
}
 void InputParameter::set_sparse(bool value) {
  set_has_sparse();
  sparse_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.InputParameter.sparse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseParameter::kUnitsFieldNumber;
const int DenseParameter::kActivationFieldNumber;
const int DenseParameter::kUseBiasFieldNumber;
const int DenseParameter::kWeightsFieldNumber;
const int DenseParameter::kBiasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseParameter::DenseParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.DenseParameter)
}

void DenseParameter::InitAsDefaultInstance() {
  weights_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  bias_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
}

DenseParameter::DenseParameter(const DenseParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.DenseParameter)
}

void DenseParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  units_ = 0;
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_bias_ = false;
  weights_ = NULL;
  bias_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DenseParameter::~DenseParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.DenseParameter)
  SharedDtor();
}

void DenseParameter::SharedDtor() {
  activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete weights_;
    delete bias_;
  }
}

void DenseParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DenseParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DenseParameter_descriptor_;
}

const DenseParameter& DenseParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

DenseParameter* DenseParameter::default_instance_ = NULL;

DenseParameter* DenseParameter::New(::google::protobuf::Arena* arena) const {
  DenseParameter* n = new DenseParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DenseParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.DenseParameter)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DenseParameter, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DenseParameter*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(units_, use_bias_);
    if (has_activation()) {
      activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_weights()) {
      if (weights_ != NULL) weights_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias()) {
      if (bias_ != NULL) bias_->::apollo::prediction::TensorParameter::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DenseParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.DenseParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 units = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
          set_has_units();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_activation;
        break;
      }

      // optional string activation = 2;
      case 2: {
        if (tag == 18) {
         parse_activation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation().data(), this->activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.DenseParameter.activation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_use_bias;
        break;
      }

      // optional bool use_bias = 3;
      case 3: {
        if (tag == 24) {
         parse_use_bias:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_bias_)));
          set_has_use_bias();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_weights;
        break;
      }

      // optional .apollo.prediction.TensorParameter weights = 4;
      case 4: {
        if (tag == 34) {
         parse_weights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bias;
        break;
      }

      // optional .apollo.prediction.TensorParameter bias = 5;
      case 5: {
        if (tag == 42) {
         parse_bias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.DenseParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.DenseParameter)
  return false;
#undef DO_
}

void DenseParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.DenseParameter)
  // optional int32 units = 1;
  if (has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->units(), output);
  }

  // optional string activation = 2;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.DenseParameter.activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->activation(), output);
  }

  // optional bool use_bias = 3;
  if (has_use_bias()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_bias(), output);
  }

  // optional .apollo.prediction.TensorParameter weights = 4;
  if (has_weights()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->weights_, output);
  }

  // optional .apollo.prediction.TensorParameter bias = 5;
  if (has_bias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->bias_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.DenseParameter)
}

::google::protobuf::uint8* DenseParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.DenseParameter)
  // optional int32 units = 1;
  if (has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->units(), target);
  }

  // optional string activation = 2;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.DenseParameter.activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->activation(), target);
  }

  // optional bool use_bias = 3;
  if (has_use_bias()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_bias(), target);
  }

  // optional .apollo.prediction.TensorParameter weights = 4;
  if (has_weights()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->weights_, false, target);
  }

  // optional .apollo.prediction.TensorParameter bias = 5;
  if (has_bias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->bias_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.DenseParameter)
  return target;
}

int DenseParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.DenseParameter)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

    // optional string activation = 2;
    if (has_activation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activation());
    }

    // optional bool use_bias = 3;
    if (has_use_bias()) {
      total_size += 1 + 1;
    }

    // optional .apollo.prediction.TensorParameter weights = 4;
    if (has_weights()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_);
    }

    // optional .apollo.prediction.TensorParameter bias = 5;
    if (has_bias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DenseParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.DenseParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DenseParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.DenseParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.DenseParameter)
    MergeFrom(*source);
  }
}

void DenseParameter::MergeFrom(const DenseParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.DenseParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_units()) {
      set_units(from.units());
    }
    if (from.has_activation()) {
      set_has_activation();
      activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
    }
    if (from.has_use_bias()) {
      set_use_bias(from.use_bias());
    }
    if (from.has_weights()) {
      mutable_weights()->::apollo::prediction::TensorParameter::MergeFrom(from.weights());
    }
    if (from.has_bias()) {
      mutable_bias()->::apollo::prediction::TensorParameter::MergeFrom(from.bias());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DenseParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.DenseParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseParameter::CopyFrom(const DenseParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.DenseParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseParameter::IsInitialized() const {

  return true;
}

void DenseParameter::Swap(DenseParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseParameter::InternalSwap(DenseParameter* other) {
  std::swap(units_, other->units_);
  activation_.Swap(&other->activation_);
  std::swap(use_bias_, other->use_bias_);
  std::swap(weights_, other->weights_);
  std::swap(bias_, other->bias_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DenseParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DenseParameter_descriptor_;
  metadata.reflection = DenseParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DenseParameter

// optional int32 units = 1;
bool DenseParameter::has_units() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DenseParameter::set_has_units() {
  _has_bits_[0] |= 0x00000001u;
}
void DenseParameter::clear_has_units() {
  _has_bits_[0] &= ~0x00000001u;
}
void DenseParameter::clear_units() {
  units_ = 0;
  clear_has_units();
}
 ::google::protobuf::int32 DenseParameter::units() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.units)
  return units_;
}
 void DenseParameter::set_units(::google::protobuf::int32 value) {
  set_has_units();
  units_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DenseParameter.units)
}

// optional string activation = 2;
bool DenseParameter::has_activation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DenseParameter::set_has_activation() {
  _has_bits_[0] |= 0x00000002u;
}
void DenseParameter::clear_has_activation() {
  _has_bits_[0] &= ~0x00000002u;
}
void DenseParameter::clear_activation() {
  activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activation();
}
 const ::std::string& DenseParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.activation)
  return activation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DenseParameter::set_activation(const ::std::string& value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DenseParameter.activation)
}
 void DenseParameter::set_activation(const char* value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DenseParameter.activation)
}
 void DenseParameter::set_activation(const char* value, size_t size) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DenseParameter.activation)
}
 ::std::string* DenseParameter::mutable_activation() {
  set_has_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DenseParameter.activation)
  return activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DenseParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DenseParameter.activation)
  clear_has_activation();
  return activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DenseParameter::set_allocated_activation(::std::string* activation) {
  if (activation != NULL) {
    set_has_activation();
  } else {
    clear_has_activation();
  }
  activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DenseParameter.activation)
}

// optional bool use_bias = 3;
bool DenseParameter::has_use_bias() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DenseParameter::set_has_use_bias() {
  _has_bits_[0] |= 0x00000004u;
}
void DenseParameter::clear_has_use_bias() {
  _has_bits_[0] &= ~0x00000004u;
}
void DenseParameter::clear_use_bias() {
  use_bias_ = false;
  clear_has_use_bias();
}
 bool DenseParameter::use_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.use_bias)
  return use_bias_;
}
 void DenseParameter::set_use_bias(bool value) {
  set_has_use_bias();
  use_bias_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DenseParameter.use_bias)
}

// optional .apollo.prediction.TensorParameter weights = 4;
bool DenseParameter::has_weights() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DenseParameter::set_has_weights() {
  _has_bits_[0] |= 0x00000008u;
}
void DenseParameter::clear_has_weights() {
  _has_bits_[0] &= ~0x00000008u;
}
void DenseParameter::clear_weights() {
  if (weights_ != NULL) weights_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights();
}
const ::apollo::prediction::TensorParameter& DenseParameter::weights() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.weights)
  return weights_ != NULL ? *weights_ : *default_instance_->weights_;
}
::apollo::prediction::TensorParameter* DenseParameter::mutable_weights() {
  set_has_weights();
  if (weights_ == NULL) {
    weights_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DenseParameter.weights)
  return weights_;
}
::apollo::prediction::TensorParameter* DenseParameter::release_weights() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DenseParameter.weights)
  clear_has_weights();
  ::apollo::prediction::TensorParameter* temp = weights_;
  weights_ = NULL;
  return temp;
}
void DenseParameter::set_allocated_weights(::apollo::prediction::TensorParameter* weights) {
  delete weights_;
  weights_ = weights;
  if (weights) {
    set_has_weights();
  } else {
    clear_has_weights();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DenseParameter.weights)
}

// optional .apollo.prediction.TensorParameter bias = 5;
bool DenseParameter::has_bias() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DenseParameter::set_has_bias() {
  _has_bits_[0] |= 0x00000010u;
}
void DenseParameter::clear_has_bias() {
  _has_bits_[0] &= ~0x00000010u;
}
void DenseParameter::clear_bias() {
  if (bias_ != NULL) bias_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias();
}
const ::apollo::prediction::TensorParameter& DenseParameter::bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.bias)
  return bias_ != NULL ? *bias_ : *default_instance_->bias_;
}
::apollo::prediction::TensorParameter* DenseParameter::mutable_bias() {
  set_has_bias();
  if (bias_ == NULL) {
    bias_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DenseParameter.bias)
  return bias_;
}
::apollo::prediction::TensorParameter* DenseParameter::release_bias() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DenseParameter.bias)
  clear_has_bias();
  ::apollo::prediction::TensorParameter* temp = bias_;
  bias_ = NULL;
  return temp;
}
void DenseParameter::set_allocated_bias(::apollo::prediction::TensorParameter* bias) {
  delete bias_;
  bias_ = bias;
  if (bias) {
    set_has_bias();
  } else {
    clear_has_bias();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DenseParameter.bias)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchNormalizationParameter::kEpsilonFieldNumber;
const int BatchNormalizationParameter::kAxisFieldNumber;
const int BatchNormalizationParameter::kCenterFieldNumber;
const int BatchNormalizationParameter::kScaleFieldNumber;
const int BatchNormalizationParameter::kMomentumFieldNumber;
const int BatchNormalizationParameter::kMuFieldNumber;
const int BatchNormalizationParameter::kSigmaFieldNumber;
const int BatchNormalizationParameter::kGammaFieldNumber;
const int BatchNormalizationParameter::kBetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchNormalizationParameter::BatchNormalizationParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.BatchNormalizationParameter)
}

void BatchNormalizationParameter::InitAsDefaultInstance() {
  mu_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  sigma_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  gamma_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  beta_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
}

BatchNormalizationParameter::BatchNormalizationParameter(const BatchNormalizationParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.BatchNormalizationParameter)
}

void BatchNormalizationParameter::SharedCtor() {
  _cached_size_ = 0;
  epsilon_ = 1e-05;
  axis_ = 0;
  center_ = false;
  scale_ = false;
  momentum_ = 0;
  mu_ = NULL;
  sigma_ = NULL;
  gamma_ = NULL;
  beta_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BatchNormalizationParameter::~BatchNormalizationParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.BatchNormalizationParameter)
  SharedDtor();
}

void BatchNormalizationParameter::SharedDtor() {
  if (this != default_instance_) {
    delete mu_;
    delete sigma_;
    delete gamma_;
    delete beta_;
  }
}

void BatchNormalizationParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchNormalizationParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchNormalizationParameter_descriptor_;
}

const BatchNormalizationParameter& BatchNormalizationParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

BatchNormalizationParameter* BatchNormalizationParameter::default_instance_ = NULL;

BatchNormalizationParameter* BatchNormalizationParameter::New(::google::protobuf::Arena* arena) const {
  BatchNormalizationParameter* n = new BatchNormalizationParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchNormalizationParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.BatchNormalizationParameter)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BatchNormalizationParameter, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BatchNormalizationParameter*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(axis_, scale_);
    epsilon_ = 1e-05;
    momentum_ = 0;
    if (has_mu()) {
      if (mu_ != NULL) mu_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_sigma()) {
      if (sigma_ != NULL) sigma_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_gamma()) {
      if (gamma_ != NULL) gamma_->::apollo::prediction::TensorParameter::Clear();
    }
  }
  if (has_beta()) {
    if (beta_ != NULL) beta_->::apollo::prediction::TensorParameter::Clear();
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BatchNormalizationParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.BatchNormalizationParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double epsilon = 1 [default = 1e-05];
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &epsilon_)));
          set_has_epsilon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_axis;
        break;
      }

      // optional int32 axis = 2;
      case 2: {
        if (tag == 16) {
         parse_axis:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &axis_)));
          set_has_axis();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_center;
        break;
      }

      // optional bool center = 3;
      case 3: {
        if (tag == 24) {
         parse_center:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &center_)));
          set_has_center();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_scale;
        break;
      }

      // optional bool scale = 4;
      case 4: {
        if (tag == 32) {
         parse_scale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scale_)));
          set_has_scale();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_momentum;
        break;
      }

      // optional float momentum = 5;
      case 5: {
        if (tag == 45) {
         parse_momentum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_)));
          set_has_momentum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mu;
        break;
      }

      // optional .apollo.prediction.TensorParameter mu = 6;
      case 6: {
        if (tag == 50) {
         parse_mu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sigma;
        break;
      }

      // optional .apollo.prediction.TensorParameter sigma = 7;
      case 7: {
        if (tag == 58) {
         parse_sigma:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sigma()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_gamma;
        break;
      }

      // optional .apollo.prediction.TensorParameter gamma = 8;
      case 8: {
        if (tag == 66) {
         parse_gamma:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamma()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_beta;
        break;
      }

      // optional .apollo.prediction.TensorParameter beta = 9;
      case 9: {
        if (tag == 74) {
         parse_beta:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_beta()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.BatchNormalizationParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.BatchNormalizationParameter)
  return false;
#undef DO_
}

void BatchNormalizationParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.BatchNormalizationParameter)
  // optional double epsilon = 1 [default = 1e-05];
  if (has_epsilon()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->epsilon(), output);
  }

  // optional int32 axis = 2;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->axis(), output);
  }

  // optional bool center = 3;
  if (has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->center(), output);
  }

  // optional bool scale = 4;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->scale(), output);
  }

  // optional float momentum = 5;
  if (has_momentum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->momentum(), output);
  }

  // optional .apollo.prediction.TensorParameter mu = 6;
  if (has_mu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->mu_, output);
  }

  // optional .apollo.prediction.TensorParameter sigma = 7;
  if (has_sigma()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->sigma_, output);
  }

  // optional .apollo.prediction.TensorParameter gamma = 8;
  if (has_gamma()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->gamma_, output);
  }

  // optional .apollo.prediction.TensorParameter beta = 9;
  if (has_beta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->beta_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.BatchNormalizationParameter)
}

::google::protobuf::uint8* BatchNormalizationParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.BatchNormalizationParameter)
  // optional double epsilon = 1 [default = 1e-05];
  if (has_epsilon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->epsilon(), target);
  }

  // optional int32 axis = 2;
  if (has_axis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->axis(), target);
  }

  // optional bool center = 3;
  if (has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->center(), target);
  }

  // optional bool scale = 4;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->scale(), target);
  }

  // optional float momentum = 5;
  if (has_momentum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->momentum(), target);
  }

  // optional .apollo.prediction.TensorParameter mu = 6;
  if (has_mu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->mu_, false, target);
  }

  // optional .apollo.prediction.TensorParameter sigma = 7;
  if (has_sigma()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->sigma_, false, target);
  }

  // optional .apollo.prediction.TensorParameter gamma = 8;
  if (has_gamma()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->gamma_, false, target);
  }

  // optional .apollo.prediction.TensorParameter beta = 9;
  if (has_beta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->beta_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.BatchNormalizationParameter)
  return target;
}

int BatchNormalizationParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.BatchNormalizationParameter)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional double epsilon = 1 [default = 1e-05];
    if (has_epsilon()) {
      total_size += 1 + 8;
    }

    // optional int32 axis = 2;
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->axis());
    }

    // optional bool center = 3;
    if (has_center()) {
      total_size += 1 + 1;
    }

    // optional bool scale = 4;
    if (has_scale()) {
      total_size += 1 + 1;
    }

    // optional float momentum = 5;
    if (has_momentum()) {
      total_size += 1 + 4;
    }

    // optional .apollo.prediction.TensorParameter mu = 6;
    if (has_mu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mu_);
    }

    // optional .apollo.prediction.TensorParameter sigma = 7;
    if (has_sigma()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sigma_);
    }

    // optional .apollo.prediction.TensorParameter gamma = 8;
    if (has_gamma()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamma_);
    }

  }
  // optional .apollo.prediction.TensorParameter beta = 9;
  if (has_beta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->beta_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchNormalizationParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.BatchNormalizationParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BatchNormalizationParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchNormalizationParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.BatchNormalizationParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.BatchNormalizationParameter)
    MergeFrom(*source);
  }
}

void BatchNormalizationParameter::MergeFrom(const BatchNormalizationParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.BatchNormalizationParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_epsilon()) {
      set_epsilon(from.epsilon());
    }
    if (from.has_axis()) {
      set_axis(from.axis());
    }
    if (from.has_center()) {
      set_center(from.center());
    }
    if (from.has_scale()) {
      set_scale(from.scale());
    }
    if (from.has_momentum()) {
      set_momentum(from.momentum());
    }
    if (from.has_mu()) {
      mutable_mu()->::apollo::prediction::TensorParameter::MergeFrom(from.mu());
    }
    if (from.has_sigma()) {
      mutable_sigma()->::apollo::prediction::TensorParameter::MergeFrom(from.sigma());
    }
    if (from.has_gamma()) {
      mutable_gamma()->::apollo::prediction::TensorParameter::MergeFrom(from.gamma());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_beta()) {
      mutable_beta()->::apollo::prediction::TensorParameter::MergeFrom(from.beta());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BatchNormalizationParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.BatchNormalizationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchNormalizationParameter::CopyFrom(const BatchNormalizationParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.BatchNormalizationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchNormalizationParameter::IsInitialized() const {

  return true;
}

void BatchNormalizationParameter::Swap(BatchNormalizationParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchNormalizationParameter::InternalSwap(BatchNormalizationParameter* other) {
  std::swap(epsilon_, other->epsilon_);
  std::swap(axis_, other->axis_);
  std::swap(center_, other->center_);
  std::swap(scale_, other->scale_);
  std::swap(momentum_, other->momentum_);
  std::swap(mu_, other->mu_);
  std::swap(sigma_, other->sigma_);
  std::swap(gamma_, other->gamma_);
  std::swap(beta_, other->beta_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchNormalizationParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BatchNormalizationParameter_descriptor_;
  metadata.reflection = BatchNormalizationParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchNormalizationParameter

// optional double epsilon = 1 [default = 1e-05];
bool BatchNormalizationParameter::has_epsilon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BatchNormalizationParameter::set_has_epsilon() {
  _has_bits_[0] |= 0x00000001u;
}
void BatchNormalizationParameter::clear_has_epsilon() {
  _has_bits_[0] &= ~0x00000001u;
}
void BatchNormalizationParameter::clear_epsilon() {
  epsilon_ = 1e-05;
  clear_has_epsilon();
}
 double BatchNormalizationParameter::epsilon() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.epsilon)
  return epsilon_;
}
 void BatchNormalizationParameter::set_epsilon(double value) {
  set_has_epsilon();
  epsilon_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.epsilon)
}

// optional int32 axis = 2;
bool BatchNormalizationParameter::has_axis() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BatchNormalizationParameter::set_has_axis() {
  _has_bits_[0] |= 0x00000002u;
}
void BatchNormalizationParameter::clear_has_axis() {
  _has_bits_[0] &= ~0x00000002u;
}
void BatchNormalizationParameter::clear_axis() {
  axis_ = 0;
  clear_has_axis();
}
 ::google::protobuf::int32 BatchNormalizationParameter::axis() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.axis)
  return axis_;
}
 void BatchNormalizationParameter::set_axis(::google::protobuf::int32 value) {
  set_has_axis();
  axis_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.axis)
}

// optional bool center = 3;
bool BatchNormalizationParameter::has_center() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BatchNormalizationParameter::set_has_center() {
  _has_bits_[0] |= 0x00000004u;
}
void BatchNormalizationParameter::clear_has_center() {
  _has_bits_[0] &= ~0x00000004u;
}
void BatchNormalizationParameter::clear_center() {
  center_ = false;
  clear_has_center();
}
 bool BatchNormalizationParameter::center() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.center)
  return center_;
}
 void BatchNormalizationParameter::set_center(bool value) {
  set_has_center();
  center_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.center)
}

// optional bool scale = 4;
bool BatchNormalizationParameter::has_scale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BatchNormalizationParameter::set_has_scale() {
  _has_bits_[0] |= 0x00000008u;
}
void BatchNormalizationParameter::clear_has_scale() {
  _has_bits_[0] &= ~0x00000008u;
}
void BatchNormalizationParameter::clear_scale() {
  scale_ = false;
  clear_has_scale();
}
 bool BatchNormalizationParameter::scale() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.scale)
  return scale_;
}
 void BatchNormalizationParameter::set_scale(bool value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.scale)
}

// optional float momentum = 5;
bool BatchNormalizationParameter::has_momentum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BatchNormalizationParameter::set_has_momentum() {
  _has_bits_[0] |= 0x00000010u;
}
void BatchNormalizationParameter::clear_has_momentum() {
  _has_bits_[0] &= ~0x00000010u;
}
void BatchNormalizationParameter::clear_momentum() {
  momentum_ = 0;
  clear_has_momentum();
}
 float BatchNormalizationParameter::momentum() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.momentum)
  return momentum_;
}
 void BatchNormalizationParameter::set_momentum(float value) {
  set_has_momentum();
  momentum_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.momentum)
}

// optional .apollo.prediction.TensorParameter mu = 6;
bool BatchNormalizationParameter::has_mu() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BatchNormalizationParameter::set_has_mu() {
  _has_bits_[0] |= 0x00000020u;
}
void BatchNormalizationParameter::clear_has_mu() {
  _has_bits_[0] &= ~0x00000020u;
}
void BatchNormalizationParameter::clear_mu() {
  if (mu_ != NULL) mu_->::apollo::prediction::TensorParameter::Clear();
  clear_has_mu();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::mu() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.mu)
  return mu_ != NULL ? *mu_ : *default_instance_->mu_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_mu() {
  set_has_mu();
  if (mu_ == NULL) {
    mu_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.mu)
  return mu_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_mu() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.mu)
  clear_has_mu();
  ::apollo::prediction::TensorParameter* temp = mu_;
  mu_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_mu(::apollo::prediction::TensorParameter* mu) {
  delete mu_;
  mu_ = mu;
  if (mu) {
    set_has_mu();
  } else {
    clear_has_mu();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.mu)
}

// optional .apollo.prediction.TensorParameter sigma = 7;
bool BatchNormalizationParameter::has_sigma() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BatchNormalizationParameter::set_has_sigma() {
  _has_bits_[0] |= 0x00000040u;
}
void BatchNormalizationParameter::clear_has_sigma() {
  _has_bits_[0] &= ~0x00000040u;
}
void BatchNormalizationParameter::clear_sigma() {
  if (sigma_ != NULL) sigma_->::apollo::prediction::TensorParameter::Clear();
  clear_has_sigma();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::sigma() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.sigma)
  return sigma_ != NULL ? *sigma_ : *default_instance_->sigma_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_sigma() {
  set_has_sigma();
  if (sigma_ == NULL) {
    sigma_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.sigma)
  return sigma_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_sigma() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.sigma)
  clear_has_sigma();
  ::apollo::prediction::TensorParameter* temp = sigma_;
  sigma_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_sigma(::apollo::prediction::TensorParameter* sigma) {
  delete sigma_;
  sigma_ = sigma;
  if (sigma) {
    set_has_sigma();
  } else {
    clear_has_sigma();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.sigma)
}

// optional .apollo.prediction.TensorParameter gamma = 8;
bool BatchNormalizationParameter::has_gamma() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BatchNormalizationParameter::set_has_gamma() {
  _has_bits_[0] |= 0x00000080u;
}
void BatchNormalizationParameter::clear_has_gamma() {
  _has_bits_[0] &= ~0x00000080u;
}
void BatchNormalizationParameter::clear_gamma() {
  if (gamma_ != NULL) gamma_->::apollo::prediction::TensorParameter::Clear();
  clear_has_gamma();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::gamma() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.gamma)
  return gamma_ != NULL ? *gamma_ : *default_instance_->gamma_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_gamma() {
  set_has_gamma();
  if (gamma_ == NULL) {
    gamma_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.gamma)
  return gamma_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_gamma() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.gamma)
  clear_has_gamma();
  ::apollo::prediction::TensorParameter* temp = gamma_;
  gamma_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_gamma(::apollo::prediction::TensorParameter* gamma) {
  delete gamma_;
  gamma_ = gamma;
  if (gamma) {
    set_has_gamma();
  } else {
    clear_has_gamma();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.gamma)
}

// optional .apollo.prediction.TensorParameter beta = 9;
bool BatchNormalizationParameter::has_beta() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BatchNormalizationParameter::set_has_beta() {
  _has_bits_[0] |= 0x00000100u;
}
void BatchNormalizationParameter::clear_has_beta() {
  _has_bits_[0] &= ~0x00000100u;
}
void BatchNormalizationParameter::clear_beta() {
  if (beta_ != NULL) beta_->::apollo::prediction::TensorParameter::Clear();
  clear_has_beta();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::beta() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.beta)
  return beta_ != NULL ? *beta_ : *default_instance_->beta_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_beta() {
  set_has_beta();
  if (beta_ == NULL) {
    beta_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.beta)
  return beta_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_beta() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.beta)
  clear_has_beta();
  ::apollo::prediction::TensorParameter* temp = beta_;
  beta_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_beta(::apollo::prediction::TensorParameter* beta) {
  delete beta_;
  beta_ = beta;
  if (beta) {
    set_has_beta();
  } else {
    clear_has_beta();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.beta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSTMParameter::kUnitsFieldNumber;
const int LSTMParameter::kReturnSequencesFieldNumber;
const int LSTMParameter::kStatefulFieldNumber;
const int LSTMParameter::kActivationFieldNumber;
const int LSTMParameter::kRecurrentActivationFieldNumber;
const int LSTMParameter::kUseBiasFieldNumber;
const int LSTMParameter::kUnitForgetBiasFieldNumber;
const int LSTMParameter::kGoBackwardsFieldNumber;
const int LSTMParameter::kUnrollFieldNumber;
const int LSTMParameter::kImplementationFieldNumber;
const int LSTMParameter::kWeightsInputFieldNumber;
const int LSTMParameter::kWeightsForgetFieldNumber;
const int LSTMParameter::kWeightsCellFieldNumber;
const int LSTMParameter::kWeightsOutputFieldNumber;
const int LSTMParameter::kBiasInputFieldNumber;
const int LSTMParameter::kBiasForgetFieldNumber;
const int LSTMParameter::kBiasCellFieldNumber;
const int LSTMParameter::kBiasOutputFieldNumber;
const int LSTMParameter::kRecurrentWeightsInputFieldNumber;
const int LSTMParameter::kRecurrentWeightsForgetFieldNumber;
const int LSTMParameter::kRecurrentWeightsCellFieldNumber;
const int LSTMParameter::kRecurrentWeightsOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSTMParameter::LSTMParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.LSTMParameter)
}

void LSTMParameter::InitAsDefaultInstance() {
  weights_input_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  weights_forget_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  weights_cell_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  weights_output_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  bias_input_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  bias_forget_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  bias_cell_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  bias_output_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  recurrent_weights_input_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  recurrent_weights_forget_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  recurrent_weights_cell_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
  recurrent_weights_output_ = const_cast< ::apollo::prediction::TensorParameter*>(&::apollo::prediction::TensorParameter::default_instance());
}

LSTMParameter::LSTMParameter(const LSTMParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.LSTMParameter)
}

void LSTMParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  units_ = 0;
  return_sequences_ = false;
  stateful_ = false;
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recurrent_activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_bias_ = false;
  unit_forget_bias_ = true;
  go_backwards_ = false;
  unroll_ = false;
  implementation_ = 0;
  weights_input_ = NULL;
  weights_forget_ = NULL;
  weights_cell_ = NULL;
  weights_output_ = NULL;
  bias_input_ = NULL;
  bias_forget_ = NULL;
  bias_cell_ = NULL;
  bias_output_ = NULL;
  recurrent_weights_input_ = NULL;
  recurrent_weights_forget_ = NULL;
  recurrent_weights_cell_ = NULL;
  recurrent_weights_output_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LSTMParameter::~LSTMParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.LSTMParameter)
  SharedDtor();
}

void LSTMParameter::SharedDtor() {
  activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recurrent_activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete weights_input_;
    delete weights_forget_;
    delete weights_cell_;
    delete weights_output_;
    delete bias_input_;
    delete bias_forget_;
    delete bias_cell_;
    delete bias_output_;
    delete recurrent_weights_input_;
    delete recurrent_weights_forget_;
    delete recurrent_weights_cell_;
    delete recurrent_weights_output_;
  }
}

void LSTMParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSTMParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LSTMParameter_descriptor_;
}

const LSTMParameter& LSTMParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

LSTMParameter* LSTMParameter::default_instance_ = NULL;

LSTMParameter* LSTMParameter::New(::google::protobuf::Arena* arena) const {
  LSTMParameter* n = new LSTMParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LSTMParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.LSTMParameter)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LSTMParameter, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LSTMParameter*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(units_, use_bias_);
    if (has_activation()) {
      activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_recurrent_activation()) {
      recurrent_activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    unit_forget_bias_ = true;
    go_backwards_ = false;
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(unroll_, implementation_);
    if (has_weights_input()) {
      if (weights_input_ != NULL) weights_input_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_weights_forget()) {
      if (weights_forget_ != NULL) weights_forget_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_weights_cell()) {
      if (weights_cell_ != NULL) weights_cell_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_weights_output()) {
      if (weights_output_ != NULL) weights_output_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias_input()) {
      if (bias_input_ != NULL) bias_input_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias_forget()) {
      if (bias_forget_ != NULL) bias_forget_->::apollo::prediction::TensorParameter::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    if (has_bias_cell()) {
      if (bias_cell_ != NULL) bias_cell_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias_output()) {
      if (bias_output_ != NULL) bias_output_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_input()) {
      if (recurrent_weights_input_ != NULL) recurrent_weights_input_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_forget()) {
      if (recurrent_weights_forget_ != NULL) recurrent_weights_forget_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_cell()) {
      if (recurrent_weights_cell_ != NULL) recurrent_weights_cell_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_output()) {
      if (recurrent_weights_output_ != NULL) recurrent_weights_output_->::apollo::prediction::TensorParameter::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LSTMParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.LSTMParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 units = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
          set_has_units();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_return_sequences;
        break;
      }

      // optional bool return_sequences = 2;
      case 2: {
        if (tag == 16) {
         parse_return_sequences:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_sequences_)));
          set_has_return_sequences();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stateful;
        break;
      }

      // optional bool stateful = 3;
      case 3: {
        if (tag == 24) {
         parse_stateful:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stateful_)));
          set_has_stateful();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_activation;
        break;
      }

      // optional string activation = 4;
      case 4: {
        if (tag == 34) {
         parse_activation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation().data(), this->activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LSTMParameter.activation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_recurrent_activation;
        break;
      }

      // optional string recurrent_activation = 5;
      case 5: {
        if (tag == 42) {
         parse_recurrent_activation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recurrent_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recurrent_activation().data(), this->recurrent_activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LSTMParameter.recurrent_activation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_use_bias;
        break;
      }

      // optional bool use_bias = 6;
      case 6: {
        if (tag == 48) {
         parse_use_bias:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_bias_)));
          set_has_use_bias();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_unit_forget_bias;
        break;
      }

      // optional bool unit_forget_bias = 7 [default = true];
      case 7: {
        if (tag == 56) {
         parse_unit_forget_bias:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unit_forget_bias_)));
          set_has_unit_forget_bias();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_go_backwards;
        break;
      }

      // optional bool go_backwards = 8 [default = false];
      case 8: {
        if (tag == 64) {
         parse_go_backwards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &go_backwards_)));
          set_has_go_backwards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_unroll;
        break;
      }

      // optional bool unroll = 9 [default = false];
      case 9: {
        if (tag == 72) {
         parse_unroll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unroll_)));
          set_has_unroll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_implementation;
        break;
      }

      // optional int32 implementation = 10 [default = 0];
      case 10: {
        if (tag == 80) {
         parse_implementation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &implementation_)));
          set_has_implementation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_weights_input;
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_input = 15;
      case 15: {
        if (tag == 122) {
         parse_weights_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_weights_forget;
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_forget = 16;
      case 16: {
        if (tag == 130) {
         parse_weights_forget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_forget()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_weights_cell;
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_cell = 17;
      case 17: {
        if (tag == 138) {
         parse_weights_cell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_cell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_weights_output;
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_output = 18;
      case 18: {
        if (tag == 146) {
         parse_weights_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_output()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_bias_input;
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_input = 19;
      case 19: {
        if (tag == 154) {
         parse_bias_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_bias_forget;
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_forget = 20;
      case 20: {
        if (tag == 162) {
         parse_bias_forget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_forget()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_bias_cell;
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_cell = 21;
      case 21: {
        if (tag == 170) {
         parse_bias_cell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_cell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_bias_output;
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_output = 22;
      case 22: {
        if (tag == 178) {
         parse_bias_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_output()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_recurrent_weights_input;
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
      case 25: {
        if (tag == 202) {
         parse_recurrent_weights_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_recurrent_weights_forget;
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
      case 26: {
        if (tag == 210) {
         parse_recurrent_weights_forget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_forget()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_recurrent_weights_cell;
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
      case 27: {
        if (tag == 218) {
         parse_recurrent_weights_cell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_cell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_recurrent_weights_output;
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
      case 28: {
        if (tag == 226) {
         parse_recurrent_weights_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_output()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.LSTMParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.LSTMParameter)
  return false;
#undef DO_
}

void LSTMParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.LSTMParameter)
  // optional int32 units = 1;
  if (has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->units(), output);
  }

  // optional bool return_sequences = 2;
  if (has_return_sequences()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->return_sequences(), output);
  }

  // optional bool stateful = 3;
  if (has_stateful()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->stateful(), output);
  }

  // optional string activation = 4;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->activation(), output);
  }

  // optional string recurrent_activation = 5;
  if (has_recurrent_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recurrent_activation().data(), this->recurrent_activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.recurrent_activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->recurrent_activation(), output);
  }

  // optional bool use_bias = 6;
  if (has_use_bias()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->use_bias(), output);
  }

  // optional bool unit_forget_bias = 7 [default = true];
  if (has_unit_forget_bias()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->unit_forget_bias(), output);
  }

  // optional bool go_backwards = 8 [default = false];
  if (has_go_backwards()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->go_backwards(), output);
  }

  // optional bool unroll = 9 [default = false];
  if (has_unroll()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->unroll(), output);
  }

  // optional int32 implementation = 10 [default = 0];
  if (has_implementation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->implementation(), output);
  }

  // optional .apollo.prediction.TensorParameter weights_input = 15;
  if (has_weights_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->weights_input_, output);
  }

  // optional .apollo.prediction.TensorParameter weights_forget = 16;
  if (has_weights_forget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->weights_forget_, output);
  }

  // optional .apollo.prediction.TensorParameter weights_cell = 17;
  if (has_weights_cell()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->weights_cell_, output);
  }

  // optional .apollo.prediction.TensorParameter weights_output = 18;
  if (has_weights_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->weights_output_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_input = 19;
  if (has_bias_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->bias_input_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_forget = 20;
  if (has_bias_forget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->bias_forget_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_cell = 21;
  if (has_bias_cell()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->bias_cell_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_output = 22;
  if (has_bias_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->bias_output_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
  if (has_recurrent_weights_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->recurrent_weights_input_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
  if (has_recurrent_weights_forget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->recurrent_weights_forget_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
  if (has_recurrent_weights_cell()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->recurrent_weights_cell_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
  if (has_recurrent_weights_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->recurrent_weights_output_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.LSTMParameter)
}

::google::protobuf::uint8* LSTMParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.LSTMParameter)
  // optional int32 units = 1;
  if (has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->units(), target);
  }

  // optional bool return_sequences = 2;
  if (has_return_sequences()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->return_sequences(), target);
  }

  // optional bool stateful = 3;
  if (has_stateful()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->stateful(), target);
  }

  // optional string activation = 4;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->activation(), target);
  }

  // optional string recurrent_activation = 5;
  if (has_recurrent_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recurrent_activation().data(), this->recurrent_activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.recurrent_activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->recurrent_activation(), target);
  }

  // optional bool use_bias = 6;
  if (has_use_bias()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->use_bias(), target);
  }

  // optional bool unit_forget_bias = 7 [default = true];
  if (has_unit_forget_bias()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->unit_forget_bias(), target);
  }

  // optional bool go_backwards = 8 [default = false];
  if (has_go_backwards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->go_backwards(), target);
  }

  // optional bool unroll = 9 [default = false];
  if (has_unroll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->unroll(), target);
  }

  // optional int32 implementation = 10 [default = 0];
  if (has_implementation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->implementation(), target);
  }

  // optional .apollo.prediction.TensorParameter weights_input = 15;
  if (has_weights_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->weights_input_, false, target);
  }

  // optional .apollo.prediction.TensorParameter weights_forget = 16;
  if (has_weights_forget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->weights_forget_, false, target);
  }

  // optional .apollo.prediction.TensorParameter weights_cell = 17;
  if (has_weights_cell()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->weights_cell_, false, target);
  }

  // optional .apollo.prediction.TensorParameter weights_output = 18;
  if (has_weights_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->weights_output_, false, target);
  }

  // optional .apollo.prediction.TensorParameter bias_input = 19;
  if (has_bias_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->bias_input_, false, target);
  }

  // optional .apollo.prediction.TensorParameter bias_forget = 20;
  if (has_bias_forget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->bias_forget_, false, target);
  }

  // optional .apollo.prediction.TensorParameter bias_cell = 21;
  if (has_bias_cell()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->bias_cell_, false, target);
  }

  // optional .apollo.prediction.TensorParameter bias_output = 22;
  if (has_bias_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->bias_output_, false, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
  if (has_recurrent_weights_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->recurrent_weights_input_, false, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
  if (has_recurrent_weights_forget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->recurrent_weights_forget_, false, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
  if (has_recurrent_weights_cell()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->recurrent_weights_cell_, false, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
  if (has_recurrent_weights_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->recurrent_weights_output_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.LSTMParameter)
  return target;
}

int LSTMParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.LSTMParameter)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

    // optional bool return_sequences = 2;
    if (has_return_sequences()) {
      total_size += 1 + 1;
    }

    // optional bool stateful = 3;
    if (has_stateful()) {
      total_size += 1 + 1;
    }

    // optional string activation = 4;
    if (has_activation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activation());
    }

    // optional string recurrent_activation = 5;
    if (has_recurrent_activation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recurrent_activation());
    }

    // optional bool use_bias = 6;
    if (has_use_bias()) {
      total_size += 1 + 1;
    }

    // optional bool unit_forget_bias = 7 [default = true];
    if (has_unit_forget_bias()) {
      total_size += 1 + 1;
    }

    // optional bool go_backwards = 8 [default = false];
    if (has_go_backwards()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool unroll = 9 [default = false];
    if (has_unroll()) {
      total_size += 1 + 1;
    }

    // optional int32 implementation = 10 [default = 0];
    if (has_implementation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->implementation());
    }

    // optional .apollo.prediction.TensorParameter weights_input = 15;
    if (has_weights_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_input_);
    }

    // optional .apollo.prediction.TensorParameter weights_forget = 16;
    if (has_weights_forget()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_forget_);
    }

    // optional .apollo.prediction.TensorParameter weights_cell = 17;
    if (has_weights_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_cell_);
    }

    // optional .apollo.prediction.TensorParameter weights_output = 18;
    if (has_weights_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_output_);
    }

    // optional .apollo.prediction.TensorParameter bias_input = 19;
    if (has_bias_input()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_input_);
    }

    // optional .apollo.prediction.TensorParameter bias_forget = 20;
    if (has_bias_forget()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_forget_);
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional .apollo.prediction.TensorParameter bias_cell = 21;
    if (has_bias_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_cell_);
    }

    // optional .apollo.prediction.TensorParameter bias_output = 22;
    if (has_bias_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_output_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
    if (has_recurrent_weights_input()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_input_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
    if (has_recurrent_weights_forget()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_forget_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
    if (has_recurrent_weights_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_cell_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
    if (has_recurrent_weights_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_output_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSTMParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.LSTMParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LSTMParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LSTMParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.LSTMParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.LSTMParameter)
    MergeFrom(*source);
  }
}

void LSTMParameter::MergeFrom(const LSTMParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.LSTMParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_units()) {
      set_units(from.units());
    }
    if (from.has_return_sequences()) {
      set_return_sequences(from.return_sequences());
    }
    if (from.has_stateful()) {
      set_stateful(from.stateful());
    }
    if (from.has_activation()) {
      set_has_activation();
      activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
    }
    if (from.has_recurrent_activation()) {
      set_has_recurrent_activation();
      recurrent_activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recurrent_activation_);
    }
    if (from.has_use_bias()) {
      set_use_bias(from.use_bias());
    }
    if (from.has_unit_forget_bias()) {
      set_unit_forget_bias(from.unit_forget_bias());
    }
    if (from.has_go_backwards()) {
      set_go_backwards(from.go_backwards());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_unroll()) {
      set_unroll(from.unroll());
    }
    if (from.has_implementation()) {
      set_implementation(from.implementation());
    }
    if (from.has_weights_input()) {
      mutable_weights_input()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_input());
    }
    if (from.has_weights_forget()) {
      mutable_weights_forget()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_forget());
    }
    if (from.has_weights_cell()) {
      mutable_weights_cell()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_cell());
    }
    if (from.has_weights_output()) {
      mutable_weights_output()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_output());
    }
    if (from.has_bias_input()) {
      mutable_bias_input()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_input());
    }
    if (from.has_bias_forget()) {
      mutable_bias_forget()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_forget());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_bias_cell()) {
      mutable_bias_cell()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_cell());
    }
    if (from.has_bias_output()) {
      mutable_bias_output()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_output());
    }
    if (from.has_recurrent_weights_input()) {
      mutable_recurrent_weights_input()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_input());
    }
    if (from.has_recurrent_weights_forget()) {
      mutable_recurrent_weights_forget()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_forget());
    }
    if (from.has_recurrent_weights_cell()) {
      mutable_recurrent_weights_cell()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_cell());
    }
    if (from.has_recurrent_weights_output()) {
      mutable_recurrent_weights_output()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_output());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LSTMParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.LSTMParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSTMParameter::CopyFrom(const LSTMParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.LSTMParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSTMParameter::IsInitialized() const {

  return true;
}

void LSTMParameter::Swap(LSTMParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSTMParameter::InternalSwap(LSTMParameter* other) {
  std::swap(units_, other->units_);
  std::swap(return_sequences_, other->return_sequences_);
  std::swap(stateful_, other->stateful_);
  activation_.Swap(&other->activation_);
  recurrent_activation_.Swap(&other->recurrent_activation_);
  std::swap(use_bias_, other->use_bias_);
  std::swap(unit_forget_bias_, other->unit_forget_bias_);
  std::swap(go_backwards_, other->go_backwards_);
  std::swap(unroll_, other->unroll_);
  std::swap(implementation_, other->implementation_);
  std::swap(weights_input_, other->weights_input_);
  std::swap(weights_forget_, other->weights_forget_);
  std::swap(weights_cell_, other->weights_cell_);
  std::swap(weights_output_, other->weights_output_);
  std::swap(bias_input_, other->bias_input_);
  std::swap(bias_forget_, other->bias_forget_);
  std::swap(bias_cell_, other->bias_cell_);
  std::swap(bias_output_, other->bias_output_);
  std::swap(recurrent_weights_input_, other->recurrent_weights_input_);
  std::swap(recurrent_weights_forget_, other->recurrent_weights_forget_);
  std::swap(recurrent_weights_cell_, other->recurrent_weights_cell_);
  std::swap(recurrent_weights_output_, other->recurrent_weights_output_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LSTMParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LSTMParameter_descriptor_;
  metadata.reflection = LSTMParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LSTMParameter

// optional int32 units = 1;
bool LSTMParameter::has_units() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LSTMParameter::set_has_units() {
  _has_bits_[0] |= 0x00000001u;
}
void LSTMParameter::clear_has_units() {
  _has_bits_[0] &= ~0x00000001u;
}
void LSTMParameter::clear_units() {
  units_ = 0;
  clear_has_units();
}
 ::google::protobuf::int32 LSTMParameter::units() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.units)
  return units_;
}
 void LSTMParameter::set_units(::google::protobuf::int32 value) {
  set_has_units();
  units_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.units)
}

// optional bool return_sequences = 2;
bool LSTMParameter::has_return_sequences() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LSTMParameter::set_has_return_sequences() {
  _has_bits_[0] |= 0x00000002u;
}
void LSTMParameter::clear_has_return_sequences() {
  _has_bits_[0] &= ~0x00000002u;
}
void LSTMParameter::clear_return_sequences() {
  return_sequences_ = false;
  clear_has_return_sequences();
}
 bool LSTMParameter::return_sequences() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.return_sequences)
  return return_sequences_;
}
 void LSTMParameter::set_return_sequences(bool value) {
  set_has_return_sequences();
  return_sequences_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.return_sequences)
}

// optional bool stateful = 3;
bool LSTMParameter::has_stateful() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LSTMParameter::set_has_stateful() {
  _has_bits_[0] |= 0x00000004u;
}
void LSTMParameter::clear_has_stateful() {
  _has_bits_[0] &= ~0x00000004u;
}
void LSTMParameter::clear_stateful() {
  stateful_ = false;
  clear_has_stateful();
}
 bool LSTMParameter::stateful() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.stateful)
  return stateful_;
}
 void LSTMParameter::set_stateful(bool value) {
  set_has_stateful();
  stateful_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.stateful)
}

// optional string activation = 4;
bool LSTMParameter::has_activation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LSTMParameter::set_has_activation() {
  _has_bits_[0] |= 0x00000008u;
}
void LSTMParameter::clear_has_activation() {
  _has_bits_[0] &= ~0x00000008u;
}
void LSTMParameter::clear_activation() {
  activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activation();
}
 const ::std::string& LSTMParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.activation)
  return activation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LSTMParameter::set_activation(const ::std::string& value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.activation)
}
 void LSTMParameter::set_activation(const char* value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LSTMParameter.activation)
}
 void LSTMParameter::set_activation(const char* value, size_t size) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LSTMParameter.activation)
}
 ::std::string* LSTMParameter::mutable_activation() {
  set_has_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.activation)
  return activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LSTMParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.activation)
  clear_has_activation();
  return activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LSTMParameter::set_allocated_activation(::std::string* activation) {
  if (activation != NULL) {
    set_has_activation();
  } else {
    clear_has_activation();
  }
  activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.activation)
}

// optional string recurrent_activation = 5;
bool LSTMParameter::has_recurrent_activation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LSTMParameter::set_has_recurrent_activation() {
  _has_bits_[0] |= 0x00000010u;
}
void LSTMParameter::clear_has_recurrent_activation() {
  _has_bits_[0] &= ~0x00000010u;
}
void LSTMParameter::clear_recurrent_activation() {
  recurrent_activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recurrent_activation();
}
 const ::std::string& LSTMParameter::recurrent_activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_activation)
  return recurrent_activation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LSTMParameter::set_recurrent_activation(const ::std::string& value) {
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.recurrent_activation)
}
 void LSTMParameter::set_recurrent_activation(const char* value) {
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LSTMParameter.recurrent_activation)
}
 void LSTMParameter::set_recurrent_activation(const char* value, size_t size) {
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LSTMParameter.recurrent_activation)
}
 ::std::string* LSTMParameter::mutable_recurrent_activation() {
  set_has_recurrent_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_activation)
  return recurrent_activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LSTMParameter::release_recurrent_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_activation)
  clear_has_recurrent_activation();
  return recurrent_activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LSTMParameter::set_allocated_recurrent_activation(::std::string* recurrent_activation) {
  if (recurrent_activation != NULL) {
    set_has_recurrent_activation();
  } else {
    clear_has_recurrent_activation();
  }
  recurrent_activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recurrent_activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_activation)
}

// optional bool use_bias = 6;
bool LSTMParameter::has_use_bias() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LSTMParameter::set_has_use_bias() {
  _has_bits_[0] |= 0x00000020u;
}
void LSTMParameter::clear_has_use_bias() {
  _has_bits_[0] &= ~0x00000020u;
}
void LSTMParameter::clear_use_bias() {
  use_bias_ = false;
  clear_has_use_bias();
}
 bool LSTMParameter::use_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.use_bias)
  return use_bias_;
}
 void LSTMParameter::set_use_bias(bool value) {
  set_has_use_bias();
  use_bias_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.use_bias)
}

// optional bool unit_forget_bias = 7 [default = true];
bool LSTMParameter::has_unit_forget_bias() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LSTMParameter::set_has_unit_forget_bias() {
  _has_bits_[0] |= 0x00000040u;
}
void LSTMParameter::clear_has_unit_forget_bias() {
  _has_bits_[0] &= ~0x00000040u;
}
void LSTMParameter::clear_unit_forget_bias() {
  unit_forget_bias_ = true;
  clear_has_unit_forget_bias();
}
 bool LSTMParameter::unit_forget_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.unit_forget_bias)
  return unit_forget_bias_;
}
 void LSTMParameter::set_unit_forget_bias(bool value) {
  set_has_unit_forget_bias();
  unit_forget_bias_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.unit_forget_bias)
}

// optional bool go_backwards = 8 [default = false];
bool LSTMParameter::has_go_backwards() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LSTMParameter::set_has_go_backwards() {
  _has_bits_[0] |= 0x00000080u;
}
void LSTMParameter::clear_has_go_backwards() {
  _has_bits_[0] &= ~0x00000080u;
}
void LSTMParameter::clear_go_backwards() {
  go_backwards_ = false;
  clear_has_go_backwards();
}
 bool LSTMParameter::go_backwards() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.go_backwards)
  return go_backwards_;
}
 void LSTMParameter::set_go_backwards(bool value) {
  set_has_go_backwards();
  go_backwards_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.go_backwards)
}

// optional bool unroll = 9 [default = false];
bool LSTMParameter::has_unroll() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LSTMParameter::set_has_unroll() {
  _has_bits_[0] |= 0x00000100u;
}
void LSTMParameter::clear_has_unroll() {
  _has_bits_[0] &= ~0x00000100u;
}
void LSTMParameter::clear_unroll() {
  unroll_ = false;
  clear_has_unroll();
}
 bool LSTMParameter::unroll() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.unroll)
  return unroll_;
}
 void LSTMParameter::set_unroll(bool value) {
  set_has_unroll();
  unroll_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.unroll)
}

// optional int32 implementation = 10 [default = 0];
bool LSTMParameter::has_implementation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void LSTMParameter::set_has_implementation() {
  _has_bits_[0] |= 0x00000200u;
}
void LSTMParameter::clear_has_implementation() {
  _has_bits_[0] &= ~0x00000200u;
}
void LSTMParameter::clear_implementation() {
  implementation_ = 0;
  clear_has_implementation();
}
 ::google::protobuf::int32 LSTMParameter::implementation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.implementation)
  return implementation_;
}
 void LSTMParameter::set_implementation(::google::protobuf::int32 value) {
  set_has_implementation();
  implementation_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.implementation)
}

// optional .apollo.prediction.TensorParameter weights_input = 15;
bool LSTMParameter::has_weights_input() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void LSTMParameter::set_has_weights_input() {
  _has_bits_[0] |= 0x00000400u;
}
void LSTMParameter::clear_has_weights_input() {
  _has_bits_[0] &= ~0x00000400u;
}
void LSTMParameter::clear_weights_input() {
  if (weights_input_ != NULL) weights_input_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_input();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_input)
  return weights_input_ != NULL ? *weights_input_ : *default_instance_->weights_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_input() {
  set_has_weights_input();
  if (weights_input_ == NULL) {
    weights_input_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_input)
  return weights_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_input)
  clear_has_weights_input();
  ::apollo::prediction::TensorParameter* temp = weights_input_;
  weights_input_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_input(::apollo::prediction::TensorParameter* weights_input) {
  delete weights_input_;
  weights_input_ = weights_input;
  if (weights_input) {
    set_has_weights_input();
  } else {
    clear_has_weights_input();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_input)
}

// optional .apollo.prediction.TensorParameter weights_forget = 16;
bool LSTMParameter::has_weights_forget() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void LSTMParameter::set_has_weights_forget() {
  _has_bits_[0] |= 0x00000800u;
}
void LSTMParameter::clear_has_weights_forget() {
  _has_bits_[0] &= ~0x00000800u;
}
void LSTMParameter::clear_weights_forget() {
  if (weights_forget_ != NULL) weights_forget_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_forget();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_forget() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_forget)
  return weights_forget_ != NULL ? *weights_forget_ : *default_instance_->weights_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_forget() {
  set_has_weights_forget();
  if (weights_forget_ == NULL) {
    weights_forget_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_forget)
  return weights_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_forget() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_forget)
  clear_has_weights_forget();
  ::apollo::prediction::TensorParameter* temp = weights_forget_;
  weights_forget_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_forget(::apollo::prediction::TensorParameter* weights_forget) {
  delete weights_forget_;
  weights_forget_ = weights_forget;
  if (weights_forget) {
    set_has_weights_forget();
  } else {
    clear_has_weights_forget();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_forget)
}

// optional .apollo.prediction.TensorParameter weights_cell = 17;
bool LSTMParameter::has_weights_cell() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void LSTMParameter::set_has_weights_cell() {
  _has_bits_[0] |= 0x00001000u;
}
void LSTMParameter::clear_has_weights_cell() {
  _has_bits_[0] &= ~0x00001000u;
}
void LSTMParameter::clear_weights_cell() {
  if (weights_cell_ != NULL) weights_cell_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_cell();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_cell() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_cell)
  return weights_cell_ != NULL ? *weights_cell_ : *default_instance_->weights_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_cell() {
  set_has_weights_cell();
  if (weights_cell_ == NULL) {
    weights_cell_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_cell)
  return weights_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_cell() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_cell)
  clear_has_weights_cell();
  ::apollo::prediction::TensorParameter* temp = weights_cell_;
  weights_cell_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_cell(::apollo::prediction::TensorParameter* weights_cell) {
  delete weights_cell_;
  weights_cell_ = weights_cell;
  if (weights_cell) {
    set_has_weights_cell();
  } else {
    clear_has_weights_cell();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_cell)
}

// optional .apollo.prediction.TensorParameter weights_output = 18;
bool LSTMParameter::has_weights_output() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void LSTMParameter::set_has_weights_output() {
  _has_bits_[0] |= 0x00002000u;
}
void LSTMParameter::clear_has_weights_output() {
  _has_bits_[0] &= ~0x00002000u;
}
void LSTMParameter::clear_weights_output() {
  if (weights_output_ != NULL) weights_output_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_output();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_output)
  return weights_output_ != NULL ? *weights_output_ : *default_instance_->weights_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_output() {
  set_has_weights_output();
  if (weights_output_ == NULL) {
    weights_output_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_output)
  return weights_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_output() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_output)
  clear_has_weights_output();
  ::apollo::prediction::TensorParameter* temp = weights_output_;
  weights_output_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_output(::apollo::prediction::TensorParameter* weights_output) {
  delete weights_output_;
  weights_output_ = weights_output;
  if (weights_output) {
    set_has_weights_output();
  } else {
    clear_has_weights_output();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_output)
}

// optional .apollo.prediction.TensorParameter bias_input = 19;
bool LSTMParameter::has_bias_input() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void LSTMParameter::set_has_bias_input() {
  _has_bits_[0] |= 0x00004000u;
}
void LSTMParameter::clear_has_bias_input() {
  _has_bits_[0] &= ~0x00004000u;
}
void LSTMParameter::clear_bias_input() {
  if (bias_input_ != NULL) bias_input_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_input();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_input)
  return bias_input_ != NULL ? *bias_input_ : *default_instance_->bias_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_input() {
  set_has_bias_input();
  if (bias_input_ == NULL) {
    bias_input_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_input)
  return bias_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_input)
  clear_has_bias_input();
  ::apollo::prediction::TensorParameter* temp = bias_input_;
  bias_input_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_input(::apollo::prediction::TensorParameter* bias_input) {
  delete bias_input_;
  bias_input_ = bias_input;
  if (bias_input) {
    set_has_bias_input();
  } else {
    clear_has_bias_input();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_input)
}

// optional .apollo.prediction.TensorParameter bias_forget = 20;
bool LSTMParameter::has_bias_forget() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void LSTMParameter::set_has_bias_forget() {
  _has_bits_[0] |= 0x00008000u;
}
void LSTMParameter::clear_has_bias_forget() {
  _has_bits_[0] &= ~0x00008000u;
}
void LSTMParameter::clear_bias_forget() {
  if (bias_forget_ != NULL) bias_forget_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_forget();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_forget() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_forget)
  return bias_forget_ != NULL ? *bias_forget_ : *default_instance_->bias_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_forget() {
  set_has_bias_forget();
  if (bias_forget_ == NULL) {
    bias_forget_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_forget)
  return bias_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_forget() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_forget)
  clear_has_bias_forget();
  ::apollo::prediction::TensorParameter* temp = bias_forget_;
  bias_forget_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_forget(::apollo::prediction::TensorParameter* bias_forget) {
  delete bias_forget_;
  bias_forget_ = bias_forget;
  if (bias_forget) {
    set_has_bias_forget();
  } else {
    clear_has_bias_forget();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_forget)
}

// optional .apollo.prediction.TensorParameter bias_cell = 21;
bool LSTMParameter::has_bias_cell() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void LSTMParameter::set_has_bias_cell() {
  _has_bits_[0] |= 0x00010000u;
}
void LSTMParameter::clear_has_bias_cell() {
  _has_bits_[0] &= ~0x00010000u;
}
void LSTMParameter::clear_bias_cell() {
  if (bias_cell_ != NULL) bias_cell_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_cell();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_cell() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_cell)
  return bias_cell_ != NULL ? *bias_cell_ : *default_instance_->bias_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_cell() {
  set_has_bias_cell();
  if (bias_cell_ == NULL) {
    bias_cell_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_cell)
  return bias_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_cell() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_cell)
  clear_has_bias_cell();
  ::apollo::prediction::TensorParameter* temp = bias_cell_;
  bias_cell_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_cell(::apollo::prediction::TensorParameter* bias_cell) {
  delete bias_cell_;
  bias_cell_ = bias_cell;
  if (bias_cell) {
    set_has_bias_cell();
  } else {
    clear_has_bias_cell();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_cell)
}

// optional .apollo.prediction.TensorParameter bias_output = 22;
bool LSTMParameter::has_bias_output() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void LSTMParameter::set_has_bias_output() {
  _has_bits_[0] |= 0x00020000u;
}
void LSTMParameter::clear_has_bias_output() {
  _has_bits_[0] &= ~0x00020000u;
}
void LSTMParameter::clear_bias_output() {
  if (bias_output_ != NULL) bias_output_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_output();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_output)
  return bias_output_ != NULL ? *bias_output_ : *default_instance_->bias_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_output() {
  set_has_bias_output();
  if (bias_output_ == NULL) {
    bias_output_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_output)
  return bias_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_output() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_output)
  clear_has_bias_output();
  ::apollo::prediction::TensorParameter* temp = bias_output_;
  bias_output_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_output(::apollo::prediction::TensorParameter* bias_output) {
  delete bias_output_;
  bias_output_ = bias_output;
  if (bias_output) {
    set_has_bias_output();
  } else {
    clear_has_bias_output();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_output)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
bool LSTMParameter::has_recurrent_weights_input() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_input() {
  _has_bits_[0] |= 0x00040000u;
}
void LSTMParameter::clear_has_recurrent_weights_input() {
  _has_bits_[0] &= ~0x00040000u;
}
void LSTMParameter::clear_recurrent_weights_input() {
  if (recurrent_weights_input_ != NULL) recurrent_weights_input_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_input();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_input)
  return recurrent_weights_input_ != NULL ? *recurrent_weights_input_ : *default_instance_->recurrent_weights_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_input() {
  set_has_recurrent_weights_input();
  if (recurrent_weights_input_ == NULL) {
    recurrent_weights_input_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_input)
  return recurrent_weights_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_input)
  clear_has_recurrent_weights_input();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_input_;
  recurrent_weights_input_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_input(::apollo::prediction::TensorParameter* recurrent_weights_input) {
  delete recurrent_weights_input_;
  recurrent_weights_input_ = recurrent_weights_input;
  if (recurrent_weights_input) {
    set_has_recurrent_weights_input();
  } else {
    clear_has_recurrent_weights_input();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_input)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
bool LSTMParameter::has_recurrent_weights_forget() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_forget() {
  _has_bits_[0] |= 0x00080000u;
}
void LSTMParameter::clear_has_recurrent_weights_forget() {
  _has_bits_[0] &= ~0x00080000u;
}
void LSTMParameter::clear_recurrent_weights_forget() {
  if (recurrent_weights_forget_ != NULL) recurrent_weights_forget_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_forget();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_forget() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_forget)
  return recurrent_weights_forget_ != NULL ? *recurrent_weights_forget_ : *default_instance_->recurrent_weights_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_forget() {
  set_has_recurrent_weights_forget();
  if (recurrent_weights_forget_ == NULL) {
    recurrent_weights_forget_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_forget)
  return recurrent_weights_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_forget() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_forget)
  clear_has_recurrent_weights_forget();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_forget_;
  recurrent_weights_forget_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_forget(::apollo::prediction::TensorParameter* recurrent_weights_forget) {
  delete recurrent_weights_forget_;
  recurrent_weights_forget_ = recurrent_weights_forget;
  if (recurrent_weights_forget) {
    set_has_recurrent_weights_forget();
  } else {
    clear_has_recurrent_weights_forget();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_forget)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
bool LSTMParameter::has_recurrent_weights_cell() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_cell() {
  _has_bits_[0] |= 0x00100000u;
}
void LSTMParameter::clear_has_recurrent_weights_cell() {
  _has_bits_[0] &= ~0x00100000u;
}
void LSTMParameter::clear_recurrent_weights_cell() {
  if (recurrent_weights_cell_ != NULL) recurrent_weights_cell_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_cell();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_cell() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_cell)
  return recurrent_weights_cell_ != NULL ? *recurrent_weights_cell_ : *default_instance_->recurrent_weights_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_cell() {
  set_has_recurrent_weights_cell();
  if (recurrent_weights_cell_ == NULL) {
    recurrent_weights_cell_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_cell)
  return recurrent_weights_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_cell() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_cell)
  clear_has_recurrent_weights_cell();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_cell_;
  recurrent_weights_cell_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_cell(::apollo::prediction::TensorParameter* recurrent_weights_cell) {
  delete recurrent_weights_cell_;
  recurrent_weights_cell_ = recurrent_weights_cell;
  if (recurrent_weights_cell) {
    set_has_recurrent_weights_cell();
  } else {
    clear_has_recurrent_weights_cell();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_cell)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
bool LSTMParameter::has_recurrent_weights_output() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_output() {
  _has_bits_[0] |= 0x00200000u;
}
void LSTMParameter::clear_has_recurrent_weights_output() {
  _has_bits_[0] &= ~0x00200000u;
}
void LSTMParameter::clear_recurrent_weights_output() {
  if (recurrent_weights_output_ != NULL) recurrent_weights_output_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_output();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_output)
  return recurrent_weights_output_ != NULL ? *recurrent_weights_output_ : *default_instance_->recurrent_weights_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_output() {
  set_has_recurrent_weights_output();
  if (recurrent_weights_output_ == NULL) {
    recurrent_weights_output_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_output)
  return recurrent_weights_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_output() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_output)
  clear_has_recurrent_weights_output();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_output_;
  recurrent_weights_output_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_output(::apollo::prediction::TensorParameter* recurrent_weights_output) {
  delete recurrent_weights_output_;
  recurrent_weights_output_ = recurrent_weights_output;
  if (recurrent_weights_output) {
    set_has_recurrent_weights_output();
  } else {
    clear_has_recurrent_weights_output();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_output)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivationParameter::kActivationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivationParameter::ActivationParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.ActivationParameter)
}

void ActivationParameter::InitAsDefaultInstance() {
}

ActivationParameter::ActivationParameter(const ActivationParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ActivationParameter)
}

void ActivationParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivationParameter::~ActivationParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ActivationParameter)
  SharedDtor();
}

void ActivationParameter::SharedDtor() {
  activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ActivationParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivationParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivationParameter_descriptor_;
}

const ActivationParameter& ActivationParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

ActivationParameter* ActivationParameter::default_instance_ = NULL;

ActivationParameter* ActivationParameter::New(::google::protobuf::Arena* arena) const {
  ActivationParameter* n = new ActivationParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivationParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ActivationParameter)
  if (has_activation()) {
    activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ActivationParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.ActivationParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string activation = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation().data(), this->activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.ActivationParameter.activation");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.ActivationParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.ActivationParameter)
  return false;
#undef DO_
}

void ActivationParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.ActivationParameter)
  // optional string activation = 1;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.ActivationParameter.activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->activation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.ActivationParameter)
}

::google::protobuf::uint8* ActivationParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ActivationParameter)
  // optional string activation = 1;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.ActivationParameter.activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->activation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ActivationParameter)
  return target;
}

int ActivationParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ActivationParameter)
  int total_size = 0;

  // optional string activation = 1;
  if (has_activation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->activation());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivationParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.ActivationParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActivationParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivationParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.ActivationParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.ActivationParameter)
    MergeFrom(*source);
  }
}

void ActivationParameter::MergeFrom(const ActivationParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ActivationParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activation()) {
      set_has_activation();
      activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ActivationParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.ActivationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivationParameter::CopyFrom(const ActivationParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ActivationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivationParameter::IsInitialized() const {

  return true;
}

void ActivationParameter::Swap(ActivationParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivationParameter::InternalSwap(ActivationParameter* other) {
  activation_.Swap(&other->activation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivationParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivationParameter_descriptor_;
  metadata.reflection = ActivationParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivationParameter

// optional string activation = 1;
bool ActivationParameter::has_activation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivationParameter::set_has_activation() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivationParameter::clear_has_activation() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivationParameter::clear_activation() {
  activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activation();
}
 const ::std::string& ActivationParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ActivationParameter.activation)
  return activation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActivationParameter::set_activation(const ::std::string& value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.ActivationParameter.activation)
}
 void ActivationParameter::set_activation(const char* value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.ActivationParameter.activation)
}
 void ActivationParameter::set_activation(const char* value, size_t size) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.ActivationParameter.activation)
}
 ::std::string* ActivationParameter::mutable_activation() {
  set_has_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ActivationParameter.activation)
  return activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ActivationParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.ActivationParameter.activation)
  clear_has_activation();
  return activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActivationParameter::set_allocated_activation(::std::string* activation) {
  if (activation != NULL) {
    set_has_activation();
  } else {
    clear_has_activation();
  }
  activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.ActivationParameter.activation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlattenParameter::FlattenParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.FlattenParameter)
}

void FlattenParameter::InitAsDefaultInstance() {
}

FlattenParameter::FlattenParameter(const FlattenParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.FlattenParameter)
}

void FlattenParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FlattenParameter::~FlattenParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.FlattenParameter)
  SharedDtor();
}

void FlattenParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FlattenParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlattenParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FlattenParameter_descriptor_;
}

const FlattenParameter& FlattenParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

FlattenParameter* FlattenParameter::default_instance_ = NULL;

FlattenParameter* FlattenParameter::New(::google::protobuf::Arena* arena) const {
  FlattenParameter* n = new FlattenParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FlattenParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.FlattenParameter)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FlattenParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.FlattenParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.FlattenParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.FlattenParameter)
  return false;
#undef DO_
}

void FlattenParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.FlattenParameter)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.FlattenParameter)
}

::google::protobuf::uint8* FlattenParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.FlattenParameter)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.FlattenParameter)
  return target;
}

int FlattenParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.FlattenParameter)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlattenParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.FlattenParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FlattenParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FlattenParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.FlattenParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.FlattenParameter)
    MergeFrom(*source);
  }
}

void FlattenParameter::MergeFrom(const FlattenParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.FlattenParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FlattenParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.FlattenParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlattenParameter::CopyFrom(const FlattenParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.FlattenParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlattenParameter::IsInitialized() const {

  return true;
}

void FlattenParameter::Swap(FlattenParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlattenParameter::InternalSwap(FlattenParameter* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FlattenParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FlattenParameter_descriptor_;
  metadata.reflection = FlattenParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FlattenParameter

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConcatenateParameter::kAxisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConcatenateParameter::ConcatenateParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.ConcatenateParameter)
}

void ConcatenateParameter::InitAsDefaultInstance() {
}

ConcatenateParameter::ConcatenateParameter(const ConcatenateParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ConcatenateParameter)
}

void ConcatenateParameter::SharedCtor() {
  _cached_size_ = 0;
  axis_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConcatenateParameter::~ConcatenateParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ConcatenateParameter)
  SharedDtor();
}

void ConcatenateParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConcatenateParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConcatenateParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConcatenateParameter_descriptor_;
}

const ConcatenateParameter& ConcatenateParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

ConcatenateParameter* ConcatenateParameter::default_instance_ = NULL;

ConcatenateParameter* ConcatenateParameter::New(::google::protobuf::Arena* arena) const {
  ConcatenateParameter* n = new ConcatenateParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConcatenateParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ConcatenateParameter)
  axis_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ConcatenateParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.ConcatenateParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 axis = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &axis_)));
          set_has_axis();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.ConcatenateParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.ConcatenateParameter)
  return false;
#undef DO_
}

void ConcatenateParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.ConcatenateParameter)
  // optional int32 axis = 1;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->axis(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.ConcatenateParameter)
}

::google::protobuf::uint8* ConcatenateParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ConcatenateParameter)
  // optional int32 axis = 1;
  if (has_axis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->axis(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ConcatenateParameter)
  return target;
}

int ConcatenateParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ConcatenateParameter)
  int total_size = 0;

  // optional int32 axis = 1;
  if (has_axis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->axis());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConcatenateParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.ConcatenateParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ConcatenateParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConcatenateParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.ConcatenateParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.ConcatenateParameter)
    MergeFrom(*source);
  }
}

void ConcatenateParameter::MergeFrom(const ConcatenateParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ConcatenateParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_axis()) {
      set_axis(from.axis());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ConcatenateParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.ConcatenateParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConcatenateParameter::CopyFrom(const ConcatenateParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ConcatenateParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConcatenateParameter::IsInitialized() const {

  return true;
}

void ConcatenateParameter::Swap(ConcatenateParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConcatenateParameter::InternalSwap(ConcatenateParameter* other) {
  std::swap(axis_, other->axis_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConcatenateParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConcatenateParameter_descriptor_;
  metadata.reflection = ConcatenateParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConcatenateParameter

// optional int32 axis = 1;
bool ConcatenateParameter::has_axis() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConcatenateParameter::set_has_axis() {
  _has_bits_[0] |= 0x00000001u;
}
void ConcatenateParameter::clear_has_axis() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConcatenateParameter::clear_axis() {
  axis_ = 0;
  clear_has_axis();
}
 ::google::protobuf::int32 ConcatenateParameter::axis() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ConcatenateParameter.axis)
  return axis_;
}
 void ConcatenateParameter::set_axis(::google::protobuf::int32 value) {
  set_has_axis();
  axis_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.ConcatenateParameter.axis)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerParameter::kTypeFieldNumber;
const int LayerParameter::kNameFieldNumber;
const int LayerParameter::kOrderNumberFieldNumber;
const int LayerParameter::kInputFieldNumber;
const int LayerParameter::kActivationFieldNumber;
const int LayerParameter::kDenseFieldNumber;
const int LayerParameter::kBatchNormalizationFieldNumber;
const int LayerParameter::kLstmFieldNumber;
const int LayerParameter::kFlattenFieldNumber;
const int LayerParameter::kConcatenateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerParameter::LayerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.LayerParameter)
}

void LayerParameter::InitAsDefaultInstance() {
  LayerParameter_default_oneof_instance_->input_ = const_cast< ::apollo::prediction::InputParameter*>(&::apollo::prediction::InputParameter::default_instance());
  LayerParameter_default_oneof_instance_->activation_ = const_cast< ::apollo::prediction::ActivationParameter*>(&::apollo::prediction::ActivationParameter::default_instance());
  LayerParameter_default_oneof_instance_->dense_ = const_cast< ::apollo::prediction::DenseParameter*>(&::apollo::prediction::DenseParameter::default_instance());
  LayerParameter_default_oneof_instance_->batch_normalization_ = const_cast< ::apollo::prediction::BatchNormalizationParameter*>(&::apollo::prediction::BatchNormalizationParameter::default_instance());
  LayerParameter_default_oneof_instance_->lstm_ = const_cast< ::apollo::prediction::LSTMParameter*>(&::apollo::prediction::LSTMParameter::default_instance());
  LayerParameter_default_oneof_instance_->flatten_ = const_cast< ::apollo::prediction::FlattenParameter*>(&::apollo::prediction::FlattenParameter::default_instance());
  LayerParameter_default_oneof_instance_->concatenate_ = const_cast< ::apollo::prediction::ConcatenateParameter*>(&::apollo::prediction::ConcatenateParameter::default_instance());
}

LayerParameter::LayerParameter(const LayerParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.LayerParameter)
}

void LayerParameter::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_oneof_layers();
}

LayerParameter::~LayerParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.LayerParameter)
  SharedDtor();
}

void LayerParameter::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_oneof_layers()) {
    clear_oneof_layers();
  }
  if (this != default_instance_) {
  }
}

void LayerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LayerParameter_descriptor_;
}

const LayerParameter& LayerParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prediction_2fnetwork_5flayers_2eproto();
  return *default_instance_;
}

LayerParameter* LayerParameter::default_instance_ = NULL;

LayerParameter* LayerParameter::New(::google::protobuf::Arena* arena) const {
  LayerParameter* n = new LayerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LayerParameter::clear_oneof_layers() {
// @@protoc_insertion_point(one_of_clear_start:apollo.prediction.LayerParameter)
  switch(oneof_layers_case()) {
    case kInput: {
      delete oneof_layers_.input_;
      break;
    }
    case kActivation: {
      delete oneof_layers_.activation_;
      break;
    }
    case kDense: {
      delete oneof_layers_.dense_;
      break;
    }
    case kBatchNormalization: {
      delete oneof_layers_.batch_normalization_;
      break;
    }
    case kLstm: {
      delete oneof_layers_.lstm_;
      break;
    }
    case kFlatten: {
      delete oneof_layers_.flatten_;
      break;
    }
    case kConcatenate: {
      delete oneof_layers_.concatenate_;
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_LAYERS_NOT_SET;
}


void LayerParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.LayerParameter)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    order_number_ = 0;
  }
  clear_oneof_layers();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LayerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.LayerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LayerParameter.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LayerParameter.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_order_number;
        break;
      }

      // optional int32 order_number = 3;
      case 3: {
        if (tag == 24) {
         parse_order_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_number_)));
          set_has_order_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_input;
        break;
      }

      // optional .apollo.prediction.InputParameter input = 4;
      case 4: {
        if (tag == 34) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_activation;
        break;
      }

      // optional .apollo.prediction.ActivationParameter activation = 5;
      case 5: {
        if (tag == 42) {
         parse_activation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_dense;
        break;
      }

      // optional .apollo.prediction.DenseParameter dense = 6;
      case 6: {
        if (tag == 50) {
         parse_dense:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dense()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_batch_normalization;
        break;
      }

      // optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
      case 7: {
        if (tag == 58) {
         parse_batch_normalization:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batch_normalization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_lstm;
        break;
      }

      // optional .apollo.prediction.LSTMParameter lstm = 8;
      case 8: {
        if (tag == 66) {
         parse_lstm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lstm()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_flatten;
        break;
      }

      // optional .apollo.prediction.FlattenParameter flatten = 9;
      case 9: {
        if (tag == 74) {
         parse_flatten:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_flatten()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_concatenate;
        break;
      }

      // optional .apollo.prediction.ConcatenateParameter concatenate = 10;
      case 10: {
        if (tag == 82) {
         parse_concatenate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_concatenate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.LayerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.LayerParameter)
  return false;
#undef DO_
}

void LayerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.LayerParameter)
  // optional string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 order_number = 3;
  if (has_order_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->order_number(), output);
  }

  // optional .apollo.prediction.InputParameter input = 4;
  if (has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *oneof_layers_.input_, output);
  }

  // optional .apollo.prediction.ActivationParameter activation = 5;
  if (has_activation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *oneof_layers_.activation_, output);
  }

  // optional .apollo.prediction.DenseParameter dense = 6;
  if (has_dense()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *oneof_layers_.dense_, output);
  }

  // optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
  if (has_batch_normalization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *oneof_layers_.batch_normalization_, output);
  }

  // optional .apollo.prediction.LSTMParameter lstm = 8;
  if (has_lstm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *oneof_layers_.lstm_, output);
  }

  // optional .apollo.prediction.FlattenParameter flatten = 9;
  if (has_flatten()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *oneof_layers_.flatten_, output);
  }

  // optional .apollo.prediction.ConcatenateParameter concatenate = 10;
  if (has_concatenate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *oneof_layers_.concatenate_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.LayerParameter)
}

::google::protobuf::uint8* LayerParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.LayerParameter)
  // optional string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 order_number = 3;
  if (has_order_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->order_number(), target);
  }

  // optional .apollo.prediction.InputParameter input = 4;
  if (has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *oneof_layers_.input_, false, target);
  }

  // optional .apollo.prediction.ActivationParameter activation = 5;
  if (has_activation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *oneof_layers_.activation_, false, target);
  }

  // optional .apollo.prediction.DenseParameter dense = 6;
  if (has_dense()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *oneof_layers_.dense_, false, target);
  }

  // optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
  if (has_batch_normalization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *oneof_layers_.batch_normalization_, false, target);
  }

  // optional .apollo.prediction.LSTMParameter lstm = 8;
  if (has_lstm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *oneof_layers_.lstm_, false, target);
  }

  // optional .apollo.prediction.FlattenParameter flatten = 9;
  if (has_flatten()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *oneof_layers_.flatten_, false, target);
  }

  // optional .apollo.prediction.ConcatenateParameter concatenate = 10;
  if (has_concatenate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *oneof_layers_.concatenate_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.LayerParameter)
  return target;
}

int LayerParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.LayerParameter)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 order_number = 3;
    if (has_order_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_number());
    }

  }
  switch (oneof_layers_case()) {
    // optional .apollo.prediction.InputParameter input = 4;
    case kInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.input_);
      break;
    }
    // optional .apollo.prediction.ActivationParameter activation = 5;
    case kActivation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.activation_);
      break;
    }
    // optional .apollo.prediction.DenseParameter dense = 6;
    case kDense: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.dense_);
      break;
    }
    // optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
    case kBatchNormalization: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.batch_normalization_);
      break;
    }
    // optional .apollo.prediction.LSTMParameter lstm = 8;
    case kLstm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.lstm_);
      break;
    }
    // optional .apollo.prediction.FlattenParameter flatten = 9;
    case kFlatten: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.flatten_);
      break;
    }
    // optional .apollo.prediction.ConcatenateParameter concatenate = 10;
    case kConcatenate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.concatenate_);
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.LayerParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LayerParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.LayerParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.LayerParameter)
    MergeFrom(*source);
  }
}

void LayerParameter::MergeFrom(const LayerParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.LayerParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.oneof_layers_case()) {
    case kInput: {
      mutable_input()->::apollo::prediction::InputParameter::MergeFrom(from.input());
      break;
    }
    case kActivation: {
      mutable_activation()->::apollo::prediction::ActivationParameter::MergeFrom(from.activation());
      break;
    }
    case kDense: {
      mutable_dense()->::apollo::prediction::DenseParameter::MergeFrom(from.dense());
      break;
    }
    case kBatchNormalization: {
      mutable_batch_normalization()->::apollo::prediction::BatchNormalizationParameter::MergeFrom(from.batch_normalization());
      break;
    }
    case kLstm: {
      mutable_lstm()->::apollo::prediction::LSTMParameter::MergeFrom(from.lstm());
      break;
    }
    case kFlatten: {
      mutable_flatten()->::apollo::prediction::FlattenParameter::MergeFrom(from.flatten());
      break;
    }
    case kConcatenate: {
      mutable_concatenate()->::apollo::prediction::ConcatenateParameter::MergeFrom(from.concatenate());
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_order_number()) {
      set_order_number(from.order_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.LayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerParameter::CopyFrom(const LayerParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.LayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerParameter::IsInitialized() const {

  return true;
}

void LayerParameter::Swap(LayerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerParameter::InternalSwap(LayerParameter* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(order_number_, other->order_number_);
  std::swap(oneof_layers_, other->oneof_layers_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LayerParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LayerParameter_descriptor_;
  metadata.reflection = LayerParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LayerParameter

// optional string type = 1;
bool LayerParameter::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LayerParameter::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void LayerParameter::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void LayerParameter::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
 const ::std::string& LayerParameter::type() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerParameter::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LayerParameter.type)
}
 void LayerParameter::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LayerParameter.type)
}
 void LayerParameter::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LayerParameter.type)
}
 ::std::string* LayerParameter::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LayerParameter::release_type() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerParameter::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.type)
}

// optional string name = 2;
bool LayerParameter::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LayerParameter::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void LayerParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void LayerParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LayerParameter::name() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LayerParameter.name)
}
 void LayerParameter::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LayerParameter.name)
}
 void LayerParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LayerParameter.name)
}
 ::std::string* LayerParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LayerParameter::release_name() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LayerParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.name)
}

// optional int32 order_number = 3;
bool LayerParameter::has_order_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LayerParameter::set_has_order_number() {
  _has_bits_[0] |= 0x00000004u;
}
void LayerParameter::clear_has_order_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void LayerParameter::clear_order_number() {
  order_number_ = 0;
  clear_has_order_number();
}
 ::google::protobuf::int32 LayerParameter::order_number() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.order_number)
  return order_number_;
}
 void LayerParameter::set_order_number(::google::protobuf::int32 value) {
  set_has_order_number();
  order_number_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LayerParameter.order_number)
}

// optional .apollo.prediction.InputParameter input = 4;
bool LayerParameter::has_input() const {
  return oneof_layers_case() == kInput;
}
void LayerParameter::set_has_input() {
  _oneof_case_[0] = kInput;
}
void LayerParameter::clear_input() {
  if (has_input()) {
    delete oneof_layers_.input_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::InputParameter& LayerParameter::input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.input)
  return has_input()
      ? *oneof_layers_.input_
      : ::apollo::prediction::InputParameter::default_instance();
}
::apollo::prediction::InputParameter* LayerParameter::mutable_input() {
  if (!has_input()) {
    clear_oneof_layers();
    set_has_input();
    oneof_layers_.input_ = new ::apollo::prediction::InputParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.input)
  return oneof_layers_.input_;
}
::apollo::prediction::InputParameter* LayerParameter::release_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.input)
  if (has_input()) {
    clear_has_oneof_layers();
    ::apollo::prediction::InputParameter* temp = oneof_layers_.input_;
    oneof_layers_.input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_input(::apollo::prediction::InputParameter* input) {
  clear_oneof_layers();
  if (input) {
    set_has_input();
    oneof_layers_.input_ = input;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.input)
}

// optional .apollo.prediction.ActivationParameter activation = 5;
bool LayerParameter::has_activation() const {
  return oneof_layers_case() == kActivation;
}
void LayerParameter::set_has_activation() {
  _oneof_case_[0] = kActivation;
}
void LayerParameter::clear_activation() {
  if (has_activation()) {
    delete oneof_layers_.activation_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::ActivationParameter& LayerParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.activation)
  return has_activation()
      ? *oneof_layers_.activation_
      : ::apollo::prediction::ActivationParameter::default_instance();
}
::apollo::prediction::ActivationParameter* LayerParameter::mutable_activation() {
  if (!has_activation()) {
    clear_oneof_layers();
    set_has_activation();
    oneof_layers_.activation_ = new ::apollo::prediction::ActivationParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.activation)
  return oneof_layers_.activation_;
}
::apollo::prediction::ActivationParameter* LayerParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.activation)
  if (has_activation()) {
    clear_has_oneof_layers();
    ::apollo::prediction::ActivationParameter* temp = oneof_layers_.activation_;
    oneof_layers_.activation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_activation(::apollo::prediction::ActivationParameter* activation) {
  clear_oneof_layers();
  if (activation) {
    set_has_activation();
    oneof_layers_.activation_ = activation;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.activation)
}

// optional .apollo.prediction.DenseParameter dense = 6;
bool LayerParameter::has_dense() const {
  return oneof_layers_case() == kDense;
}
void LayerParameter::set_has_dense() {
  _oneof_case_[0] = kDense;
}
void LayerParameter::clear_dense() {
  if (has_dense()) {
    delete oneof_layers_.dense_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::DenseParameter& LayerParameter::dense() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.dense)
  return has_dense()
      ? *oneof_layers_.dense_
      : ::apollo::prediction::DenseParameter::default_instance();
}
::apollo::prediction::DenseParameter* LayerParameter::mutable_dense() {
  if (!has_dense()) {
    clear_oneof_layers();
    set_has_dense();
    oneof_layers_.dense_ = new ::apollo::prediction::DenseParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.dense)
  return oneof_layers_.dense_;
}
::apollo::prediction::DenseParameter* LayerParameter::release_dense() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.dense)
  if (has_dense()) {
    clear_has_oneof_layers();
    ::apollo::prediction::DenseParameter* temp = oneof_layers_.dense_;
    oneof_layers_.dense_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_dense(::apollo::prediction::DenseParameter* dense) {
  clear_oneof_layers();
  if (dense) {
    set_has_dense();
    oneof_layers_.dense_ = dense;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.dense)
}

// optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
bool LayerParameter::has_batch_normalization() const {
  return oneof_layers_case() == kBatchNormalization;
}
void LayerParameter::set_has_batch_normalization() {
  _oneof_case_[0] = kBatchNormalization;
}
void LayerParameter::clear_batch_normalization() {
  if (has_batch_normalization()) {
    delete oneof_layers_.batch_normalization_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::BatchNormalizationParameter& LayerParameter::batch_normalization() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.batch_normalization)
  return has_batch_normalization()
      ? *oneof_layers_.batch_normalization_
      : ::apollo::prediction::BatchNormalizationParameter::default_instance();
}
::apollo::prediction::BatchNormalizationParameter* LayerParameter::mutable_batch_normalization() {
  if (!has_batch_normalization()) {
    clear_oneof_layers();
    set_has_batch_normalization();
    oneof_layers_.batch_normalization_ = new ::apollo::prediction::BatchNormalizationParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.batch_normalization)
  return oneof_layers_.batch_normalization_;
}
::apollo::prediction::BatchNormalizationParameter* LayerParameter::release_batch_normalization() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.batch_normalization)
  if (has_batch_normalization()) {
    clear_has_oneof_layers();
    ::apollo::prediction::BatchNormalizationParameter* temp = oneof_layers_.batch_normalization_;
    oneof_layers_.batch_normalization_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_batch_normalization(::apollo::prediction::BatchNormalizationParameter* batch_normalization) {
  clear_oneof_layers();
  if (batch_normalization) {
    set_has_batch_normalization();
    oneof_layers_.batch_normalization_ = batch_normalization;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.batch_normalization)
}

// optional .apollo.prediction.LSTMParameter lstm = 8;
bool LayerParameter::has_lstm() const {
  return oneof_layers_case() == kLstm;
}
void LayerParameter::set_has_lstm() {
  _oneof_case_[0] = kLstm;
}
void LayerParameter::clear_lstm() {
  if (has_lstm()) {
    delete oneof_layers_.lstm_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::LSTMParameter& LayerParameter::lstm() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.lstm)
  return has_lstm()
      ? *oneof_layers_.lstm_
      : ::apollo::prediction::LSTMParameter::default_instance();
}
::apollo::prediction::LSTMParameter* LayerParameter::mutable_lstm() {
  if (!has_lstm()) {
    clear_oneof_layers();
    set_has_lstm();
    oneof_layers_.lstm_ = new ::apollo::prediction::LSTMParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.lstm)
  return oneof_layers_.lstm_;
}
::apollo::prediction::LSTMParameter* LayerParameter::release_lstm() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.lstm)
  if (has_lstm()) {
    clear_has_oneof_layers();
    ::apollo::prediction::LSTMParameter* temp = oneof_layers_.lstm_;
    oneof_layers_.lstm_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_lstm(::apollo::prediction::LSTMParameter* lstm) {
  clear_oneof_layers();
  if (lstm) {
    set_has_lstm();
    oneof_layers_.lstm_ = lstm;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.lstm)
}

// optional .apollo.prediction.FlattenParameter flatten = 9;
bool LayerParameter::has_flatten() const {
  return oneof_layers_case() == kFlatten;
}
void LayerParameter::set_has_flatten() {
  _oneof_case_[0] = kFlatten;
}
void LayerParameter::clear_flatten() {
  if (has_flatten()) {
    delete oneof_layers_.flatten_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::FlattenParameter& LayerParameter::flatten() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.flatten)
  return has_flatten()
      ? *oneof_layers_.flatten_
      : ::apollo::prediction::FlattenParameter::default_instance();
}
::apollo::prediction::FlattenParameter* LayerParameter::mutable_flatten() {
  if (!has_flatten()) {
    clear_oneof_layers();
    set_has_flatten();
    oneof_layers_.flatten_ = new ::apollo::prediction::FlattenParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.flatten)
  return oneof_layers_.flatten_;
}
::apollo::prediction::FlattenParameter* LayerParameter::release_flatten() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.flatten)
  if (has_flatten()) {
    clear_has_oneof_layers();
    ::apollo::prediction::FlattenParameter* temp = oneof_layers_.flatten_;
    oneof_layers_.flatten_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_flatten(::apollo::prediction::FlattenParameter* flatten) {
  clear_oneof_layers();
  if (flatten) {
    set_has_flatten();
    oneof_layers_.flatten_ = flatten;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.flatten)
}

// optional .apollo.prediction.ConcatenateParameter concatenate = 10;
bool LayerParameter::has_concatenate() const {
  return oneof_layers_case() == kConcatenate;
}
void LayerParameter::set_has_concatenate() {
  _oneof_case_[0] = kConcatenate;
}
void LayerParameter::clear_concatenate() {
  if (has_concatenate()) {
    delete oneof_layers_.concatenate_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::ConcatenateParameter& LayerParameter::concatenate() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.concatenate)
  return has_concatenate()
      ? *oneof_layers_.concatenate_
      : ::apollo::prediction::ConcatenateParameter::default_instance();
}
::apollo::prediction::ConcatenateParameter* LayerParameter::mutable_concatenate() {
  if (!has_concatenate()) {
    clear_oneof_layers();
    set_has_concatenate();
    oneof_layers_.concatenate_ = new ::apollo::prediction::ConcatenateParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.concatenate)
  return oneof_layers_.concatenate_;
}
::apollo::prediction::ConcatenateParameter* LayerParameter::release_concatenate() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.concatenate)
  if (has_concatenate()) {
    clear_has_oneof_layers();
    ::apollo::prediction::ConcatenateParameter* temp = oneof_layers_.concatenate_;
    oneof_layers_.concatenate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_concatenate(::apollo::prediction::ConcatenateParameter* concatenate) {
  clear_oneof_layers();
  if (concatenate) {
    set_has_concatenate();
    oneof_layers_.concatenate_ = concatenate;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.concatenate)
}

bool LayerParameter::has_oneof_layers() const {
  return oneof_layers_case() != ONEOF_LAYERS_NOT_SET;
}
void LayerParameter::clear_has_oneof_layers() {
  _oneof_case_[0] = ONEOF_LAYERS_NOT_SET;
}
LayerParameter::OneofLayersCase LayerParameter::oneof_layers_case() const {
  return LayerParameter::OneofLayersCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
