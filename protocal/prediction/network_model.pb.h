// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/network_model.proto

#ifndef PROTOBUF_prediction_2fnetwork_5fmodel_2eproto__INCLUDED
#define PROTOBUF_prediction_2fnetwork_5fmodel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "prediction/network_layers.pb.h"
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_prediction_2fnetwork_5fmodel_2eproto();
void protobuf_AssignDesc_prediction_2fnetwork_5fmodel_2eproto();
void protobuf_ShutdownFile_prediction_2fnetwork_5fmodel_2eproto();

class NetParameter;
class Performance;
class VerificationSample;

// ===================================================================

class VerificationSample : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.VerificationSample) */ {
 public:
  VerificationSample();
  virtual ~VerificationSample();

  VerificationSample(const VerificationSample& from);

  inline VerificationSample& operator=(const VerificationSample& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerificationSample& default_instance();

  void Swap(VerificationSample* other);

  // implements Message ----------------------------------------------

  inline VerificationSample* New() const { return New(NULL); }

  VerificationSample* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VerificationSample& from);
  void MergeFrom(const VerificationSample& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VerificationSample* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.TensorParameter features = 1;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 1;
  const ::apollo::prediction::TensorParameter& features(int index) const;
  ::apollo::prediction::TensorParameter* mutable_features(int index);
  ::apollo::prediction::TensorParameter* add_features();
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter >&
      features() const;

  // optional float probability = 2;
  bool has_probability() const;
  void clear_probability();
  static const int kProbabilityFieldNumber = 2;
  float probability() const;
  void set_probability(float value);

  // optional float distance = 3;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 3;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.VerificationSample)
 private:
  inline void set_has_probability();
  inline void clear_has_probability();
  inline void set_has_distance();
  inline void clear_has_distance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter > features_;
  float probability_;
  float distance_;
  friend void  protobuf_AddDesc_prediction_2fnetwork_5fmodel_2eproto();
  friend void protobuf_AssignDesc_prediction_2fnetwork_5fmodel_2eproto();
  friend void protobuf_ShutdownFile_prediction_2fnetwork_5fmodel_2eproto();

  void InitAsDefaultInstance();
  static VerificationSample* default_instance_;
};
// -------------------------------------------------------------------

class Performance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.Performance) */ {
 public:
  Performance();
  virtual ~Performance();

  Performance(const Performance& from);

  inline Performance& operator=(const Performance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Performance& default_instance();

  void Swap(Performance* other);

  // implements Message ----------------------------------------------

  inline Performance* New() const { return New(NULL); }

  Performance* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Performance& from);
  void MergeFrom(const Performance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Performance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float accuracy = 1;
  int accuracy_size() const;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 1;
  float accuracy(int index) const;
  void set_accuracy(int index, float value);
  void add_accuracy(float value);
  const ::google::protobuf::RepeatedField< float >&
      accuracy() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_accuracy();

  // repeated float recall = 2;
  int recall_size() const;
  void clear_recall();
  static const int kRecallFieldNumber = 2;
  float recall(int index) const;
  void set_recall(int index, float value);
  void add_recall(float value);
  const ::google::protobuf::RepeatedField< float >&
      recall() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_recall();

  // repeated float precision = 3;
  int precision_size() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 3;
  float precision(int index) const;
  void set_precision(int index, float value);
  void add_precision(float value);
  const ::google::protobuf::RepeatedField< float >&
      precision() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_precision();

  // @@protoc_insertion_point(class_scope:apollo.prediction.Performance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > accuracy_;
  ::google::protobuf::RepeatedField< float > recall_;
  ::google::protobuf::RepeatedField< float > precision_;
  friend void  protobuf_AddDesc_prediction_2fnetwork_5fmodel_2eproto();
  friend void protobuf_AssignDesc_prediction_2fnetwork_5fmodel_2eproto();
  friend void protobuf_ShutdownFile_prediction_2fnetwork_5fmodel_2eproto();

  void InitAsDefaultInstance();
  static Performance* default_instance_;
};
// -------------------------------------------------------------------

class NetParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.NetParameter) */ {
 public:
  NetParameter();
  virtual ~NetParameter();

  NetParameter(const NetParameter& from);

  inline NetParameter& operator=(const NetParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParameter& default_instance();

  void Swap(NetParameter* other);

  // implements Message ----------------------------------------------

  inline NetParameter* New() const { return New(NULL); }

  NetParameter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParameter& from);
  void MergeFrom(const NetParameter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .apollo.prediction.LayerParameter layers = 3;
  int layers_size() const;
  void clear_layers();
  static const int kLayersFieldNumber = 3;
  const ::apollo::prediction::LayerParameter& layers(int index) const;
  ::apollo::prediction::LayerParameter* mutable_layers(int index);
  ::apollo::prediction::LayerParameter* add_layers();
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter >*
      mutable_layers();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter >&
      layers() const;

  // repeated .apollo.prediction.VerificationSample verification_samples = 4;
  int verification_samples_size() const;
  void clear_verification_samples();
  static const int kVerificationSamplesFieldNumber = 4;
  const ::apollo::prediction::VerificationSample& verification_samples(int index) const;
  ::apollo::prediction::VerificationSample* mutable_verification_samples(int index);
  ::apollo::prediction::VerificationSample* add_verification_samples();
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample >*
      mutable_verification_samples();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample >&
      verification_samples() const;

  // optional .apollo.prediction.Performance performance = 5;
  bool has_performance() const;
  void clear_performance();
  static const int kPerformanceFieldNumber = 5;
  const ::apollo::prediction::Performance& performance() const;
  ::apollo::prediction::Performance* mutable_performance();
  ::apollo::prediction::Performance* release_performance();
  void set_allocated_performance(::apollo::prediction::Performance* performance);

  // optional float time_dumped = 6;
  bool has_time_dumped() const;
  void clear_time_dumped();
  static const int kTimeDumpedFieldNumber = 6;
  float time_dumped() const;
  void set_time_dumped(float value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.NetParameter)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_performance();
  inline void clear_has_performance();
  inline void set_has_time_dumped();
  inline void clear_has_time_dumped();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter > layers_;
  ::google::protobuf::int32 id_;
  float time_dumped_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample > verification_samples_;
  ::apollo::prediction::Performance* performance_;
  friend void  protobuf_AddDesc_prediction_2fnetwork_5fmodel_2eproto();
  friend void protobuf_AssignDesc_prediction_2fnetwork_5fmodel_2eproto();
  friend void protobuf_ShutdownFile_prediction_2fnetwork_5fmodel_2eproto();

  void InitAsDefaultInstance();
  static NetParameter* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VerificationSample

// repeated .apollo.prediction.TensorParameter features = 1;
inline int VerificationSample::features_size() const {
  return features_.size();
}
inline void VerificationSample::clear_features() {
  features_.Clear();
}
inline const ::apollo::prediction::TensorParameter& VerificationSample::features(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.VerificationSample.features)
  return features_.Get(index);
}
inline ::apollo::prediction::TensorParameter* VerificationSample::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.VerificationSample.features)
  return features_.Mutable(index);
}
inline ::apollo::prediction::TensorParameter* VerificationSample::add_features() {
  // @@protoc_insertion_point(field_add:apollo.prediction.VerificationSample.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter >*
VerificationSample::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.VerificationSample.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter >&
VerificationSample::features() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.VerificationSample.features)
  return features_;
}

// optional float probability = 2;
inline bool VerificationSample::has_probability() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerificationSample::set_has_probability() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerificationSample::clear_has_probability() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerificationSample::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
inline float VerificationSample::probability() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.VerificationSample.probability)
  return probability_;
}
inline void VerificationSample::set_probability(float value) {
  set_has_probability();
  probability_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.VerificationSample.probability)
}

// optional float distance = 3;
inline bool VerificationSample::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerificationSample::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerificationSample::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerificationSample::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float VerificationSample::distance() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.VerificationSample.distance)
  return distance_;
}
inline void VerificationSample::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.VerificationSample.distance)
}

// -------------------------------------------------------------------

// Performance

// repeated float accuracy = 1;
inline int Performance::accuracy_size() const {
  return accuracy_.size();
}
inline void Performance::clear_accuracy() {
  accuracy_.Clear();
}
inline float Performance::accuracy(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Performance.accuracy)
  return accuracy_.Get(index);
}
inline void Performance::set_accuracy(int index, float value) {
  accuracy_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Performance.accuracy)
}
inline void Performance::add_accuracy(float value) {
  accuracy_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Performance.accuracy)
}
inline const ::google::protobuf::RepeatedField< float >&
Performance::accuracy() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Performance.accuracy)
  return accuracy_;
}
inline ::google::protobuf::RepeatedField< float >*
Performance::mutable_accuracy() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Performance.accuracy)
  return &accuracy_;
}

// repeated float recall = 2;
inline int Performance::recall_size() const {
  return recall_.size();
}
inline void Performance::clear_recall() {
  recall_.Clear();
}
inline float Performance::recall(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Performance.recall)
  return recall_.Get(index);
}
inline void Performance::set_recall(int index, float value) {
  recall_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Performance.recall)
}
inline void Performance::add_recall(float value) {
  recall_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Performance.recall)
}
inline const ::google::protobuf::RepeatedField< float >&
Performance::recall() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Performance.recall)
  return recall_;
}
inline ::google::protobuf::RepeatedField< float >*
Performance::mutable_recall() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Performance.recall)
  return &recall_;
}

// repeated float precision = 3;
inline int Performance::precision_size() const {
  return precision_.size();
}
inline void Performance::clear_precision() {
  precision_.Clear();
}
inline float Performance::precision(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Performance.precision)
  return precision_.Get(index);
}
inline void Performance::set_precision(int index, float value) {
  precision_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Performance.precision)
}
inline void Performance::add_precision(float value) {
  precision_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Performance.precision)
}
inline const ::google::protobuf::RepeatedField< float >&
Performance::precision() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Performance.precision)
  return precision_;
}
inline ::google::protobuf::RepeatedField< float >*
Performance::mutable_precision() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Performance.precision)
  return &precision_;
}

// -------------------------------------------------------------------

// NetParameter

// optional int32 id = 1;
inline bool NetParameter::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetParameter::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetParameter::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetParameter::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 NetParameter::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.id)
  return id_;
}
inline void NetParameter::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.NetParameter.id)
}

// optional string name = 2;
inline bool NetParameter::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetParameter::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& NetParameter::name() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.NetParameter.name)
}
inline void NetParameter::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.NetParameter.name)
}
inline void NetParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.NetParameter.name)
}
inline ::std::string* NetParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetParameter::release_name() {
  // @@protoc_insertion_point(field_release:apollo.prediction.NetParameter.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.NetParameter.name)
}

// repeated .apollo.prediction.LayerParameter layers = 3;
inline int NetParameter::layers_size() const {
  return layers_.size();
}
inline void NetParameter::clear_layers() {
  layers_.Clear();
}
inline const ::apollo::prediction::LayerParameter& NetParameter::layers(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.layers)
  return layers_.Get(index);
}
inline ::apollo::prediction::LayerParameter* NetParameter::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.layers)
  return layers_.Mutable(index);
}
inline ::apollo::prediction::LayerParameter* NetParameter::add_layers() {
  // @@protoc_insertion_point(field_add:apollo.prediction.NetParameter.layers)
  return layers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter >*
NetParameter::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.NetParameter.layers)
  return &layers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter >&
NetParameter::layers() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.NetParameter.layers)
  return layers_;
}

// repeated .apollo.prediction.VerificationSample verification_samples = 4;
inline int NetParameter::verification_samples_size() const {
  return verification_samples_.size();
}
inline void NetParameter::clear_verification_samples() {
  verification_samples_.Clear();
}
inline const ::apollo::prediction::VerificationSample& NetParameter::verification_samples(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_.Get(index);
}
inline ::apollo::prediction::VerificationSample* NetParameter::mutable_verification_samples(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_.Mutable(index);
}
inline ::apollo::prediction::VerificationSample* NetParameter::add_verification_samples() {
  // @@protoc_insertion_point(field_add:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample >*
NetParameter::mutable_verification_samples() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.NetParameter.verification_samples)
  return &verification_samples_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample >&
NetParameter::verification_samples() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_;
}

// optional .apollo.prediction.Performance performance = 5;
inline bool NetParameter::has_performance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NetParameter::set_has_performance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NetParameter::clear_has_performance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NetParameter::clear_performance() {
  if (performance_ != NULL) performance_->::apollo::prediction::Performance::Clear();
  clear_has_performance();
}
inline const ::apollo::prediction::Performance& NetParameter::performance() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.performance)
  return performance_ != NULL ? *performance_ : *default_instance_->performance_;
}
inline ::apollo::prediction::Performance* NetParameter::mutable_performance() {
  set_has_performance();
  if (performance_ == NULL) {
    performance_ = new ::apollo::prediction::Performance;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.performance)
  return performance_;
}
inline ::apollo::prediction::Performance* NetParameter::release_performance() {
  // @@protoc_insertion_point(field_release:apollo.prediction.NetParameter.performance)
  clear_has_performance();
  ::apollo::prediction::Performance* temp = performance_;
  performance_ = NULL;
  return temp;
}
inline void NetParameter::set_allocated_performance(::apollo::prediction::Performance* performance) {
  delete performance_;
  performance_ = performance;
  if (performance) {
    set_has_performance();
  } else {
    clear_has_performance();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.NetParameter.performance)
}

// optional float time_dumped = 6;
inline bool NetParameter::has_time_dumped() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NetParameter::set_has_time_dumped() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NetParameter::clear_has_time_dumped() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NetParameter::clear_time_dumped() {
  time_dumped_ = 0;
  clear_has_time_dumped();
}
inline float NetParameter::time_dumped() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.time_dumped)
  return time_dumped_;
}
inline void NetParameter::set_time_dumped(float value) {
  set_has_time_dumped();
  time_dumped_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.NetParameter.time_dumped)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_prediction_2fnetwork_5fmodel_2eproto__INCLUDED
