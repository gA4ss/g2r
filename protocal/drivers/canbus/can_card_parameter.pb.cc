// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: drivers/canbus/can_card_parameter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "drivers/canbus/can_card_parameter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace drivers {
namespace canbus {

namespace {

const ::google::protobuf::Descriptor* CANCardParameter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CANCardParameter_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CANCardParameter_CANCardBrand_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CANCardParameter_CANCardType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CANCardParameter_CANChannelId_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto() {
  protobuf_AddDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "drivers/canbus/can_card_parameter.proto");
  GOOGLE_CHECK(file != NULL);
  CANCardParameter_descriptor_ = file->message_type(0);
  static const int CANCardParameter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANCardParameter, brand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANCardParameter, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANCardParameter, channel_id_),
  };
  CANCardParameter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CANCardParameter_descriptor_,
      CANCardParameter::default_instance_,
      CANCardParameter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANCardParameter, _has_bits_[0]),
      -1,
      -1,
      sizeof(CANCardParameter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CANCardParameter, _internal_metadata_),
      -1);
  CANCardParameter_CANCardBrand_descriptor_ = CANCardParameter_descriptor_->enum_type(0);
  CANCardParameter_CANCardType_descriptor_ = CANCardParameter_descriptor_->enum_type(1);
  CANCardParameter_CANChannelId_descriptor_ = CANCardParameter_descriptor_->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CANCardParameter_descriptor_, &CANCardParameter::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto() {
  delete CANCardParameter::default_instance_;
  delete CANCardParameter_reflection_;
}

void protobuf_AddDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'drivers/canbus/can_card_parameter.prot"
    "o\022\025apollo.drivers.canbus\"\301\003\n\020CANCardPara"
    "meter\022C\n\005brand\030\001 \001(\01624.apollo.drivers.ca"
    "nbus.CANCardParameter.CANCardBrand\022A\n\004ty"
    "pe\030\002 \001(\01623.apollo.drivers.canbus.CANCard"
    "Parameter.CANCardType\022H\n\nchannel_id\030\003 \001("
    "\01624.apollo.drivers.canbus.CANCardParamet"
    "er.CANChannelId\"M\n\014CANCardBrand\022\014\n\010FAKE_"
    "CAN\020\000\022\013\n\007ESD_CAN\020\001\022\022\n\016SOCKET_CAN_RAW\020\002\022\016"
    "\n\nHERMES_CAN\020\003\")\n\013CANCardType\022\014\n\010PCI_CAR"
    "D\020\000\022\014\n\010USB_CARD\020\001\"a\n\014CANChannelId\022\023\n\017CHA"
    "NNEL_ID_ZERO\020\000\022\022\n\016CHANNEL_ID_ONE\020\001\022\022\n\016CH"
    "ANNEL_ID_TWO\020\002\022\024\n\020CHANNEL_ID_THREE\020\003", 516);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "drivers/canbus/can_card_parameter.proto", &protobuf_RegisterTypes);
  CANCardParameter::default_instance_ = new CANCardParameter();
  CANCardParameter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto {
  StaticDescriptorInitializer_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto() {
    protobuf_AddDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto();
  }
} static_descriptor_initializer_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CANCardParameter_CANCardBrand_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CANCardParameter_CANCardBrand_descriptor_;
}
bool CANCardParameter_CANCardBrand_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CANCardParameter_CANCardBrand CANCardParameter::FAKE_CAN;
const CANCardParameter_CANCardBrand CANCardParameter::ESD_CAN;
const CANCardParameter_CANCardBrand CANCardParameter::SOCKET_CAN_RAW;
const CANCardParameter_CANCardBrand CANCardParameter::HERMES_CAN;
const CANCardParameter_CANCardBrand CANCardParameter::CANCardBrand_MIN;
const CANCardParameter_CANCardBrand CANCardParameter::CANCardBrand_MAX;
const int CANCardParameter::CANCardBrand_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CANCardParameter_CANCardType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CANCardParameter_CANCardType_descriptor_;
}
bool CANCardParameter_CANCardType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CANCardParameter_CANCardType CANCardParameter::PCI_CARD;
const CANCardParameter_CANCardType CANCardParameter::USB_CARD;
const CANCardParameter_CANCardType CANCardParameter::CANCardType_MIN;
const CANCardParameter_CANCardType CANCardParameter::CANCardType_MAX;
const int CANCardParameter::CANCardType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CANCardParameter_CANChannelId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CANCardParameter_CANChannelId_descriptor_;
}
bool CANCardParameter_CANChannelId_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CANCardParameter_CANChannelId CANCardParameter::CHANNEL_ID_ZERO;
const CANCardParameter_CANChannelId CANCardParameter::CHANNEL_ID_ONE;
const CANCardParameter_CANChannelId CANCardParameter::CHANNEL_ID_TWO;
const CANCardParameter_CANChannelId CANCardParameter::CHANNEL_ID_THREE;
const CANCardParameter_CANChannelId CANCardParameter::CANChannelId_MIN;
const CANCardParameter_CANChannelId CANCardParameter::CANChannelId_MAX;
const int CANCardParameter::CANChannelId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CANCardParameter::kBrandFieldNumber;
const int CANCardParameter::kTypeFieldNumber;
const int CANCardParameter::kChannelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CANCardParameter::CANCardParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.drivers.canbus.CANCardParameter)
}

void CANCardParameter::InitAsDefaultInstance() {
}

CANCardParameter::CANCardParameter(const CANCardParameter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.drivers.canbus.CANCardParameter)
}

void CANCardParameter::SharedCtor() {
  _cached_size_ = 0;
  brand_ = 0;
  type_ = 0;
  channel_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CANCardParameter::~CANCardParameter() {
  // @@protoc_insertion_point(destructor:apollo.drivers.canbus.CANCardParameter)
  SharedDtor();
}

void CANCardParameter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CANCardParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CANCardParameter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CANCardParameter_descriptor_;
}

const CANCardParameter& CANCardParameter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drivers_2fcanbus_2fcan_5fcard_5fparameter_2eproto();
  return *default_instance_;
}

CANCardParameter* CANCardParameter::default_instance_ = NULL;

CANCardParameter* CANCardParameter::New(::google::protobuf::Arena* arena) const {
  CANCardParameter* n = new CANCardParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CANCardParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.drivers.canbus.CANCardParameter)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CANCardParameter, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CANCardParameter*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(brand_, channel_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CANCardParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.drivers.canbus.CANCardParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.drivers.canbus.CANCardParameter.CANCardBrand brand = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::drivers::canbus::CANCardParameter_CANCardBrand_IsValid(value)) {
            set_brand(static_cast< ::apollo::drivers::canbus::CANCardParameter_CANCardBrand >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .apollo.drivers.canbus.CANCardParameter.CANCardType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::drivers::canbus::CANCardParameter_CANCardType_IsValid(value)) {
            set_type(static_cast< ::apollo::drivers::canbus::CANCardParameter_CANCardType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_channel_id;
        break;
      }

      // optional .apollo.drivers.canbus.CANCardParameter.CANChannelId channel_id = 3;
      case 3: {
        if (tag == 24) {
         parse_channel_id:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::drivers::canbus::CANCardParameter_CANChannelId_IsValid(value)) {
            set_channel_id(static_cast< ::apollo::drivers::canbus::CANCardParameter_CANChannelId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.drivers.canbus.CANCardParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.drivers.canbus.CANCardParameter)
  return false;
#undef DO_
}

void CANCardParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.drivers.canbus.CANCardParameter)
  // optional .apollo.drivers.canbus.CANCardParameter.CANCardBrand brand = 1;
  if (has_brand()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->brand(), output);
  }

  // optional .apollo.drivers.canbus.CANCardParameter.CANCardType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .apollo.drivers.canbus.CANCardParameter.CANChannelId channel_id = 3;
  if (has_channel_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->channel_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.drivers.canbus.CANCardParameter)
}

::google::protobuf::uint8* CANCardParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.drivers.canbus.CANCardParameter)
  // optional .apollo.drivers.canbus.CANCardParameter.CANCardBrand brand = 1;
  if (has_brand()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->brand(), target);
  }

  // optional .apollo.drivers.canbus.CANCardParameter.CANCardType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .apollo.drivers.canbus.CANCardParameter.CANChannelId channel_id = 3;
  if (has_channel_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->channel_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.drivers.canbus.CANCardParameter)
  return target;
}

int CANCardParameter::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.drivers.canbus.CANCardParameter)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.drivers.canbus.CANCardParameter.CANCardBrand brand = 1;
    if (has_brand()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->brand());
    }

    // optional .apollo.drivers.canbus.CANCardParameter.CANCardType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .apollo.drivers.canbus.CANCardParameter.CANChannelId channel_id = 3;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CANCardParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.drivers.canbus.CANCardParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CANCardParameter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CANCardParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.drivers.canbus.CANCardParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.drivers.canbus.CANCardParameter)
    MergeFrom(*source);
  }
}

void CANCardParameter::MergeFrom(const CANCardParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.drivers.canbus.CANCardParameter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_brand()) {
      set_brand(from.brand());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_channel_id()) {
      set_channel_id(from.channel_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CANCardParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.drivers.canbus.CANCardParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CANCardParameter::CopyFrom(const CANCardParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.drivers.canbus.CANCardParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CANCardParameter::IsInitialized() const {

  return true;
}

void CANCardParameter::Swap(CANCardParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CANCardParameter::InternalSwap(CANCardParameter* other) {
  std::swap(brand_, other->brand_);
  std::swap(type_, other->type_);
  std::swap(channel_id_, other->channel_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CANCardParameter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CANCardParameter_descriptor_;
  metadata.reflection = CANCardParameter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CANCardParameter

// optional .apollo.drivers.canbus.CANCardParameter.CANCardBrand brand = 1;
bool CANCardParameter::has_brand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CANCardParameter::set_has_brand() {
  _has_bits_[0] |= 0x00000001u;
}
void CANCardParameter::clear_has_brand() {
  _has_bits_[0] &= ~0x00000001u;
}
void CANCardParameter::clear_brand() {
  brand_ = 0;
  clear_has_brand();
}
 ::apollo::drivers::canbus::CANCardParameter_CANCardBrand CANCardParameter::brand() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.canbus.CANCardParameter.brand)
  return static_cast< ::apollo::drivers::canbus::CANCardParameter_CANCardBrand >(brand_);
}
 void CANCardParameter::set_brand(::apollo::drivers::canbus::CANCardParameter_CANCardBrand value) {
  assert(::apollo::drivers::canbus::CANCardParameter_CANCardBrand_IsValid(value));
  set_has_brand();
  brand_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.canbus.CANCardParameter.brand)
}

// optional .apollo.drivers.canbus.CANCardParameter.CANCardType type = 2;
bool CANCardParameter::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CANCardParameter::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CANCardParameter::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CANCardParameter::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::apollo::drivers::canbus::CANCardParameter_CANCardType CANCardParameter::type() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.canbus.CANCardParameter.type)
  return static_cast< ::apollo::drivers::canbus::CANCardParameter_CANCardType >(type_);
}
 void CANCardParameter::set_type(::apollo::drivers::canbus::CANCardParameter_CANCardType value) {
  assert(::apollo::drivers::canbus::CANCardParameter_CANCardType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.canbus.CANCardParameter.type)
}

// optional .apollo.drivers.canbus.CANCardParameter.CANChannelId channel_id = 3;
bool CANCardParameter::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CANCardParameter::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CANCardParameter::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CANCardParameter::clear_channel_id() {
  channel_id_ = 0;
  clear_has_channel_id();
}
 ::apollo::drivers::canbus::CANCardParameter_CANChannelId CANCardParameter::channel_id() const {
  // @@protoc_insertion_point(field_get:apollo.drivers.canbus.CANCardParameter.channel_id)
  return static_cast< ::apollo::drivers::canbus::CANCardParameter_CANChannelId >(channel_id_);
}
 void CANCardParameter::set_channel_id(::apollo::drivers::canbus::CANCardParameter_CANChannelId value) {
  assert(::apollo::drivers::canbus::CANCardParameter_CANChannelId_IsValid(value));
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:apollo.drivers.canbus.CANCardParameter.channel_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace drivers
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
